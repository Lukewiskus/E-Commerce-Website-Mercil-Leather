[{"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\index.js":"1","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\App.js":"2","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\createStore.js":"3","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\User\\user.actions.js":"4","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\hoc\\withAdminAuth.js":"5","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\layouts\\MainLayout.js":"6","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\hoc\\withAuth.js":"7","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\layouts\\AdminLayout.js":"8","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\layouts\\HomepageLayout.js":"9","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\rootReducer.js":"10","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\rootSaga.js":"11","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Cart\\index.js":"12","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Homepage\\index.js":"13","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Login\\index.js":"14","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Recovery\\index.js":"15","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Register\\index.js":"16","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\ProductDetails\\index.js":"17","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Admin\\index.js":"18","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\User\\user.types.js":"19","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\User\\user.reducer.js":"20","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\User\\user.sagas.js":"21","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Products\\products.reducer.js":"22","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Products\\products.sagas.js":"23","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Cart\\cart.reducer.js":"24","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Products\\products.actions.js":"25","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\VerticalNav\\index.js":"26","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\customHooks\\index.js":"27","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\header\\index.js":"28","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\User\\user.helpers.js":"29","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Cart\\cart.types.js":"30","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Products\\products.types.js":"31","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Cart\\cart.utils.js":"32","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Products\\products.helpers.js":"33","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\firebase\\utils.js":"34","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\Utils\\index.js":"35","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\Loadmore\\index.js":"36","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\customHooks\\useAuth.js":"37","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\customHooks\\useAdminAuth.js":"38","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\forms\\Button\\index.js":"39","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\forms\\FormInput\\index.js":"40","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\forms\\FormSelect\\index.js":"41","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Cart\\cart.selectors.js":"42","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\firebase\\config.js":"43","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\UserProfile\\index.js":"44","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Cart\\cart.actions.js":"45","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\AuthWrapper\\index.js":"46","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Payment\\index.js":"47","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\stripe\\config.js":"48","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\Modal\\AddProductModal\\index.js":"49","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\Modal\\EditProductModal\\index.js":"50","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\EditProductPage\\index.js":"51","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\header\\NavbarData\\index.js":"52","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Cart\\Item\\index.js":"53","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Payment\\PaymentDetails\\index.js":"54","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Products\\index.js":"55","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Products\\Product\\index.js":"56","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\Footer\\index.js":"57","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Contact\\index.js":"58"},{"size":841,"mtime":1609489805252,"results":"59","hashOfConfig":"60"},{"size":4248,"mtime":1610172016517,"results":"61","hashOfConfig":"60"},{"size":623,"mtime":1609489805281,"results":"62","hashOfConfig":"60"},{"size":1486,"mtime":1609489805278,"results":"63","hashOfConfig":"60"},{"size":253,"mtime":1609489805251,"results":"64","hashOfConfig":"60"},{"size":555,"mtime":1610170666494,"results":"65","hashOfConfig":"60"},{"size":326,"mtime":1609489805251,"results":"66","hashOfConfig":"60"},{"size":1139,"mtime":1609489805253,"results":"67","hashOfConfig":"60"},{"size":364,"mtime":1610170742377,"results":"68","hashOfConfig":"60"},{"size":752,"mtime":1609489805282,"results":"69","hashOfConfig":"60"},{"size":396,"mtime":1609489805282,"results":"70","hashOfConfig":"60"},{"size":5074,"mtime":1610157322083,"results":"71","hashOfConfig":"60"},{"size":2742,"mtime":1610173466604,"results":"72","hashOfConfig":"60"},{"size":3924,"mtime":1610157683497,"results":"73","hashOfConfig":"60"},{"size":2717,"mtime":1610159973905,"results":"74","hashOfConfig":"60"},{"size":4254,"mtime":1610160082795,"results":"75","hashOfConfig":"60"},{"size":3150,"mtime":1610159707835,"results":"76","hashOfConfig":"60"},{"size":11184,"mtime":1610168086193,"results":"77","hashOfConfig":"60"},{"size":568,"mtime":1609489805281,"results":"78","hashOfConfig":"60"},{"size":1140,"mtime":1609489805279,"results":"79","hashOfConfig":"60"},{"size":4313,"mtime":1609489805280,"results":"80","hashOfConfig":"60"},{"size":898,"mtime":1610145465022,"results":"81","hashOfConfig":"60"},{"size":3289,"mtime":1610145459735,"results":"82","hashOfConfig":"60"},{"size":1323,"mtime":1609489805273,"results":"83","hashOfConfig":"60"},{"size":1094,"mtime":1610145475710,"results":"84","hashOfConfig":"60"},{"size":576,"mtime":1609489805241,"results":"85","hashOfConfig":"60"},{"size":224,"mtime":1609489805247,"results":"86","hashOfConfig":"60"},{"size":5443,"mtime":1610156732709,"results":"87","hashOfConfig":"60"},{"size":803,"mtime":1609489805279,"results":"88","hashOfConfig":"60"},{"size":199,"mtime":1609489805274,"results":"89","hashOfConfig":"60"},{"size":428,"mtime":1610145449613,"results":"90","hashOfConfig":"60"},{"size":2062,"mtime":1609489805275,"results":"91","hashOfConfig":"60"},{"size":5513,"mtime":1610148873741,"results":"92","hashOfConfig":"60"},{"size":2400,"mtime":1610142425068,"results":"93","hashOfConfig":"60"},{"size":635,"mtime":1609489805220,"results":"94","hashOfConfig":"60"},{"size":283,"mtime":1609489805230,"results":"95","hashOfConfig":"60"},{"size":1029,"mtime":1609489805248,"results":"96","hashOfConfig":"60"},{"size":703,"mtime":1609489805248,"results":"97","hashOfConfig":"60"},{"size":246,"mtime":1609489805243,"results":"98","hashOfConfig":"60"},{"size":425,"mtime":1609489805244,"results":"99","hashOfConfig":"60"},{"size":717,"mtime":1609489805245,"results":"100","hashOfConfig":"60"},{"size":826,"mtime":1609489805273,"results":"101","hashOfConfig":"60"},{"size":396,"mtime":1609489805249,"results":"102","hashOfConfig":"60"},{"size":603,"mtime":1609489805239,"results":"103","hashOfConfig":"60"},{"size":451,"mtime":1609489805272,"results":"104","hashOfConfig":"60"},{"size":436,"mtime":1609489805225,"results":"105","hashOfConfig":"60"},{"size":461,"mtime":1610159130316,"results":"106","hashOfConfig":"60"},{"size":140,"mtime":1609489805283,"results":"107","hashOfConfig":"60"},{"size":422,"mtime":1609489805231,"results":"108","hashOfConfig":"60"},{"size":436,"mtime":1609489805232,"results":"109","hashOfConfig":"60"},{"size":4317,"mtime":1610157491243,"results":"110","hashOfConfig":"60"},{"size":1635,"mtime":1610156724979,"results":"111","hashOfConfig":"60"},{"size":2149,"mtime":1610157214312,"results":"112","hashOfConfig":"60"},{"size":9777,"mtime":1610159288189,"results":"113","hashOfConfig":"60"},{"size":3380,"mtime":1610171794214,"results":"114","hashOfConfig":"60"},{"size":2030,"mtime":1610160649679,"results":"115","hashOfConfig":"60"},{"size":883,"mtime":1610173179356,"results":"116","hashOfConfig":"60"},{"size":595,"mtime":1610173072603,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"76gd0q",{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"120"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"120"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"120"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"120"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"120"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"120"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"120"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"120"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"120"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"120"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"120"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"120"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"120"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"120"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"120"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"120"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\index.js",[],["252","253"],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\App.js",["254","255"],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\createStore.js",["256"],"import { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { persistStore } from 'redux-persist';\r\n\r\nimport rootReducer from './rootReducer';\r\nimport rootSaga from './rootSaga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nexport const middlewares = [thunk, sagaMiddleware, logger];\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport default {\r\n    store,\r\n    persistor\r\n};","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\User\\user.actions.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\hoc\\withAdminAuth.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\layouts\\MainLayout.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\hoc\\withAuth.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\layouts\\AdminLayout.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\layouts\\HomepageLayout.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\rootReducer.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\rootSaga.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Cart\\index.js",["257"],"import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectCartItems, selectCartTotal } from './../../redux/Cart/cart.selectors';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from './../../components/forms/Button';\r\nimport Item from './Item';\r\nimport './styles.scss';\r\n\r\nconst mapState = createStructuredSelector({\r\n    cartItems: selectCartItems,\r\n    total: selectCartTotal\r\n});\r\n\r\nconst Cart = ({}) => {\r\n    const history = useHistory();\r\n    const { cartItems, total } = useSelector(mapState);\r\n    return(\r\n        <div className=\"checkout\">\r\n            <h1>\r\n                Checkout\r\n            </h1>\r\n            <div className=\"cart\">\r\n                {cartItems.length > 0 ? (\r\n                <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n                    <tbody>\r\n                        <tr>\r\n                        <table className=\"checkoutHeader\"  border=\"0\" cellpadding=\"10\" cellspacing=\"0\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <th>\r\n                                        Product\r\n                                    </th>\r\n                                    <th>\r\n                                        Description\r\n                                    </th>\r\n                                    <th>\r\n                                        Quantity\r\n                                    </th>\r\n                                    <th>\r\n                                        Price\r\n                                    </th>\r\n                                    <th>\r\n                                        Remove\r\n                                    </th>\r\n                                </tr>\r\n                            </tbody>\r\n                            </table>\r\n                        </tr>\r\n                        <tr>\r\n                            <table border=\"0\" cellPadding=\"10\" cellSpacing=\"0\">\r\n                                <tbody>\r\n                                    {cartItems.map((item, index) => {\r\n                                        return (\r\n                                            <tr key={index}>\r\n                                                <td className=\"itemWrapper\">\r\n                                                    <Item {...item} />\r\n                                                </td>\r\n                                            </tr>\r\n                                        );\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                            <table border=\"0\" cellPadding=\"0\" cellSpacing=\"0\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>\r\n                                        <table border=\"0\" cellPadding=\"10\" cellSpacing=\"0\">\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                <td>\r\n                                                <h3 id=\"total\">\r\n                                                    Total: ${total}\r\n                                                </h3>\r\n                                                </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                            </table>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <Button onClick={() => history.goBack('/product')}>\r\n                                                Continue Shopping\r\n                                            </Button>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Button onClick={() => history.push('/payment')}>\r\n                                                Checkout\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                ) : (\r\n                    <div className=\"noItem\">\r\n                    <p>\r\n                        You have no items in your cart.\r\n                    </p>\r\n                    <Button id=\"noItemButton\"onClick={() => history.goBack()}>\r\n                        ContinueShopping\r\n                    </Button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cart;","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Homepage\\index.js",["258","259","260","261"],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Login\\index.js",["262"],"import React, { useState, useEffect } from 'react';\r\n//useState lets us use a passed in state in our componenent\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { emailSignInStart, googleSignInStart} from './../../redux/User/user.actions';\r\n\r\nimport './styles.scss';\r\nimport Button from \"./../../components/forms/Button\";\r\nimport FormInput from \"./../../components/forms/FormInput\";\r\nimport AuthWrapper from './../../components/AuthWrapper';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nconst mapState = ({ user }) => ({\r\n    currentUser: user.currentUser,\r\n    signInWithGoogle: user.signInWithGoogle\r\n})\r\n\r\nconst SignIn = props => {\r\n    //definting dispatch to use useDispatch as a function\r\n    const history = useHistory();\r\n    const { currentUser } = useSelector(mapState);\r\n    const dispatch = useDispatch();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [errors, setErrors] = useState([]);\r\n\r\n    //if that thing called in the [] changes, then use effect code is run with the payload\r\n    // of whats in the []\r\n    useEffect(() => {\r\n        if(currentUser) {\r\n            resetForm();\r\n            history.push('/');\r\n        }\r\n    }, [currentUser]);\r\n\r\n    const resetForm = () => {\r\n        setEmail('');\r\n        setPassword('');\r\n        setErrors([]);\r\n    }\r\n\r\n    //handleSubmit makes it so the page wont reload on \r\n    //button click, called in form onSubmit\r\n    const handleSubmit = e => {\r\n        //prevents page reload after hitting the submit button\r\n        e.preventDefault();\r\n        dispatch(emailSignInStart({ email, password}));\r\n    }\r\n    \r\n    const handleGoogleSignIn = () => {\r\n        dispatch(googleSignInStart())\r\n    }\r\n\r\n        const configAuthWrapper = {\r\n            headline: 'Login'\r\n        };\r\n\r\n        return(\r\n        <AuthWrapper {...configAuthWrapper}>\r\n            <div className =\"formWrap\">\r\n                <form onSubmit={handleSubmit}>\r\n                <FormInput \r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value= {email}\r\n                        placeholder=\"Enter Email\"\r\n                        handleChange={e => setEmail(e.target.value)}\r\n                    />\r\n                    <FormInput \r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value= { password }\r\n                        placeholder=\"Enter Password\"\r\n                        handleChange={e => setPassword(e.target.value)}\r\n                    />\r\n                    {errors.length > 0 && (\r\n                        <ul  >\r\n                            {errors.map((err,index) => {\r\n                                return (\r\n                                    <li id=\"errorMessage\" key={e => setErrors(e.target.value)}>\r\n                                        {err}\r\n                                    </li>\r\n                                    );    \r\n                                })}\r\n                            </ul>\r\n                        )}\r\n                    <Link id=\"forgotPassword\" to=\"/recovery\">\r\n                        Forgot Password?\r\n                    </Link>\r\n                    <Button type=\"submit\">\r\n                        LogIn\r\n                    </Button>\r\n                    \r\n                    <Button onClick={handleGoogleSignIn}>\r\n                        Sign In With Goole\r\n                    </Button>\r\n                    <h1>Or</h1>\r\n                    <div className=\"socialSignIn\">\r\n                    <Link id=\"register\" to=\"/register\">\r\n                        Sign up\r\n                    </Link>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </AuthWrapper>\r\n    );\r\n}\r\n\r\n//tutorial has this wrapping in withRouter, but that errors out on me so idk, still works\r\nexport default SignIn;","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Recovery\\index.js",["263"],"import React, { useState, useEffect } from 'react';\r\nimport \"./styles.scss\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { resetPasswordStart, resetUserState } from './../../redux/User/user.actions';\r\n\r\nimport AutherWrapper from \"./../../components/AuthWrapper\";\r\nimport FormInput from './../../components/forms/FormInput';\r\nimport Button from './../../components/forms/Button';\r\n\r\n\r\nconst mapState = ({ user }) => ({\r\n    resetPasswordSuccess: user.resetPasswordSuccess,\r\n    userErr: user.userErr\r\n})\r\n\r\nconst Recovery = props => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { resetPasswordSuccess, userErr } = useSelector(mapState);\r\n    const [email, setEmail] = useState('');\r\n    const [errors, setErrors] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if(resetPasswordSuccess){\r\n            //we need to reset the userState so that they can access the forget \r\n            //password page again if they need to\r\n            dispatch(resetUserState());\r\n            history.push('/login');\r\n        }\r\n    },\r\n    [resetPasswordSuccess]);\r\n\r\n    useEffect(() => {\r\n        if(Array.isArray(userErr) && userErr.length > 0){\r\n            setErrors(userErr);\r\n        }\r\n    },\r\n    [userErr]);\r\n  \r\n    const handleSubmit = e => {\r\n        //prevents from reloading the page\r\n        e.preventDefault();\r\n        dispatch(resetPasswordStart({ email }))\r\n    \r\n    }\r\n    \r\n    const configAuthWrapper = {\r\n        headline: \"Password Recovery\"\r\n    };\r\n\r\n    return(\r\n        <AutherWrapper {...configAuthWrapper}>\r\n            <div className=\"formWrap\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <FormInput \r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    placeholder=\"Enter Email\"\r\n                    handleChange={e => setEmail(e.target.value)}\r\n                    />\r\n                    {errors.length > 0 && (\r\n                    <ul id=\"errorMessage\" >\r\n                        {errors.map((e,index) => {\r\n                            return (\r\n                                <li key={index}>\r\n                                {e}\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                )}\r\n\r\n                    <Button type=\"submit\">\r\n                        Email Password\r\n                    </Button>\r\n                </form>\r\n                \r\n            </div>\r\n        </AutherWrapper>\r\n    );\r\n}\r\n\r\n//withRouter gives us access to the history stored in reactRouter\r\nexport default Recovery;","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Register\\index.js",["264"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport './styles.scss';\r\nimport FormInput from './../../components/forms/FormInput';\r\nimport Button from './../../components/forms/Button';\r\nimport AuthWrapper from \"./../../components/AuthWrapper\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { signUpUserStart, googleSignInStart } from '../../redux/User/user.actions';\r\n\r\nconst mapState = ({ user }) => ({\r\n    currentUser: user.currentUser,\r\n    userErr: user.userErr\r\n});\r\n\r\nconst SignUp = props => {\r\n    const { currentUser, userErr } = useSelector(mapState);\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [displayName, setDisplayName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [errors, setErrors] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if(currentUser) {\r\n            reset();\r\n            history.push('/');\r\n        }\r\n    }, [currentUser]);\r\n\r\n    useEffect(() => {\r\n        if(Array.isArray(userErr) && userErr.length > 0) {\r\n            setErrors(userErr);\r\n        }\r\n    }, [userErr]);\r\n    //Handle change takes in name and value, and on each change, value gets updated, and dispalyed on the screen\r\n    const reset = () => {\r\n        setDisplayName('');\r\n        setEmail('');\r\n        setPassword('');\r\n        setConfirmPassword('');\r\n        setErrors([]);\r\n    }\r\n\r\n    const handleGoogleSignIn = () => {\r\n        dispatch(googleSignInStart())\r\n    }\r\n\r\n     const handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        dispatch(signUpUserStart({\r\n            displayName,\r\n            email,\r\n            password,\r\n            confirmPassword\r\n        }));\r\n    }\r\n        \r\n    const configAuthWrapper = {\r\n        headline: 'No account? sign up here'\r\n    };\r\n\r\n\r\n    return(\r\n        <AuthWrapper {...configAuthWrapper}>\r\n            <div className =\"formWrap\">\r\n                <form onSubmit={handleFormSubmit}>\r\n                        <FormInput \r\n                        type=\"text\"\r\n                        name=\"displayName\"\r\n                        value={displayName}\r\n                        placeholder= \"Enter Name\"\r\n                        handleChange={e => setDisplayName(e.target.value)} />\r\n\r\n                        <FormInput \r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        placeholder= \"Enter email\"\r\n                        handleChange={e => setEmail(e.target.value)} />\r\n\r\n                        <FormInput \r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        placeholder= \"Enter Password\"\r\n                        handleChange={e => setPassword(e.target.value)} />\r\n\r\n                        <FormInput \r\n                        type=\"password\"\r\n                        name=\"confirmPassword\"\r\n                        value={confirmPassword}\r\n                        placeholder= \"Confirm Password\"\r\n                        handleChange={e => setConfirmPassword(e.target.value)} />\r\n\r\n                        <Button type=\"Submit\">\r\n                            Sign Up\r\n                        </Button>\r\n                        {errors.length > 0 && (\r\n                        <ul>\r\n                            {errors.map((err,index) => {\r\n                                return (\r\n                                    <li key={index}>\r\n                                        {err}\r\n                                    </li>\r\n                                    );    \r\n                                })}\r\n                            </ul>\r\n                        )}\r\n                        <h1>or</h1>\r\n\r\n                        <Button onClick={handleGoogleSignIn}>\r\n                            Sign Up With Google\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </AuthWrapper>\r\n    );\r\n}\r\n\r\n//wrapping it withRouter gives us access to props.history\r\nexport default SignUp;","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\ProductDetails\\index.js",["265","266"],"import React, { useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchProductStart, setProduct } from './../../redux/Products/products.actions';\r\nimport Button from './../../components/forms/Button';\r\nimport { addProduct } from './../../redux/Cart/cart.actions';\r\nimport './styles.scss';\r\n\r\nconst mapState = state => ({\r\n    product: state.productsData.product\r\n});\r\n\r\nconst configAddToCardBtn = {\r\n    type: 'button'\r\n}\r\n\r\n\r\nconst ProductDetails = ({}) => {\r\n\r\n    const { product } = useSelector(mapState);\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { productID } = useParams();\r\n    \r\n    const { \r\n        productName,\r\n        productThumbnail,\r\n        productPrice,\r\n        productDescription,\r\n    } = product;\r\n\r\n    const handleAddToCart = (product) => {\r\n        if(!product) return;\r\n        dispatch(addProduct(product))\r\n        history.push('/cart')\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            fetchProductStart(productID)\r\n        )\r\n\r\n        return () => {\r\n            dispatch(setProduct({}))\r\n        }\r\n\r\n    }, []);\r\n\r\n    return(\r\n        <div className=\"productCard\">\r\n            <div className=\"hero\">\r\n                <img src={productThumbnail} alt=\"thumbnail\"/>\r\n            </div>\r\n            <div className=\"productDetails\">\r\n                <ul>\r\n                    <li>\r\n                        <h1>\r\n                            {productName}\r\n                        </h1>\r\n                    </li>\r\n                    <li>\r\n                        <span>\r\n                            ${productPrice}\r\n                        </span>      \r\n                    </li>\r\n                    <li>\r\n                    \r\n                    </li>\r\n                    <li>\r\n                        <table className=\"bottomText\" border=\"0\" cellSpacing=\"0\" cellPadding=\"0\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <Button id=\"button\" {...configAddToCardBtn} onClick={() => handleAddToCart(product)}>\r\n                                            Add To Cart\r\n                                        </Button>\r\n                                    </td>\r\n                                    <td>\r\n                                        Or\r\n                                    </td>\r\n                                    <td>\r\n                                    <h3 className=\"backArrow\" onClick={() => history.goBack()}>\r\n                                        Return\r\n                                    </h3>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </li>\r\n                    <li>\r\n                        <span dangerouslySetInnerHTML={{__html: productDescription}} />\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductDetails;","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Admin\\index.js",["267","268","269","270"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uploadImageStart, addProductStart, fetchProductsStart, deleteProductStart, setProducts } from './../../redux/Products/products.actions.js'\r\nimport AddProductModal from './../../components/Modal/AddProductModal';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport FormInput from './../../components/forms/FormInput';\r\nimport FormSelect from './../../components/forms/FormSelect';\r\nimport Button from './../../components/forms/Button';\r\nimport LoadMore from './../../components/Loadmore';\r\nimport CKEditor from 'ckeditor4-react';\r\nimport './styles.scss';\r\n\r\nconst mapState = ({ productsData }) => ({\r\n    products: productsData.products,\r\n    doucmentID: productsData\r\n});\r\n\r\nconst Admin = props => {\r\n    const { products, documentID } = useSelector(mapState);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [hideProductModal, setHideProductModal] = useState(true);\r\n    const [image, setImage] = useState(null)\r\n    const { filterType } = useParams();\r\n    const [productCategory, setProductCategory] = useState('');\r\n    const [productName, setProductName] = useState('');\r\n    const [productThumbnail, setProductThumbnail] = useState(\"\");\r\n    const [productPrice, setProductPrice] = useState(0);\r\n    const [productDescription, setProductDescription] = useState('');\r\n    const { data, queryDoc, isLastPage } = products;\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchProductsStart({ filterType })\r\n        )\r\n        return () => {\r\n            dispatch(setProducts([]))\r\n        }\r\n    }, [filterType]);\r\n\r\n    useEffect(() => {\r\n        console.log(filterType);\r\n        dispatch(fetchProductsStart({ filterType })\r\n        )\r\n        return () => {\r\n            dispatch(setProducts([]))\r\n        }\r\n    }, [filterType]);\r\n    \r\n    const toggleProductModal = ( ) => {\r\n        setHideProductModal(!hideProductModal);\r\n    }\r\n    const configProductModal = {\r\n        hideProductModal,\r\n        toggleProductModal\r\n    };\r\n\r\n    const resetForm = () => {\r\n        setHideProductModal(true);\r\n        setProductCategory('');\r\n        setProductName('');\r\n        setProductPrice(0);\r\n        setProductDescription('');\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            addProductStart({\r\n            productCategory,\r\n            productName,\r\n            productPrice,\r\n            productThumbnail,\r\n            productDescription,\r\n        })\r\n        );\r\n        console.log(\"look here\")\r\n        console.log(productName)\r\n        dispatch(uploadImageStart({\r\n            thisImage: image,\r\n            name: image.name,\r\n            id: productName\r\n        }))\r\n        \r\n        setTimeout(() => {  dispatch(fetchProductsStart({ filterType })\r\n        ) }, 1000);\r\n        resetForm()\r\n    }\r\n    const handleFilter = (e) => {\r\n        const nextFilter = e.target.value;\r\n        history.push(`/admin/${nextFilter}`);\r\n    };\r\n\r\n    const configFilters = {\r\n        defaultValue: filterType,\r\n          options: [{\r\n            name: 'Show All',\r\n            value: ''\r\n          }, {\r\n            name: 'Wallet',\r\n            value: 'wallet'\r\n          }, {\r\n          name: 'Tote Bags',\r\n          value: 'tote-bags'\r\n          }, {\r\n          name: 'Guitar Straps',\r\n          value: 'guitar-straps'\r\n          }, {\r\n          name: 'Belts',\r\n          value: 'belts'\r\n      }, {\r\n          name: 'Other',\r\n          value: 'other'\r\n      }], handleChange: handleFilter\r\n      };\r\n\r\n    const handleLoadMore = () => {\r\n        dispatch(\r\n            fetchProductsStart({\r\n                filterType,\r\n                startAfterDoc: queryDoc, \r\n                presistProducts: data\r\n            })\r\n        );\r\n    };\r\n\r\n    const configLoadMore = {\r\n        onLoadMoreEvt: handleLoadMore\r\n    };\r\n\r\n    \r\n\r\n    return(\r\n        <div className=\"admin\">\r\n            <div className=\"callToActions\">\r\n                <ul>\r\n                    <li>\r\n                        <h1>\r\n                            Manage Products\r\n                        </h1>\r\n                    </li>\r\n                    <li>\r\n                        <h2>\r\n                            Search Your Product Type\r\n                        </h2>\r\n                    <FormSelect {...configFilters} />\r\n                    </li>\r\n                    <li>\r\n                        <Button onClick={() => toggleProductModal()}>\r\n                            Add new product\r\n                        </Button>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <AddProductModal {...configProductModal}>\r\n                <div className=\"addNewProductForm\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <h2>\r\n                            Add new product\r\n                        </h2>\r\n                        <FormSelect\r\n                            required\r\n                            label=\"Category\"\r\n                            options = {[\r\n                            {   value: '',\r\n                                name: \"Select Category\"\r\n                            }, {\r\n                                value: \"Wallet\",\r\n                                name: \"Wallet\"\r\n                            }, {\r\n                                value: \"Guitar-Straps\",\r\n                                name: \"Guitar Straps\"\r\n                            }, {\r\n                                value: \"Tote-Bags\",\r\n                                name: \"Tote Bags\"\r\n                            }, {\r\n                                value: \"Belts\",\r\n                                name: \"Belts\"\r\n                            }, {\r\n                                value: \"Other\",\r\n                                name: \"Other\"\r\n                            }]}\r\n                            handleChange={e => setProductCategory(e.target.value)}\r\n                            />\r\n                            \r\n                            <FormInput\r\n                            required\r\n                            label=\"Name\"\r\n                            type=\"text\"\r\n                            value={productName}\r\n                            handleChange={e => setProductName(e.target.value)}\r\n                            />\r\n                            \r\n                            <h2 className=\"AddProductText\">Image For Thumbnail</h2>\r\n                            <input className=\"uploadBTN\"required type=\"file\" onChange={e => setImage(e.target.files[0])} />\r\n\r\n                           <FormInput \r\n                           required\r\n                                label=\"Price\"\r\n                                type=\"number\"\r\n                                min=\"0.00\"\r\n                                max=\"10000.00\"\r\n                                step=\"1\"\r\n                                value={productPrice}\r\n                                handleChange={e => setProductPrice(e.target.value)}\r\n                            />\r\n\r\n                            <h2 className=\"AddProductText\">Product Description</h2>\r\n                            <CKEditor\r\n                            required\r\n                            //on a change, use the setter we made, and the evt.editor.getData() is from the dependicy itself\r\n                            onChange={evt => setProductDescription(evt.editor.getData())}\r\n                            />\r\n                            <Button type=\"submit\">\r\n                                Add product\r\n                            </Button>  \r\n                    </form>\r\n                </div>\r\n            </AddProductModal>\r\n\r\n            <div className=\"manageProducts\">\r\n                <table border=\"0\" cellPadding=\"0\" cellSpacing=\"0\">\r\n                    <tbody> \r\n                        <tr>\r\n                            <td>\r\n                                <table className=\"results\" border=\"0\" cellPadding=\"10\" cellSpacing=\"10\">\r\n                                    <tbody>\r\n                                        {(Array.isArray(data) && data.length >0) && data.map((product, index) => {\r\n                                            const { \r\n                                                productName,\r\n                                                productThumbnail,\r\n                                                productPrice,\r\n                                                productCategory,\r\n                                                documentID\r\n                                            } = product;\r\n                                            return (\r\n                                                <div className=\"singleRow\">\r\n                                                <tr key={index}>\r\n                                                    <td>\r\n                                                        <img src={productThumbnail} alt=\"Thumbnail\"/>\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {productName}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        ${productPrice}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {productCategory}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <Button onClick={() => dispatch(deleteProductStart(documentID))}>\r\n                                                            Delete\r\n                                                        </Button>\r\n                                                    </td>\r\n                                                    <td>\r\n                                                    <Link to={`/productedit/${documentID}`}>\r\n                                                        <Button >\r\n                                                            Edit\r\n                                                        </Button>\r\n                                                        </Link>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                </div>\r\n        \r\n                                            )\r\n                                        })}\r\n                                    </tbody>\r\n                                    {!isLastPage && (\r\n                                        <LoadMore {...configLoadMore}/>\r\n                                    )}\r\n                                </table>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                \r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Admin;","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\User\\user.types.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\User\\user.reducer.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\User\\user.sagas.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Products\\products.reducer.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Products\\products.sagas.js",["271"],"import { takeLatest, put, all, call } from 'redux-saga/effects';\r\nimport { setProducts, fetchProductsStart, setProduct } from './products.actions'; \r\nimport productsTypes from './../Products/products.types';\r\nimport { handleSetImage, handleUploadImage, handleEditProduct, handleAddProduct, handleFetchProducts, handleDeleteProduct, handleFetchProduct } from './products.helpers';\r\nimport { auth } from './../../firebase/utils';\r\n\r\nexport function* addProduct( { payload } ) {\r\n\r\n    try{\r\n        const timeStamp = new Date();\r\n        yield handleAddProduct({\r\n            ...payload,\r\n            productAdminUserUID: auth.currentUser.uid,\r\n            createdDate: timeStamp\r\n        });\r\n        yield put(fetchProductsStart());\r\n    } catch(err){\r\n        //console.log(err);\r\n    }\r\n}\r\n\r\nexport function* onAddProductStart() {\r\n    yield takeLatest(productsTypes.ADD_NEW_PRODUCT_START, addProduct)\r\n}\r\n\r\nexport function* editProduct({ payload } ) {\r\n    try{\r\n        const timeStamp = new Date();\r\n        yield handleEditProduct({\r\n            ...payload,\r\n            productAdminUserUID: auth.currentUser.uid,\r\n            createdDate: timeStamp\r\n        });\r\n    } catch(err){\r\n        //console.log(err);\r\n    }\r\n}\r\n\r\nexport function* onEditProductStart() {\r\n    yield takeLatest(productsTypes.EDIT_PRODUCT_START, editProduct);\r\n}\r\n\r\nexport function* uploadImage({ payload }) {\r\n    try{\r\n        yield handleUploadImage({\r\n            ...payload,\r\n        });\r\n    } catch(err){\r\n        //console.log(err);\r\n    }\r\n}\r\n\r\nexport function* onUploadImageStart() {\r\n    yield takeLatest(productsTypes.UPLOAD_IMAGE_START, uploadImage)\r\n}\r\n\r\nexport function* fetchProducts({ payload }) {\r\n    try{\r\n        //yield makes sure we can await for the response from the helperfunction\r\n        const products = yield handleFetchProducts(payload);\r\n        //it takes the given data and uses the action setProducts to set the products\r\n        //into the store\r\n        yield put(\r\n            setProducts(products)\r\n        );\r\n    } catch(err) {\r\n        // console.log(err);\r\n    }\r\n}\r\n\r\nexport function* onFetchProductsStart(){\r\n    yield takeLatest(productsTypes.FETCH_PRODUCTS_START, fetchProducts)\r\n}\r\n\r\nexport function* deleteProduct({ payload }){\r\n    try{\r\n        yield handleDeleteProduct(payload);\r\n        yield put(\r\n            fetchProductsStart()\r\n        )\r\n    } \r\n    catch(err){\r\n        //console.log();\r\n    }\r\n}\r\n\r\nexport function* onDeleteProductStart(){\r\n    yield takeLatest(productsTypes.DELETE_PRODUCT_START, deleteProduct)\r\n}\r\n\r\nexport function* fetchProduct({payload}) {\r\n    try{\r\n        //returns the product we are looking for, note the payload is the productID\r\n        const product = yield handleFetchProduct(payload);\r\n        yield put(\r\n            setProduct(product)\r\n        );\r\n\r\n    } catch(err){\r\n        // console.log(err);\r\n    }\r\n}\r\n\r\nexport function* onFetchProductStart(){\r\n    yield takeLatest(productsTypes.FETCH_PRODUCT_START, fetchProduct)\r\n}\r\n\r\nexport default function* productsSagas() {\r\n    yield all([\r\n        call(onAddProductStart),\r\n        call(onFetchProductsStart),\r\n        call(onDeleteProductStart),\r\n        call(onFetchProductStart),\r\n        call(onEditProductStart),\r\n        call(onUploadImageStart),\r\n    ])\r\n}","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Cart\\cart.reducer.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Products\\products.actions.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\VerticalNav\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\customHooks\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\header\\index.js",["272"],"import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"./styles.scss\";\r\nimport { Link } from 'react-router-dom';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport { navBarDataSignedOut, navBarDataSignedIn, navBarDataAuth } from './NavbarData';\r\nimport { IconContext } from 'react-icons';\r\nimport {signOutUserStart} from './../../redux/User/user.actions'\r\nimport { selectCartItemsCount } from './../../redux/Cart/cart.selectors';\r\nimport { checkUserIsAdmin } from './../../Utils';\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport logo from \"./../../assets/logo.png\"\r\n\r\n\r\nconst mapState = (state) => ({\r\n    currentUser: state.user.currentUser,\r\n    totalNumCartItems: selectCartItemsCount(state)\r\n});\r\n\r\nconst Header = props => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { currentUser, totalNumCartItems } = useSelector(mapState);\r\n    const [sidebar, setSideBar] = useState(false);\r\n    const showSideBar = () => setSideBar(!sidebar);\r\n    const isAdmin = checkUserIsAdmin(currentUser);\r\nconst signOut = () => {\r\n    dispatch(signOutUserStart());\r\n}\r\n    \r\n    return (\r\n        <>\r\n        <div className=\"navBar\">\r\n            <table className=\"centerHead\">\r\n                <tbody>\r\n                    <tr>\r\n                        <td>\r\n                        <Link to=\"#\" className=\"menuBars\">\r\n                            <FaIcons.FaBars onClick={showSideBar}/>\r\n                        </Link>\r\n                        </td>\r\n                        <td>\r\n                        <Link className=\"aboutBen\"to=\"/\">\r\n                            About Ben\r\n                        </Link>\r\n                        </td>\r\n                        <td>\r\n                            <Link to=\"/\">\r\n                            <img className=\"logo\" src={logo} />\r\n                            </Link>\r\n                        </td>\r\n                        <td> \r\n                        <Link id=\"products\"to=\"/products\">\r\n                            Products\r\n                        </Link>\r\n                        </td>\r\n                        <td>\r\n                        <Link className=\"cart\" to=\"/cart\" >\r\n                            <FaIcons.FaShoppingCart/> ({totalNumCartItems})\r\n                        </Link>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>         \r\n        </div>\r\n        <IconContext.Provider value={{color: 'white'}}>\r\n        \r\n        <nav className={sidebar ? 'navMenu active':'navMenu'}>\r\n            \r\n            <ul className=\"navMenuItems\" onClick={showSideBar}>\r\n                <li className=\"navBarToggle\">\r\n                        <span className=\"menuBars\">\r\n                        <AiIcons.AiOutlineClose />\r\n                        </span>\r\n                </li>\r\n                {!currentUser && [\r\n                    <ul>\r\n                    \r\n                    <li>\r\n                        {navBarDataSignedOut.map((item, index) => {\r\n                            return (\r\n                                <li key={index} className={item.className}>\r\n                                <Link to={item.path}>\r\n                                    {item.icon}\r\n                                    <span>{item.title}</span>\r\n                                </Link>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </li>\r\n                </ul>]}\r\n                {currentUser && isAdmin && [\r\n                    <ul>\r\n                    <li>\r\n                        {navBarDataAuth.map((item, index) => {\r\n                            return (\r\n                                <li key={index} className={item.className}>\r\n                                <Link to={item.path}>\r\n                                    {item.icon}\r\n                                    <span>{item.title}</span>\r\n                                </Link>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </li>\r\n                    <li>\r\n                        <span className=\"navText\" onClick={() => signOut()}>\r\n                            SignOut\r\n                        </span>\r\n                    </li>\r\n                </ul>\r\n                ]}\r\n                {currentUser && !isAdmin && [\r\n                    <ul>\r\n                    <li>\r\n                        {navBarDataSignedIn.map((item, index) => {\r\n                            return (\r\n                                <li key={index} className={item.className}>\r\n                                <Link to={item.path}>\r\n                                    {item.icon}\r\n                                    <span>{item.title}</span>\r\n                                </Link>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </li>\r\n                    <li>\r\n                        <span className=\"navText\" onClick={() => signOut()}>\r\n                            SignOut\r\n                        </span>\r\n                    </li>\r\n                </ul>]}\r\n\r\n            </ul>\r\n        </nav>\r\n        </IconContext.Provider>\r\n        </>\r\n    )\r\n}\r\n\r\n//the connect func was imported, and it calls the function we wrote above and thats how it functionally\r\n//goes through the code\r\nexport default Header;\r\n\r\n","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\User\\user.helpers.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Cart\\cart.types.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Products\\products.types.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Cart\\cart.utils.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Products\\products.helpers.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\firebase\\utils.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\Utils\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\Loadmore\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\customHooks\\useAuth.js",["273"],"//all custom hooks should be prefixed with use\r\nimport { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n//this custom hook will be used to\r\n\r\n\r\n//deconstructed the currentUser\r\nconst mapState = ({ user }) => ({\r\n    currentUser: user.currentUser\r\n});\r\n\r\n\r\n//we want to use the UseEffect react hook, and if the current user is\r\n// null, that means the user is not logged in, so if they are not logged in, they\r\n// need to be redirected, which is what this hook does\r\nconst useAuth = props => {\r\n    const { currentUser } = useSelector(mapState);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        //if current user is null, then redirect user to log in page\r\n        if(!currentUser) {\r\n            //this redirects the user to the login page if they are trying to access a page without they shouldnt\r\n            history.push('/login');\r\n        }\r\n    }, [currentUser]);\r\n    \r\n    return currentUser;\r\n};\r\n\r\nexport default useAuth;\r\n\r\n","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\customHooks\\useAdminAuth.js",["274"],"import { useEffect, } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { checkUserIsAdmin } from './../Utils/index';\r\nconst mapState = ( { user }) => ({\r\n    currentUser: user.currentUser\r\n});\r\n\r\n//useAdminAuth returns true if the user is admin, and if the\r\n//user is not admin, it will redirect the user to ./login\r\nconst useAdminAuth = props => {\r\n    const { currentUser } = useSelector(mapState);\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        if(!checkUserIsAdmin(currentUser)) {\r\n            history.push('./login');\r\n        }\r\n\r\n    }, [currentUser]);\r\n    return currentUser\r\n}\r\n\r\nexport default useAdminAuth;","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\forms\\Button\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\forms\\FormInput\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\forms\\FormSelect\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Cart\\cart.selectors.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\firebase\\config.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\UserProfile\\index.js",["275"],"\r\nimport React from 'react';\r\nimport './styles.scss';\r\nimport userIMG from './../../assets/user.png';\r\n\r\nconst UserProfile = props => {\r\n  const { currentUser } = props;\r\n  const { displayName } = currentUser;\r\n\r\n  return (\r\n    <div className=\"userProfile\">\r\n      <ul>\r\n        <li>\r\n          <div className=\"img\">\r\n            <img src={userIMG} alt=\"Profile Picture\"/>\r\n          </div>\r\n        </li>\r\n        <li>\r\n          <span className=\"displayName\">\r\n            {displayName && displayName}\r\n          </span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserProfile;","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Cart\\cart.actions.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\AuthWrapper\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Payment\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\stripe\\config.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\Modal\\AddProductModal\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\Modal\\EditProductModal\\index.js",[],["276","277"],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\EditProductPage\\index.js",["278","279","280","281","282","283","284"],"import React, { useState, useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchProductsStart,uploadImageStart, fetchProductStart, editProductStart } from './../../redux/Products/products.actions';\r\nimport Button from './../../components/forms/Button';\r\nimport CKEditor from 'ckeditor4-react';\r\nimport FormInput from './../../components/forms/FormInput';\r\nimport FormSelect from './../../components/forms/FormSelect';\r\nimport './styles.scss';\r\n\r\nconst mapState = state => ({\r\n    product: state.productsData.product\r\n});\r\n\r\nconst EditProduct = ({}) => {\r\n    const { product } = useSelector(mapState);\r\n    const { editType } = useParams();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [editCategory, setEditCategory] = useState('');\r\n    const [editName, setEditName] = useState('');\r\n    const [editThumbnail, setEditThumbnail] = useState('');\r\n    const [editPrice, setEditPrice] = useState('');\r\n    const [editDescription, setEditDescription] = useState('');\r\n    const [image, setImage] = useState(null)\r\n\r\n    const { \r\n        productName,\r\n        productThumbnail,\r\n        productPrice,\r\n        productDescription,\r\n        productCategory\r\n    } = product;\r\n    \r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(\r\n            fetchProductStart(editType)\r\n        )\r\n\r\n        setEditCategory(productCategory)\r\n        setEditThumbnail(productThumbnail)\r\n        setEditPrice(productPrice)\r\n        setEditDescription(productDescription)\r\n\r\n    }, [productName]);\r\n    \r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch(editProductStart({\r\n            newProductCategory: editCategory,\r\n            newProductPrice: editPrice,\r\n            newProductDesc: editDescription,\r\n            id: productName\r\n        }))\r\n\r\n        if(image) {\r\n        dispatch(uploadImageStart({\r\n            thisImage: image,\r\n            name: image.name,\r\n            id: productName\r\n        }))\r\n        }\r\n        setTimeout(() => { history.goBack('/admin')}, 500);\r\n        \r\n    }\r\n\r\n        \r\n    return (\r\n        <div className=\"editProductForm\">\r\n            <form onSubmit={handleSubmit}>\r\n                <h2>\r\n                    Edit {productName}\r\n                </h2>\r\n                <Button className=\"goBackBtn\"onClick={() => history.goBack('/admin')}>\r\n                    Go Back\r\n                </Button>\r\n                \r\n                <FormSelect \r\n                    label=\"Category\"\r\n                    required\r\n                    options = {[\r\n                    {   value: '',\r\n                        name: \"Select Category\"\r\n                    }, {\r\n                        value: \"Wallet\",\r\n                        name: \"Wallet\"\r\n                    }, {\r\n                        value: \"Guitar-Straps\",\r\n                        name: \"Guitar Straps\"\r\n                    }, {\r\n                        value: \"Tote-Bags\",\r\n                        name: \"Tote Bags\"\r\n                    }, {\r\n                        value: \"Belts\",\r\n                        name: \"Belts\"\r\n                    }, {\r\n                        value: \"Other\",\r\n                        name: \"Other\"\r\n                    }]}\r\n                    handleChange={e => setEditCategory(e.target.value)}\r\n                />\r\n                <img className=\"image\"src={productThumbnail}/>\r\n                <input type=\"file\" onChange={e => setImage(e.target.files[0])} />\r\n                \r\n                <FormInput\r\n                        label=\"Price\"\r\n                        type=\"number\"\r\n                        min=\"0.00\"\r\n                        max=\"10000.00\"\r\n                        step=\"1\"\r\n                        value={editPrice}\r\n                        handleChange={e => setEditPrice(e.target.value)}\r\n                />\r\n                <CKEditor\r\n                    input=\"sdf\"\r\n                    data = {`${editDescription}`}\r\n                    onChange={evt => setEditDescription(evt.editor.getData())}\r\n                />\r\n                <Button type=\"submit\">\r\n                    Complete Edit\r\n                </Button>  \r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditProduct;","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\header\\NavbarData\\index.js",["285","286","287","288"],"import React, { useState } from 'react';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport * as IoIcons from 'react-icons/ai';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n// const signOut = () => {\r\n//     dispatch(signOutUserStart());\r\n// }\r\nexport const navBarDataSignedOut = [\r\n    {\r\n        title: 'Home',\r\n        path: '/',\r\n        icon: <AiIcons.AiFillHome />,\r\n        className: 'navText'\r\n    },\r\n    {\r\n        title: 'Products',\r\n        path: '/products',\r\n        icon: <AiIcons.AiFillHome />,\r\n        className: 'navText'\r\n    },\r\n    {\r\n        title: 'Login',\r\n        path: '/login',\r\n        icon: <AiIcons.AiFillHome />,\r\n        className: 'navText'\r\n    },\r\n\r\n]\r\n\r\nexport const navBarDataSignedIn = [\r\n    {\r\n        title: 'Home',\r\n        path: '/',\r\n        icon: <AiIcons.AiFillHome />,\r\n        className: 'navText'\r\n    },\r\n    {\r\n        title: 'Products',\r\n        path: '/products',\r\n        icon: <AiIcons.AiFillHome />,\r\n        className: 'navText'\r\n    },\r\n    {\r\n        title: 'My Account',\r\n        path: '/dashboard',\r\n        icon: <AiIcons.AiFillHome />,\r\n        className: 'navText'\r\n    },\r\n]\r\n\r\nexport const navBarDataAuth = [\r\n    {\r\n        title: 'Home',\r\n        path: '/',\r\n        icon: <AiIcons.AiFillHome />,\r\n        className: 'navText'\r\n    },\r\n    {\r\n        title: 'Manage Store',\r\n        path: '/admin',\r\n        icon: <AiIcons.AiFillHome />,\r\n        className: 'navText'\r\n    },\r\n    {\r\n        title: 'Products',\r\n        path: '/products',\r\n        icon: <AiIcons.AiFillHome />,\r\n        className: 'navText'\r\n    },\r\n]","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Cart\\Item\\index.js",["289","290"],"import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { handleRemoveCartItem } from '../../../redux/Cart/cart.utils';\r\nimport { removeCartItem, addProduct,reduceCartItem } from './../../../redux/Cart/cart.actions';\r\n\r\nconst Item = (product) => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const {\r\n        productName,\r\n        productThumbnail,\r\n        productPrice,\r\n        quantity,\r\n        documentID\r\n    } = product;\r\n    \r\n    const handleRemoveItem = (documentID) => {\r\n        dispatch(\r\n            removeCartItem({\r\n                documentID\r\n            })\r\n        );\r\n    }\r\n\r\n    const handleAddProduct = (product) => {\r\n        dispatch(\r\n            addProduct(product)\r\n        )\r\n    }\r\n\r\n    const handleRemoveProduct = (product) => {\r\n        dispatch(\r\n            reduceCartItem(product)\r\n        )\r\n    }\r\n    \r\n    return(\r\n        <table className=\"cartItem\" border=\"0\" cellSpacing=\"0\" cellPadding=\"0\">\r\n            <tbody>\r\n                <tr>\r\n                    <td>\r\n                        <img src={productThumbnail} alt={productName} />\r\n                    </td>\r\n                    <td>\r\n                        {productName}\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"arrow\"  onClick={() => handleRemoveProduct(product)}>\r\n                            {`<  `}\r\n                        </span>\r\n                        <span>\r\n                            {quantity}\r\n                        </span>\r\n                        <span  className=\"arrow\" onClick={() => handleAddProduct(product)}>\r\n                            {`  >`}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        ${productPrice}\r\n                    </td>\r\n                    <td align=\"center\">\r\n                        <span className=\"cartBtn\" onClick={() => handleRemoveItem(documentID)}>\r\n                            X\r\n                        </span>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default Item;","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Payment\\PaymentDetails\\index.js",["291"],"import React, { useState, useEffect } from 'react';\r\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport './styles.scss';\r\nimport FormInput from  './../../../components/forms/FormInput';\r\nimport Button from './../../../components/forms/Button';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { CountryDropdown } from 'react-country-region-selector';\r\nimport { apiInstance } from './../../../Utils';\r\nimport { selectCartTotal,selectCartItemsCount } from './../../../redux/Cart/cart.selectors';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { clearCart } from './../../../redux/Cart/cart.actions';\r\n\r\n\r\n// you need this initial state so it doesnt error out\r\nconst initialAddressState = {\r\n    line1: '',\r\n    line2: '',\r\n    city: '',\r\n    state: '',\r\n    country: 'asdf',\r\n    postal_code: ''\r\n};\r\n\r\nconst mapState = createStructuredSelector ({\r\n    total: selectCartTotal,\r\n    itemCount: selectCartItemsCount\r\n});\r\n\r\nconst PaymentDetails = () => {\r\n    const { total , itemCount } = useSelector(mapState);\r\n    const elements = useElements();\r\n    const stripe = useStripe();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [billingAddress, setBillingAddress] = useState({...initialAddressState});\r\n    const [shippingAddress, setShippingAddress] = useState({...initialAddressState});\r\n    const [recipientName, setRecipientName] = useState('');\r\n    const [nameOnCard, setNameOnCard] = useState('');\r\n\r\n    useEffect(() => {\r\n        if(itemCount < 1) {\r\n            //make this into a confirmation page\r\n            history.push('/');\r\n        }\r\n    }, [itemCount])\r\n\r\n    const handleShipping = evt => {\r\n        const { name, value } = evt.target;\r\n        setShippingAddress({\r\n            ...shippingAddress,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    const handleBilling = evt => {\r\n        const { name, value } = evt.target;\r\n        setBillingAddress({\r\n            ...billingAddress,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    const handleFormSubmit = async evt => {\r\n        evt.preventDefault();\r\n        //this gets the card info from the form we also imported\r\n        const cardElement = elements.getElement('card');\r\n\r\n\r\n            //posting to the firebase function and sending the data stored on front end\r\n            apiInstance.post('/payments/create', {\r\n                //expects it in cents\r\n                amount: total * 100,\r\n                shipping: {\r\n                    name: recipientName,\r\n                    address: {\r\n                        ...shippingAddress\r\n                    }\r\n                }\r\n                //we get back the clientSecret after the API did its thing\r\n            }).then(({ data: clientSecret }) => {\r\n                stripe.createPaymentMethod({\r\n                    type: 'card',\r\n                    card: cardElement,\r\n                    billing_details: {\r\n                        name: nameOnCard,\r\n                        address: {\r\n                            ...billingAddress\r\n                        }\r\n                    }\r\n                }).then(({ paymentMethod }) => {\r\n\r\n                    stripe.confirmCardPayment(clientSecret, {\r\n                        payment_method: paymentMethod.id\r\n                    })\r\n                    //paymentIntent is the details of the transaction if it is successful\r\n                    .then(({ paymentIntent }) => {\r\n                       dispatch(clearCart())\r\n                    })\r\n                })\r\n            });\r\n        };\r\n\r\n    const configCardElemet = {\r\n        iconStyle: 'solid',\r\n        style: {\r\n            base: {\r\n                fontSize: '16px'\r\n            }\r\n        },\r\n        hidePostalCode: true\r\n    };\r\n\r\n    return (\r\n        <div className=\"paymentDetails\">\r\n            <form onSubmit={handleFormSubmit}>\r\n                <div className=\"group\">\r\n                    <h2>\r\n                        Shipping Address\r\n                    </h2>\r\n                    <FormInput \r\n                        required\r\n                        placeholder=\"Recipient  Name\"\r\n                        name=\"recipientName\"\r\n                        handleChange={evt => setRecipientName(evt.target.value)}\r\n                        value={recipientName}\r\n                        type=\"text\"\r\n                    />\r\n\r\n                        <FormInput \r\n                        placeholder=\"Line 1\"\r\n                        name=\"line1\"\r\n                        value={shippingAddress.line1}\r\n                        handleChange={evt => handleShipping(evt)}\r\n                        type=\"text\"\r\n                    />\r\n\r\n                        <FormInput \r\n                        placeholder=\"Line 2\"\r\n                        name=\"line2\"\r\n                        value={shippingAddress.line2}\r\n                        handleChange={evt => handleShipping(evt)}\r\n                        type=\"text\"\r\n                    />\r\n\r\n                        <FormInput \r\n                        required\r\n                        placeholder=\"City\"\r\n                        name = \"city\"\r\n                        value={shippingAddress.city}\r\n                        handleChange={evt => handleShipping(evt)}\r\n                        type=\"text\"\r\n                    />\r\n\r\n                        <FormInput \r\n                        required\r\n                        placeholder=\"State\"\r\n                        name=\"state\"\r\n                        value={shippingAddress.state}\r\n                        handleChange={evt => handleShipping(evt)}\r\n                        type=\"text\"\r\n                    />\r\n\r\n                        <FormInput \r\n                        required\r\n                        placeholder=\"Postal Code\"\r\n                        name=\"postal_code\"\r\n                        value={shippingAddress.postal_code}\r\n                        handleChange={evt => handleShipping(evt)}\r\n                        type=\"text\"\r\n                    />  \r\n                    <div className=\"formRow checkoutInput\"  >\r\n                    <CountryDropdown\r\n                        required\r\n                        onChange={(val) => handleShipping({\r\n                            target: { \r\n                            name: 'country',\r\n                            value: val\r\n                        }\r\n                        })}\r\n                        value={shippingAddress.country}\r\n                        valueType=\"short\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"group\">\r\n                    <h2>\r\n                        Billing Address\r\n                    </h2>\r\n                    <FormInput \r\n                    required\r\n                    placeholder=\"Name On Card\"\r\n                    name=\"nameOnCard\"\r\n                    handleChange={evt => setNameOnCard(evt.target.value)}\r\n                    value={nameOnCard}\r\n                    type=\"text\"\r\n                    />\r\n                    <FormInput \r\n                    required\r\n                    placeholder=\"Line 1\"\r\n                    name=\"line1\"\r\n                    value={billingAddress.line1}\r\n                    handleChange={evt => handleBilling(evt)}\r\n                    type=\"text\"\r\n                    />\r\n                    <FormInput \r\n                    placeholder=\"Line 2\"\r\n                    name=\"line2\"\r\n                    value={billingAddress.line2}\r\n                    handleChange={evt => handleBilling(evt)}\r\n                    type=\"text\"\r\n                    />\r\n                    <FormInput \r\n                    required\r\n                    placeholder=\"City\"\r\n                    name=\"city\"\r\n                    value={billingAddress.city}\r\n                    handleChange={evt => handleBilling(evt)}\r\n                    type=\"text\"\r\n                    />\r\n                    <FormInput \r\n                    required\r\n                    placeholder=\"State\"\r\n                    name=\"state\"\r\n                    value={billingAddress.state}\r\n                    handleChange={evt => handleBilling(evt)}\r\n                    type=\"text\"\r\n                    />\r\n                    <FormInput\r\n                    required \r\n                    placeholder=\"Postal Code\"\r\n                    name=\"postal_code\"\r\n                    value={billingAddress.postal_code}\r\n                    handleChange={evt => handleBilling(evt)}\r\n                    type=\"text\"\r\n                    />\r\n                    <div className=\"formRow checkoutInput\"  >\r\n                        <CountryDropdown \r\n                        required\r\n                        onChange={val => handleBilling({\r\n                            target: { \r\n                            name: 'country',\r\n                            value: val\r\n                        }\r\n                        })}\r\n                        value={billingAddress.country}\r\n                        valueType=\"short\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"group\">\r\n                    <h2>\r\n                        Card Details\r\n                    </h2>\r\n                    <CardElement\r\n                        required\r\n                        \r\n                        options={configCardElemet}\r\n                    />\r\n                </div>\r\n                <div className=\"submitButton\">\r\n                    <Button type=\"submit\">\r\n                        Pay Now\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PaymentDetails;","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Products\\index.js",["292","293"],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Products\\Product\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\Footer\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Contact\\index.js",[],{"ruleId":"294","replacedBy":"295"},{"ruleId":"296","replacedBy":"297"},{"ruleId":"298","severity":1,"message":"299","line":6,"column":10,"nodeType":"300","messageId":"301","endLine":6,"endColumn":18},{"ruleId":"302","severity":1,"message":"303","line":40,"column":6,"nodeType":"304","endLine":40,"endColumn":8,"suggestions":"305"},{"ruleId":"306","severity":1,"message":"307","line":18,"column":1,"nodeType":"308","endLine":21,"endColumn":3},{"ruleId":"309","severity":1,"message":"310","line":15,"column":15,"nodeType":"311","messageId":"312","endLine":15,"endColumn":17},{"ruleId":"298","severity":1,"message":"313","line":1,"column":17,"nodeType":"300","messageId":"301","endLine":1,"endColumn":26},{"ruleId":"298","severity":1,"message":"314","line":2,"column":8,"nodeType":"300","messageId":"301","endLine":2,"endColumn":16},{"ruleId":"315","severity":1,"message":"316","line":30,"column":29,"nodeType":"317","endLine":30,"endColumn":70},{"ruleId":"315","severity":1,"message":"316","line":47,"column":25,"nodeType":"317","endLine":47,"endColumn":74},{"ruleId":"302","severity":1,"message":"318","line":34,"column":8,"nodeType":"304","endLine":34,"endColumn":21,"suggestions":"319"},{"ruleId":"302","severity":1,"message":"320","line":32,"column":5,"nodeType":"304","endLine":32,"endColumn":27,"suggestions":"321"},{"ruleId":"302","severity":1,"message":"318","line":30,"column":8,"nodeType":"304","endLine":30,"endColumn":21,"suggestions":"322"},{"ruleId":"309","severity":1,"message":"310","line":18,"column":25,"nodeType":"311","messageId":"312","endLine":18,"endColumn":27},{"ruleId":"302","severity":1,"message":"323","line":47,"column":8,"nodeType":"304","endLine":47,"endColumn":10,"suggestions":"324"},{"ruleId":"298","severity":1,"message":"325","line":19,"column":23,"nodeType":"300","messageId":"301","endLine":19,"endColumn":33},{"ruleId":"298","severity":1,"message":"326","line":27,"column":30,"nodeType":"300","messageId":"301","endLine":27,"endColumn":49},{"ruleId":"302","severity":1,"message":"303","line":39,"column":8,"nodeType":"304","endLine":39,"endColumn":20,"suggestions":"327"},{"ruleId":"302","severity":1,"message":"303","line":48,"column":8,"nodeType":"304","endLine":48,"endColumn":20,"suggestions":"328"},{"ruleId":"298","severity":1,"message":"329","line":4,"column":10,"nodeType":"300","messageId":"301","endLine":4,"endColumn":24},{"ruleId":"315","severity":1,"message":"316","line":49,"column":29,"nodeType":"317","endLine":49,"endColumn":64},{"ruleId":"302","severity":1,"message":"318","line":28,"column":8,"nodeType":"304","endLine":28,"endColumn":21,"suggestions":"330"},{"ruleId":"302","severity":1,"message":"318","line":19,"column":8,"nodeType":"304","endLine":19,"endColumn":21,"suggestions":"331"},{"ruleId":"332","severity":1,"message":"333","line":15,"column":13,"nodeType":"317","endLine":15,"endColumn":55},{"ruleId":"294","replacedBy":"334"},{"ruleId":"296","replacedBy":"335"},{"ruleId":"298","severity":1,"message":"336","line":4,"column":10,"nodeType":"300","messageId":"301","endLine":4,"endColumn":28},{"ruleId":"309","severity":1,"message":"310","line":15,"column":22,"nodeType":"311","messageId":"312","endLine":15,"endColumn":24},{"ruleId":"298","severity":1,"message":"337","line":21,"column":12,"nodeType":"300","messageId":"301","endLine":21,"endColumn":20},{"ruleId":"298","severity":1,"message":"338","line":21,"column":22,"nodeType":"300","messageId":"301","endLine":21,"endColumn":33},{"ruleId":"298","severity":1,"message":"339","line":22,"column":12,"nodeType":"300","messageId":"301","endLine":22,"endColumn":25},{"ruleId":"302","severity":1,"message":"340","line":47,"column":8,"nodeType":"304","endLine":47,"endColumn":21,"suggestions":"341"},{"ruleId":"315","severity":1,"message":"316","line":104,"column":17,"nodeType":"317","endLine":104,"endColumn":63},{"ruleId":"298","severity":1,"message":"342","line":1,"column":17,"nodeType":"300","messageId":"301","endLine":1,"endColumn":25},{"ruleId":"298","severity":1,"message":"343","line":2,"column":13,"nodeType":"300","messageId":"301","endLine":2,"endColumn":20},{"ruleId":"298","severity":1,"message":"344","line":4,"column":13,"nodeType":"300","messageId":"301","endLine":4,"endColumn":20},{"ruleId":"298","severity":1,"message":"345","line":5,"column":10,"nodeType":"300","messageId":"301","endLine":5,"endColumn":14},{"ruleId":"298","severity":1,"message":"346","line":1,"column":17,"nodeType":"300","messageId":"301","endLine":1,"endColumn":26},{"ruleId":"298","severity":1,"message":"347","line":3,"column":10,"nodeType":"300","messageId":"301","endLine":3,"endColumn":30},{"ruleId":"302","severity":1,"message":"318","line":46,"column":8,"nodeType":"304","endLine":46,"endColumn":19,"suggestions":"348"},{"ruleId":"309","severity":1,"message":"310","line":14,"column":19,"nodeType":"311","messageId":"312","endLine":14,"endColumn":22},{"ruleId":"302","severity":1,"message":"303","line":28,"column":8,"nodeType":"304","endLine":28,"endColumn":20,"suggestions":"349"},"no-native-reassign",["350"],"no-negated-in-lhs",["351"],"no-unused-vars","'Elements' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["352"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'Component' is defined but never used.","'ReactDOM' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["353"],"React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["354"],["355"],"React Hook useEffect has missing dependencies: 'dispatch' and 'productID'. Either include them or remove the dependency array.",["356"],"'documentID' is assigned a value but never used.","'setProductThumbnail' is assigned a value but never used.",["357"],["358"],"'handleSetImage' is defined but never used.",["359"],["360"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",["350"],["351"],"'fetchProductsStart' is defined but never used.","'editName' is assigned a value but never used.","'setEditName' is assigned a value but never used.","'editThumbnail' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'editType', 'productCategory', 'productDescription', 'productPrice', and 'productThumbnail'. Either include them or remove the dependency array.",["361"],"'useState' is defined but never used.","'FaIcons' is defined but never used.","'IoIcons' is defined but never used.","'Link' is defined but never used.","'useEffect' is defined but never used.","'handleRemoveCartItem' is defined but never used.",["362"],["363"],"no-global-assign","no-unsafe-negation",{"desc":"364","fix":"365"},{"desc":"366","fix":"367"},{"desc":"368","fix":"369"},{"desc":"366","fix":"370"},{"desc":"371","fix":"372"},{"desc":"373","fix":"374"},{"desc":"373","fix":"375"},{"desc":"366","fix":"376"},{"desc":"366","fix":"377"},{"desc":"378","fix":"379"},{"desc":"380","fix":"381"},{"desc":"373","fix":"382"},"Update the dependencies array to be: [dispatch]",{"range":"383","text":"384"},"Update the dependencies array to be: [currentUser, history]",{"range":"385","text":"386"},"Update the dependencies array to be: [dispatch, history, resetPasswordSuccess]",{"range":"387","text":"388"},{"range":"389","text":"386"},"Update the dependencies array to be: [dispatch, productID]",{"range":"390","text":"391"},"Update the dependencies array to be: [dispatch, filterType]",{"range":"392","text":"393"},{"range":"394","text":"393"},{"range":"395","text":"386"},{"range":"396","text":"386"},"Update the dependencies array to be: [dispatch, editType, productCategory, productDescription, productName, productPrice, productThumbnail]",{"range":"397","text":"398"},"Update the dependencies array to be: [history, itemCount]",{"range":"399","text":"400"},{"range":"401","text":"393"},[1343,1345],"[dispatch]",[1240,1253],"[currentUser, history]",[1132,1154],"[dispatch, history, resetPasswordSuccess]",[1099,1112],[1198,1200],"[dispatch, productID]",[1674,1686],"[dispatch, filterType]",[1894,1906],[948,961],[629,642],[1605,1618],"[dispatch, editType, productCategory, productDescription, productName, productPrice, productThumbnail]",[1709,1720],"[history, itemCount]",[1029,1041]]