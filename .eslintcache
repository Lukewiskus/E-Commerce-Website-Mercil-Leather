[{"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\index.js":"1","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\App.js":"2","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\createStore.js":"3","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\User\\user.actions.js":"4","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\hoc\\withAdminAuth.js":"5","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\layouts\\MainLayout.js":"6","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\hoc\\withAuth.js":"7","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\layouts\\AdminLayout.js":"8","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\layouts\\HomepageLayout.js":"9","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\rootReducer.js":"10","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\rootSaga.js":"11","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Cart\\index.js":"12","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Homepage\\index.js":"13","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Login\\index.js":"14","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Recovery\\index.js":"15","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Register\\index.js":"16","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\ProductDetails\\index.js":"17","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Admin\\index.js":"18","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\User\\user.types.js":"19","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\User\\user.reducer.js":"20","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\User\\user.sagas.js":"21","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Products\\products.reducer.js":"22","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Products\\products.sagas.js":"23","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Cart\\cart.reducer.js":"24","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Products\\products.actions.js":"25","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\VerticalNav\\index.js":"26","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\customHooks\\index.js":"27","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\header\\index.js":"28","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\User\\user.helpers.js":"29","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Cart\\cart.types.js":"30","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Products\\products.types.js":"31","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Cart\\cart.utils.js":"32","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Products\\products.helpers.js":"33","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\firebase\\utils.js":"34","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\Utils\\index.js":"35","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\Loadmore\\index.js":"36","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\customHooks\\useAuth.js":"37","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\customHooks\\useAdminAuth.js":"38","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\forms\\Button\\index.js":"39","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\forms\\FormInput\\index.js":"40","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\forms\\FormSelect\\index.js":"41","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Cart\\cart.selectors.js":"42","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\firebase\\config.js":"43","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\UserProfile\\index.js":"44","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Cart\\cart.actions.js":"45","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\AuthWrapper\\index.js":"46","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Payment\\index.js":"47","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\stripe\\config.js":"48","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\Modal\\AddProductModal\\index.js":"49","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\Modal\\EditProductModal\\index.js":"50","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\EditProductPage\\index.js":"51","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\header\\NavbarData\\index.js":"52","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Cart\\Item\\index.js":"53","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Payment\\PaymentDetails\\index.js":"54","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Products\\index.js":"55","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Products\\Product\\index.js":"56","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\Footer\\index.js":"57","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Contact\\index.js":"58","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Orders\\orders.sagas.js":"59","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Orders\\orders.types.js":"60","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Orders\\orders.helpers.js":"61","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Orders\\orders.actions.js":"62","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Dashboard\\index.js":"63","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Orders\\orders.reducers.js":"64","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\OrderHistory\\index.js":"65","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Order\\index.js":"66","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\OrderDetails\\index.js":"67","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\AllOrders\\index.js":"68"},{"size":841,"mtime":1609489805252,"results":"69","hashOfConfig":"70"},{"size":5244,"mtime":1610436263453,"results":"71","hashOfConfig":"70"},{"size":623,"mtime":1609489805281,"results":"72","hashOfConfig":"70"},{"size":1486,"mtime":1609489805278,"results":"73","hashOfConfig":"70"},{"size":253,"mtime":1609489805251,"results":"74","hashOfConfig":"70"},{"size":555,"mtime":1610170666494,"results":"75","hashOfConfig":"70"},{"size":326,"mtime":1609489805251,"results":"76","hashOfConfig":"70"},{"size":1139,"mtime":1609489805253,"results":"77","hashOfConfig":"70"},{"size":364,"mtime":1610170742377,"results":"78","hashOfConfig":"70"},{"size":837,"mtime":1610424389504,"results":"79","hashOfConfig":"70"},{"size":470,"mtime":1610422490573,"results":"80","hashOfConfig":"70"},{"size":5293,"mtime":1610432156900,"results":"81","hashOfConfig":"70"},{"size":3274,"mtime":1610501931853,"results":"82","hashOfConfig":"70"},{"size":3924,"mtime":1610431040082,"results":"83","hashOfConfig":"70"},{"size":2719,"mtime":1610926075226,"results":"84","hashOfConfig":"70"},{"size":4254,"mtime":1610160082795,"results":"85","hashOfConfig":"70"},{"size":2721,"mtime":1610432167861,"results":"86","hashOfConfig":"70"},{"size":15108,"mtime":1610439062780,"results":"87","hashOfConfig":"70"},{"size":568,"mtime":1609489805281,"results":"88","hashOfConfig":"70"},{"size":1140,"mtime":1609489805279,"results":"89","hashOfConfig":"70"},{"size":4313,"mtime":1609489805280,"results":"90","hashOfConfig":"70"},{"size":898,"mtime":1610145465022,"results":"91","hashOfConfig":"70"},{"size":3289,"mtime":1610145459735,"results":"92","hashOfConfig":"70"},{"size":1323,"mtime":1609489805273,"results":"93","hashOfConfig":"70"},{"size":1094,"mtime":1610145475710,"results":"94","hashOfConfig":"70"},{"size":576,"mtime":1609489805241,"results":"95","hashOfConfig":"70"},{"size":224,"mtime":1609489805247,"results":"96","hashOfConfig":"70"},{"size":5443,"mtime":1610156732709,"results":"97","hashOfConfig":"70"},{"size":803,"mtime":1609489805279,"results":"98","hashOfConfig":"70"},{"size":199,"mtime":1609489805274,"results":"99","hashOfConfig":"70"},{"size":428,"mtime":1610145449613,"results":"100","hashOfConfig":"70"},{"size":2062,"mtime":1609489805275,"results":"101","hashOfConfig":"70"},{"size":5513,"mtime":1610148873741,"results":"102","hashOfConfig":"70"},{"size":2400,"mtime":1610142425068,"results":"103","hashOfConfig":"70"},{"size":635,"mtime":1609489805220,"results":"104","hashOfConfig":"70"},{"size":283,"mtime":1609489805230,"results":"105","hashOfConfig":"70"},{"size":1029,"mtime":1609489805248,"results":"106","hashOfConfig":"70"},{"size":703,"mtime":1609489805248,"results":"107","hashOfConfig":"70"},{"size":246,"mtime":1609489805243,"results":"108","hashOfConfig":"70"},{"size":425,"mtime":1609489805244,"results":"109","hashOfConfig":"70"},{"size":717,"mtime":1609489805245,"results":"110","hashOfConfig":"70"},{"size":826,"mtime":1609489805273,"results":"111","hashOfConfig":"70"},{"size":388,"mtime":1610926162039,"results":"112","hashOfConfig":"70"},{"size":603,"mtime":1609489805239,"results":"113","hashOfConfig":"70"},{"size":451,"mtime":1609489805272,"results":"114","hashOfConfig":"70"},{"size":436,"mtime":1609489805225,"results":"115","hashOfConfig":"70"},{"size":461,"mtime":1610159130316,"results":"116","hashOfConfig":"70"},{"size":140,"mtime":1609489805283,"results":"117","hashOfConfig":"70"},{"size":422,"mtime":1609489805231,"results":"118","hashOfConfig":"70"},{"size":436,"mtime":1609489805232,"results":"119","hashOfConfig":"70"},{"size":4317,"mtime":1610157491243,"results":"120","hashOfConfig":"70"},{"size":1657,"mtime":1610431585380,"results":"121","hashOfConfig":"70"},{"size":2373,"mtime":1610431048352,"results":"122","hashOfConfig":"70"},{"size":10758,"mtime":1610661842793,"results":"123","hashOfConfig":"70"},{"size":4933,"mtime":1610431032805,"results":"124","hashOfConfig":"70"},{"size":2039,"mtime":1610232652129,"results":"125","hashOfConfig":"70"},{"size":883,"mtime":1610173179356,"results":"126","hashOfConfig":"70"},{"size":595,"mtime":1610173072603,"results":"127","hashOfConfig":"70"},{"size":2252,"mtime":1610437518717,"results":"128","hashOfConfig":"70"},{"size":464,"mtime":1610437351711,"results":"129","hashOfConfig":"70"},{"size":2243,"mtime":1610438410733,"results":"130","hashOfConfig":"70"},{"size":915,"mtime":1610437491345,"results":"131","hashOfConfig":"70"},{"size":1049,"mtime":1610431862814,"results":"132","hashOfConfig":"70"},{"size":812,"mtime":1610437327012,"results":"133","hashOfConfig":"70"},{"size":2911,"mtime":1610431053901,"results":"134","hashOfConfig":"70"},{"size":895,"mtime":1610438617233,"results":"135","hashOfConfig":"70"},{"size":2323,"mtime":1610438763535,"results":"136","hashOfConfig":"70"},{"size":840,"mtime":1610438871861,"results":"137","hashOfConfig":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},"76gd0q",{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"140"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"140"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"140"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"140"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"140"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"140"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"140"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"140"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"140"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"140"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"140"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"140"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"140"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"140"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"140"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"140"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"264","messages":"265","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"140"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"140"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"140"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"140"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"140"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"140"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"140"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"140"},"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\index.js",[],["300","301"],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\App.js",["302","303","304"],"import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { setCurrentUser, checkUserSession } from './redux/User/user.actions';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Elements } from '@stripe/react-stripe-js';\r\n\r\n//high order component\r\n//WithAuth can restrict access to pages based on being logged in or not\r\nimport WithAuth from './hoc/withAuth';\r\nimport WithAdminAuth from './hoc/withAdminAuth';\r\n\r\n//layouts\r\nimport MainLayout from './layouts/MainLayout';\r\nimport HomepageLayout from './layouts/HomepageLayout';\r\nimport AdminLayout from './layouts/AdminLayout';\r\n\r\n\r\n//pages\r\nimport './default.scss';\r\nimport AllOrders from './pages/AllOrders'\r\nimport Order from './pages/Order'\r\nimport Dashboard from './pages/Dashboard'\r\nimport Contact from './pages/Contact'\r\nimport EditProductPage from './pages/EditProductPage';\r\nimport Payment from \"./pages/Payment\";\r\nimport Cart from \"./pages/Cart\";\r\nimport Product from \"./pages/Products\";\r\nimport Homepage from \"./pages/Homepage\";\r\nimport Login from './pages/Login';\r\nimport Recovery from './pages/Recovery';\r\nimport Register from './pages/Register';\r\nimport Admin from './pages/Admin';\r\nimport ProductDetails from './pages/ProductDetails';\r\n// import Products from './pages/Products';\r\n\r\nconst App = props =>  {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(checkUserSession());\r\n    \r\n  }, []);\r\n\r\n    //sets the currentUser to the user that is logged in\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Switch>\r\n      <Route path=\"/productedit/:editType\" render={() => (\r\n          <MainLayout>\r\n            <EditProductPage />\r\n          </MainLayout>\r\n        )} />\r\n        <Route exact path=\"/\" render={() => (\r\n          <HomepageLayout>\r\n            <Homepage />\r\n            </HomepageLayout>\r\n        )} />\r\n        <Route path=\"/admin/:filterType\"\r\n          render = {() => (\r\n            //withAuth makes it so you get redirected to login if you are not logged in trying to access it\r\n            <WithAdminAuth>\r\n              <MainLayout>\r\n                  <Admin/>\r\n              </MainLayout>\r\n            </WithAdminAuth>\r\n          )}/>\r\n          <Route path=\"/all-orders\"\r\n          render = {() => (\r\n            //withAuth makes it so you get redirected to login if you are not logged in trying to access it\r\n            <WithAdminAuth>\r\n              <MainLayout>\r\n                  <AllOrders/>\r\n              </MainLayout>\r\n            </WithAdminAuth>\r\n          )}/>\r\n          <Route path=\"/payment\" render = {() => (\r\n          <WithAuth>\r\n            <MainLayout>\r\n              <Payment />\r\n          </MainLayout>\r\n          </WithAuth>\r\n        )}/>\r\n                  <Route path=\"/dashboard\" render = {() => (\r\n          <WithAuth>\r\n            <MainLayout>\r\n              <Dashboard />\r\n          </MainLayout>\r\n          </WithAuth>\r\n        )}/>\r\n        <Route path=\"/admin\"\r\n          render = {() => (\r\n            //withAuth makes it so you get redirected to login if you are not logged in trying to access it\r\n            <WithAdminAuth>\r\n              <MainLayout>\r\n                  <Admin/>\r\n              </MainLayout>\r\n            </WithAdminAuth>\r\n          )}/>\r\n          <Route path=\"/order/:orderID\"\r\n          render = {() => (\r\n            //withAuth makes it so you get redirected to login if you are not logged in trying to access it\r\n            <WithAuth>\r\n              <MainLayout>\r\n                  <Order/>\r\n              </MainLayout>\r\n            </WithAuth>\r\n          )}/>\r\n          <Route path=\"/contact\" render={() => (\r\n          <MainLayout>\r\n            <Contact />\r\n          </MainLayout>\r\n        )} />\r\n        \r\n        <Route path=\"/products/:filterType\" render={() => (\r\n          <MainLayout>\r\n            <Product />\r\n          </MainLayout>\r\n        )} />\r\n        <Route exact path=\"/products\" render={() => (\r\n          <MainLayout>\r\n            <Product />\r\n          </MainLayout>\r\n        )} />\r\n        \r\n        <Route path=\"/product/:productID\" render={() => (\r\n          <MainLayout>\r\n            <ProductDetails />\r\n          </MainLayout>\r\n        )} />\r\n        \r\n         <Route path=\"/cart\" render = {() => (\r\n            <MainLayout>\r\n            <Cart />\r\n          </MainLayout>\r\n        )}/>\r\n        \r\n        <Route path=\"/register\" \r\n          render =  {() => (\r\n              <MainLayout>\r\n              <Register/>\r\n            </MainLayout>\r\n        )}/>\r\n        <Route path=\"/recovery\" \r\n          render = {() => (\r\n              <MainLayout>\r\n              <Recovery />\r\n            </MainLayout>\r\n        )}/>\r\n        <Route path=\"/login\" \r\n        //if currentUser exisits, redirect to homepage, i guess ? means exist lol\r\n          render =  {() => (\r\n              <MainLayout>\r\n              <Login/>\r\n            </MainLayout>\r\n        )}/>\r\n        \r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ user }) => ({\r\n  currentUser: user.currentUser\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setCurrentUser: user => dispatch(setCurrentUser(user))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\createStore.js",["305"],"import { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { persistStore } from 'redux-persist';\r\n\r\nimport rootReducer from './rootReducer';\r\nimport rootSaga from './rootSaga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nexport const middlewares = [thunk, sagaMiddleware, logger];\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport default {\r\n    store,\r\n    persistor\r\n};","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\User\\user.actions.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\hoc\\withAdminAuth.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\layouts\\MainLayout.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\hoc\\withAuth.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\layouts\\AdminLayout.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\layouts\\HomepageLayout.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\rootReducer.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\rootSaga.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Cart\\index.js",["306"],"import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectCartItems, selectCartTotal } from './../../redux/Cart/cart.selectors';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Button from './../../components/forms/Button';\r\nimport Item from './Item';\r\nimport './styles.scss';\r\n\r\nconst mapState = createStructuredSelector({\r\n    cartItems: selectCartItems,\r\n    total: selectCartTotal\r\n});\r\n\r\nconst Cart = ({}) => {\r\n    const history = useHistory();\r\n    const { cartItems, total } = useSelector(mapState);\r\n\r\n    return (\r\n        <div className=\"checkoutWrap\">\r\n\r\n            \r\n            <div className=\"cart\">\r\n            {cartItems.length > 0 ? (\r\n                <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n                                <h1 className=\"topText\">\r\n                Check Out\r\n            </h1>\r\n                     <tbody>\r\n                         <tr>\r\n                         <table className=\"checkoutHeader\"  border=\"0\" cellpadding=\"10\" cellspacing=\"0\">\r\n                             <tbody>\r\n                                 <tr>\r\n                                     <th>\r\n                                         Product\r\n                                     </th>\r\n                                     <th>\r\n                                         Description\r\n                                     </th>\r\n                                     <th>\r\n                                         Quantity\r\n                                     </th>\r\n                                     <th>\r\n                                         Price\r\n                                     </th>\r\n                                     <th>\r\n                                         Remove\r\n                                     </th>\r\n                                 </tr>\r\n                             </tbody>\r\n                             </table>\r\n                         </tr>\r\n                         <tr>\r\n                             <table border=\"0\" cellPadding=\"10\" cellSpacing=\"0\">\r\n                                 <tbody>\r\n                                     {cartItems.map((item, index) => {\r\n                                        return (\r\n                                            <tr key={index}>\r\n                                                <td className=\"itemWrapper\">\r\n                                                    <Item {...item} />\r\n                                                </td>\r\n                                            </tr>\r\n                                        );\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                            <table border=\"0\" cellPadding=\"0\" cellSpacing=\"0\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>\r\n                                        <table border=\"0\" cellPadding=\"10\" cellSpacing=\"0\">\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                <td>\r\n                                                <h3 id=\"total\">\r\n                                                    Total: ${total}\r\n                                                </h3>\r\n                                                </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                            </table>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <Button onClick={() => history.goBack('/product')}>\r\n                                                Continue Shopping\r\n                                            </Button>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Button onClick={() => history.push('/payment')}>\r\n                                                Checkout\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                ) : (\r\n                 <div className=\"noItem\">\r\n                    <h1 className=\"topText\">\r\n                        Check Out\r\n                    </h1>\r\n                     <p>\r\n                         You have no items in your cart.\r\n                     </p>\r\n                     <Button id=\"noItemButton\"onClick={() => history.push('/products')}>\r\n                         ContinueShopping\r\n                     </Button>\r\n                 </div>\r\n                 ) }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n    export default Cart;\r\n\r\n\r\n\r\n","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Homepage\\index.js",["307","308","309","310"],"import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport Ben from './../../assets/benFace.jpg';\r\nimport Carousel from 'react-elastic-carousel';\r\nimport logo from \"./logo.png\"\r\nimport Image1 from \"./images/AldenWallet.jpg\"\r\nimport Image2 from \"./images/Kuzi.jpg\";\r\nimport Image3 from \"./images/OtherWallet.jpg\";\r\nimport Image4 from \"./images/ToteBag.jpg\";\r\nimport Image5 from \"./images/Wallet3.jpg\";\r\nimport './styles.scss';\r\n\r\nconst home = props => {\r\n    const state = {\r\n        items: [\r\n          {id: 1, title: logo},\r\n          {id: 2, title: Image1},\r\n          {id: 3, title: Image2},\r\n          {id: 4, title: Image3},\r\n          {id: 5, title: Image4},\r\n          {id: 5, title: Image5}\r\n        ]\r\n      }\r\n    return (\r\n        <div className=\"homepageWrapper\">\r\n            <table border=\"0\" cellPadding=\"10\" cellSpacing=\"10\">\r\n                <tbody>\r\n                    <tr className=\"row1\">\r\n                        <td className=\"imageOfBen\">\r\n                            <img className=\"profileImage\"src={Ben} />\r\n                            <p>\r\n                            These are placeholder words for the homepage description. These are placeholder words for the homepage description.\r\n                            These are placeholder words for the homepage description. These are placeholder words for the homepage description.\r\n                            These are placeholder words for the homepage description. These are placeholder words for the homepage description.\r\n                            These are placeholder words for the homepage description. These are placeholder words for the homepage description.\r\n                            These are placeholder words for the homepage description. These are placeholder words for the homepage description.\r\n                            </p>\r\n                        </td>\r\n                    </tr>\r\n                    <tr className=\"row2\">\r\n                    <div className=\"carouselWrapper\">\r\n                    <Carousel className=\"carousel\">\r\n                        {state.items.map(item => \r\n                        <div key={item.id}>\r\n                            <img className=\"carouselImage\"src={item.title} />\r\n                        </div>)}\r\n                    </Carousel>\r\n                    </div>\r\n                    </tr>\r\n                    <tr className=\"row3\">\r\n                    <div className=\"contactMe\">\r\n                        <ul>\r\n                            <li>\r\n                                <h1>\r\n                                    Interested In Something Custom? Contact Me At\r\n                                </h1>\r\n                            </li>\r\n                            <li>\r\n                                555-555-5555\r\n                            </li>\r\n                            <li>\r\n                                exampleEmail@email.com\r\n                            </li>\r\n                            <li>\r\n                                Instagram, Facebook, ect..\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            \r\n        </div>\r\n\r\n    )\r\n}\r\nexport default home;","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Login\\index.js",["311"],"import React, { useState, useEffect } from 'react';\r\n//useState lets us use a passed in state in our componenent\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { emailSignInStart, googleSignInStart} from './../../redux/User/user.actions';\r\n\r\nimport './styles.scss';\r\nimport Button from \"./../../components/forms/Button\";\r\nimport FormInput from \"./../../components/forms/FormInput\";\r\nimport AuthWrapper from './../../components/AuthWrapper';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nconst mapState = ({ user }) => ({\r\n    currentUser: user.currentUser,\r\n    signInWithGoogle: user.signInWithGoogle\r\n})\r\n\r\nconst SignIn = props => {\r\n    //definting dispatch to use useDispatch as a function\r\n    const history = useHistory();\r\n    const { currentUser } = useSelector(mapState);\r\n    const dispatch = useDispatch();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [errors, setErrors] = useState([]);\r\n\r\n    //if that thing called in the [] changes, then use effect code is run with the payload\r\n    // of whats in the []\r\n    useEffect(() => {\r\n        if(currentUser) {\r\n            resetForm();\r\n            history.push('/');\r\n        }\r\n    }, [currentUser]);\r\n\r\n    const resetForm = () => {\r\n        setEmail('');\r\n        setPassword('');\r\n        setErrors([]);\r\n    }\r\n\r\n    //handleSubmit makes it so the page wont reload on \r\n    //button click, called in form onSubmit\r\n    const handleSubmit = e => {\r\n        //prevents page reload after hitting the submit button\r\n        e.preventDefault();\r\n        dispatch(emailSignInStart({ email, password}));\r\n    }\r\n    \r\n    const handleGoogleSignIn = () => {\r\n        dispatch(googleSignInStart())\r\n    }\r\n\r\n        const configAuthWrapper = {\r\n            headline: 'Login'\r\n        };\r\n\r\n        return(\r\n        <AuthWrapper {...configAuthWrapper}>\r\n            <div className =\"formWrap\">\r\n                <form onSubmit={handleSubmit}>\r\n                <FormInput \r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value= {email}\r\n                        placeholder=\"Enter Email\"\r\n                        handleChange={e => setEmail(e.target.value)}\r\n                    />\r\n                    <FormInput \r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value= { password }\r\n                        placeholder=\"Enter Password\"\r\n                        handleChange={e => setPassword(e.target.value)}\r\n                    />\r\n                    {errors.length > 0 && (\r\n                        <ul  >\r\n                            {errors.map((err,index) => {\r\n                                return (\r\n                                    <li id=\"errorMessage\" key={e => setErrors(e.target.value)}>\r\n                                        {err}\r\n                                    </li>\r\n                                    );    \r\n                                })}\r\n                            </ul>\r\n                        )}\r\n                    <Link id=\"forgotPassword\" to=\"/recovery\">\r\n                        Forgot Password?\r\n                    </Link>\r\n                    <Button type=\"submit\">\r\n                        LogIn\r\n                    </Button>\r\n                    \r\n                    <Button onClick={handleGoogleSignIn}>\r\n                        Sign In With Goole\r\n                    </Button>\r\n                    <h1>Or</h1>\r\n                    <div className=\"socialSignIn\">\r\n                    <Link id=\"register\" to=\"/register\">\r\n                        Sign up\r\n                    </Link>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </AuthWrapper>\r\n    );\r\n}\r\n\r\n//tutorial has this wrapping in withRouter, but that errors out on me so idk, still works\r\nexport default SignIn;","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Recovery\\index.js",["312"],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Register\\index.js",["313"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport './styles.scss';\r\nimport FormInput from './../../components/forms/FormInput';\r\nimport Button from './../../components/forms/Button';\r\nimport AuthWrapper from \"./../../components/AuthWrapper\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { signUpUserStart, googleSignInStart } from '../../redux/User/user.actions';\r\n\r\nconst mapState = ({ user }) => ({\r\n    currentUser: user.currentUser,\r\n    userErr: user.userErr\r\n});\r\n\r\nconst SignUp = props => {\r\n    const { currentUser, userErr } = useSelector(mapState);\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [displayName, setDisplayName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [errors, setErrors] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if(currentUser) {\r\n            reset();\r\n            history.push('/');\r\n        }\r\n    }, [currentUser]);\r\n\r\n    useEffect(() => {\r\n        if(Array.isArray(userErr) && userErr.length > 0) {\r\n            setErrors(userErr);\r\n        }\r\n    }, [userErr]);\r\n    //Handle change takes in name and value, and on each change, value gets updated, and dispalyed on the screen\r\n    const reset = () => {\r\n        setDisplayName('');\r\n        setEmail('');\r\n        setPassword('');\r\n        setConfirmPassword('');\r\n        setErrors([]);\r\n    }\r\n\r\n    const handleGoogleSignIn = () => {\r\n        dispatch(googleSignInStart())\r\n    }\r\n\r\n     const handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        dispatch(signUpUserStart({\r\n            displayName,\r\n            email,\r\n            password,\r\n            confirmPassword\r\n        }));\r\n    }\r\n        \r\n    const configAuthWrapper = {\r\n        headline: 'No account? sign up here'\r\n    };\r\n\r\n\r\n    return(\r\n        <AuthWrapper {...configAuthWrapper}>\r\n            <div className =\"formWrap\">\r\n                <form onSubmit={handleFormSubmit}>\r\n                        <FormInput \r\n                        type=\"text\"\r\n                        name=\"displayName\"\r\n                        value={displayName}\r\n                        placeholder= \"Enter Name\"\r\n                        handleChange={e => setDisplayName(e.target.value)} />\r\n\r\n                        <FormInput \r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        placeholder= \"Enter email\"\r\n                        handleChange={e => setEmail(e.target.value)} />\r\n\r\n                        <FormInput \r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        placeholder= \"Enter Password\"\r\n                        handleChange={e => setPassword(e.target.value)} />\r\n\r\n                        <FormInput \r\n                        type=\"password\"\r\n                        name=\"confirmPassword\"\r\n                        value={confirmPassword}\r\n                        placeholder= \"Confirm Password\"\r\n                        handleChange={e => setConfirmPassword(e.target.value)} />\r\n\r\n                        <Button type=\"Submit\">\r\n                            Sign Up\r\n                        </Button>\r\n                        {errors.length > 0 && (\r\n                        <ul>\r\n                            {errors.map((err,index) => {\r\n                                return (\r\n                                    <li key={index}>\r\n                                        {err}\r\n                                    </li>\r\n                                    );    \r\n                                })}\r\n                            </ul>\r\n                        )}\r\n                        <h1>or</h1>\r\n\r\n                        <Button onClick={handleGoogleSignIn}>\r\n                            Sign Up With Google\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </AuthWrapper>\r\n    );\r\n}\r\n\r\n//wrapping it withRouter gives us access to props.history\r\nexport default SignUp;","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\ProductDetails\\index.js",["314","315"],"import React, { useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchProductStart, setProduct } from './../../redux/Products/products.actions';\r\nimport Button from './../../components/forms/Button';\r\nimport { addProduct } from './../../redux/Cart/cart.actions';\r\nimport './styles.scss';\r\n\r\nconst mapState = state => ({\r\n    product: state.productsData.product\r\n});\r\n\r\nconst configAddToCardBtn = {\r\n    type: 'button'\r\n}\r\n\r\n\r\nconst ProductDetails = ({}) => {\r\n\r\n    const { product } = useSelector(mapState);\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { productID } = useParams();\r\n    \r\n    const { \r\n        productName,\r\n        productThumbnail,\r\n        productPrice,\r\n        productDescription,\r\n    } = product;\r\n\r\n    const handleAddToCart = (product) => {\r\n        if(!product) return;\r\n        dispatch(addProduct(product))\r\n        history.push('/cart')\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            fetchProductStart(productID)\r\n        )\r\n\r\n        return () => {\r\n            dispatch(setProduct({}))\r\n        }\r\n\r\n    }, []);\r\n\r\n    return(\r\n        <div className=\"productDetailWrap\">\r\n            <table>\r\n                <tbody>\r\n                    <tr className=\"imagetr\">\r\n                        <td className=\"image\">\r\n                            <img src={productThumbnail} alt=\"thumbnail\"/>\r\n                        </td>\r\n                    </tr>\r\n                    <tr className=\"textRow\">\r\n                        <td className=\"text\">\r\n                            <span>\r\n                                {productName}\r\n                            </span>\r\n                        </td>\r\n                    </tr>\r\n                    <tr className=\"desc\">\r\n                        <td>\r\n                        <span dangerouslySetInnerHTML={{__html: productDescription}} />\r\n                        </td>\r\n                    </tr>\r\n                    <tr className=\"bottomRow\">\r\n                        <td>\r\n                            <h1>\r\n                        ${productPrice}\r\n                        </h1>\r\n                        <Button {...configAddToCardBtn} onClick={() => handleAddToCart(product)}>\r\n                            Add To Cart\r\n                        </Button>\r\n                        <Button id=\"goBackBTN\" onClick={() => history.push('/products')}>\r\n                                Go Back\r\n                        </Button>\r\n                        </td>\r\n\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductDetails;","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Admin\\index.js",["316","317","318","319"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uploadImageStart, addProductStart, fetchProductsStart, deleteProductStart, setProducts } from './../../redux/Products/products.actions.js'\r\nimport AddProductModal from './../../components/Modal/AddProductModal';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\n\r\nimport FormInput from './../../components/forms/FormInput';\r\nimport FormSelect from './../../components/forms/FormSelect';\r\nimport Button from './../../components/forms/Button';\r\nimport LoadMore from './../../components/Loadmore';\r\nimport CKEditor from 'ckeditor4-react';\r\nimport './styles.scss';\r\n\r\nconst mapState = ({ productsData, user }) => ({\r\n    products: productsData.products,\r\n    doucmentID: productsData,\r\n    currentUser: user.currentUser\r\n});\r\n\r\nconst Admin = props => {\r\n    const { products, documentID } = useSelector(mapState);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const { currentUser } = useSelector(mapState);\r\n    const [hideProductModal, setHideProductModal] = useState(true);\r\n    const [image, setImage] = useState(null)\r\n    const { filterType } = useParams();\r\n    const [productCategory, setProductCategory] = useState('');\r\n    const [productName, setProductName] = useState('');\r\n    const [productThumbnail, setProductThumbnail] = useState(\"\");\r\n    const [productPrice, setProductPrice] = useState(0);\r\n    const [productDescription, setProductDescription] = useState('');\r\n    const { data, queryDoc, isLastPage } = products;\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchProductsStart({ filterType })\r\n        )\r\n        return () => {\r\n            dispatch(setProducts([]))\r\n        }\r\n    }, [filterType]);\r\n\r\n    useEffect(() => {\r\n        console.log(filterType);\r\n        dispatch(fetchProductsStart({ filterType })\r\n        )\r\n        return () => {\r\n            dispatch(setProducts([]))\r\n        }\r\n    }, [filterType]);\r\n    \r\n    const toggleProductModal = ( ) => {\r\n        setHideProductModal(!hideProductModal);\r\n    }\r\n    const configProductModal = {\r\n        hideProductModal,\r\n        toggleProductModal\r\n    };\r\n\r\n    const resetForm = () => {\r\n        setHideProductModal(true);\r\n        setProductCategory('');\r\n        setProductName('');\r\n        setProductPrice(0);\r\n        setProductDescription('');\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            addProductStart({\r\n            productCategory,\r\n            productName,\r\n            productPrice,\r\n            productThumbnail,\r\n            productDescription,\r\n        })\r\n        );\r\n        console.log(\"look here\")\r\n        console.log(productName)\r\n        dispatch(uploadImageStart({\r\n            thisImage: image,\r\n            name: image.name,\r\n            id: productName\r\n        }))\r\n        \r\n        setTimeout(() => {  dispatch(fetchProductsStart({ filterType })\r\n        ) }, 1000);\r\n        resetForm()\r\n    }\r\n    const handleFilter = (e) => {\r\n        const nextFilter = e.target.value;\r\n        history.push(`/admin/${nextFilter}`);\r\n    };\r\n\r\n    const configFilters = {\r\n        defaultValue: filterType,\r\n          options: [{\r\n            name: 'Show All',\r\n            value: ''\r\n          }, {\r\n            name: 'Wallet',\r\n            value: 'Wallet'\r\n          }, {\r\n          name: 'Tote Bags',\r\n          value: 'Tote-Bags'\r\n          }, {\r\n          name: 'Guitar Straps',\r\n          value: 'Guitar-Straps'\r\n          }, {\r\n          name: 'Belts',\r\n          value: 'Belts'\r\n      }, {\r\n          name: 'Other',\r\n          value: 'Other'\r\n      }], handleChange: handleFilter\r\n      };\r\n\r\n    const handleLoadMore = () => {\r\n        dispatch(\r\n            fetchProductsStart({\r\n                filterType,\r\n                startAfterDoc: queryDoc, \r\n                presistProducts: data\r\n            })\r\n        );\r\n    };\r\n\r\n    const configLoadMore = {\r\n        onLoadMoreEvt: handleLoadMore\r\n    };\r\n\r\n    \r\n\r\n    return(\r\n            <div className=\"mainWrap\">\r\n                <div className=\"topWrap\">\r\n                    <h1>\r\n                        Hello {currentUser.displayName}\r\n                    </h1>\r\n                </div>\r\n                <AddProductModal {...configProductModal}>\r\n                 <div className=\"addNewProductForm\">\r\n                     <form onSubmit={handleSubmit}>\r\n                         <h2>\r\n                             Add new product\r\n                         </h2>\r\n                         <FormSelect\r\n                            required\r\n                            label=\"Category\"\r\n                            options = {[\r\n                            {   value: '',\r\n                                name: \"Select Category\"\r\n                            }, {\r\n                                value: \"Wallet\",\r\n                                name: \"Wallet\"\r\n                            }, {\r\n                                value: \"Guitar-Straps\",\r\n                                name: \"Guitar Straps\"\r\n                            }, {\r\n                                value: \"Tote-Bags\",\r\n                                name: \"Tote Bags\"\r\n                            }, {\r\n                                value: \"Belts\",\r\n                                name: \"Belts\"\r\n                            }, {\r\n                                value: \"Other\",\r\n                                name: \"Other\"\r\n                            }]}\r\n                            handleChange={e => setProductCategory(e.target.value)}\r\n                            />\r\n                            \r\n                            <FormInput\r\n                            required\r\n                            label=\"Name\"\r\n                            type=\"text\"\r\n                            value={productName}\r\n                            handleChange={e => setProductName(e.target.value)}\r\n                            />\r\n                            \r\n                            <h2 className=\"AddProductText\">Image For Thumbnail</h2>\r\n                            <input className=\"uploadBTN\"required type=\"file\" onChange={e => setImage(e.target.files[0])} />\r\n\r\n                           <FormInput \r\n                           required\r\n                                label=\"Price\"\r\n                                type=\"number\"\r\n                                min=\"0.00\"\r\n                                max=\"10000.00\"\r\n                                step=\"1\"\r\n                                value={productPrice}\r\n                                handleChange={e => setProductPrice(e.target.value)}\r\n                            />\r\n\r\n                            <h2 className=\"AddProductText\">Product Description</h2>\r\n                            <CKEditor\r\n                            required\r\n                            //on a change, use the setter we made, and the evt.editor.getData() is from the dependicy itself\r\n                            onChange={evt => setProductDescription(evt.editor.getData())}\r\n                            />\r\n                            <Button type=\"submit\">\r\n                                Add product\r\n                            </Button>  \r\n                    </form>\r\n                </div>\r\n            </AddProductModal>\r\n                <div className=\"lowWrap\">\r\n                <table className=\"topButtons\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                            <Button className=\"btn addProduct\"onClick={() => toggleProductModal()}>\r\n                                 Add new product\r\n                            </Button>\r\n                            </td>\r\n                            <td>\r\n                            <Link to={'all-orders'}>\r\n                            <Button className=\"btn addProduct\">\r\n\r\n                                View All Orders\r\n                            </Button>\r\n                            </Link>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                \r\n                \r\n                \r\n                \r\n\r\n                <h1>\r\n                Filter Your Products:\r\n                </h1>\r\n                <FormSelect {...configFilters} />\r\n                    <table border=\"0\" cellPadding=\"0\" cellSpacing=\"0\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                <table className=\"product\" border=\"0\" cellPadding=\"10\" cellSpacing=\"10\" margin={0}>\r\n                                <tbody>\r\n                                    {(Array.isArray(data) && data.length >0) && data.map((product, index) => {\r\n                                        const { \r\n                                            productName,\r\n                                            productThumbnail,\r\n                                            productPrice,\r\n                                            productCategory,\r\n                                            documentID\r\n                                        } = product;\r\n                                        return (\r\n                                            <div className=\"singleRow\">\r\n                                            <tr key={index}>\r\n                                                <td>\r\n                                                    <img src={productThumbnail} alt=\"Thumbnail\"/>\r\n                                                </td>\r\n                                                <td>\r\n                                                    {productName}\r\n                                                </td>\r\n                                                <td>\r\n                                                    ${productPrice}\r\n                                                </td>\r\n                                                <td>\r\n                                                    {productCategory}\r\n                                                </td>\r\n                                                <td>\r\n                                                <Link to={`/productedit/${documentID}`}>\r\n                                                    <Button >\r\n                                                        Edit\r\n                                                    </Button>\r\n                                                    </Link>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <Button onClick={() => dispatch(deleteProductStart(documentID))}>\r\n                                                        Delete\r\n                                                    </Button>\r\n                                                </td>\r\n                                            </tr>\r\n                                            </div>\r\n    \r\n                                        )\r\n                                    })}\r\n                                </tbody>\r\n                                {!isLastPage && (<LoadMore {...configLoadMore}/>)}\r\n                                </table>\r\n                            </td>\r\n                            </tr>\r\n\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n\r\n        //     <div className=\"manageProducts\">\r\n        //         <table border=\"0\" cellPadding=\"0\" cellSpacing=\"0\">\r\n        //             <tbody> \r\n        //                 <tr>\r\n        //                     <td>\r\n        //                         <table className=\"results\" border=\"0\" cellPadding=\"10\" cellSpacing=\"10\">\r\n        //                             <tbody>\r\n        //                                 {(Array.isArray(data) && data.length >0) && data.map((product, index) => {\r\n        //                                     const { \r\n        //                                         productName,\r\n        //                                         productThumbnail,\r\n        //                                         productPrice,\r\n        //                                         productCategory,\r\n        //                                         documentID\r\n        //                                     } = product;\r\n        //                                     return (\r\n        //                                         <div className=\"singleRow\">\r\n        //                                         <tr key={index}>\r\n        //                                             <td>\r\n        //                                                 <img src={productThumbnail} alt=\"Thumbnail\"/>\r\n        //                                             </td>\r\n        //                                             <td>\r\n        //                                                 {productName}\r\n        //                                             </td>\r\n        //                                             <td>\r\n        //                                                 ${productPrice}\r\n        //                                             </td>\r\n        //                                             <td>\r\n        //                                                 {productCategory}\r\n        //                                             </td>\r\n        //                                             <td>\r\n        //                                                 <Button onClick={() => dispatch(deleteProductStart(documentID))}>\r\n        //                                                     Delete\r\n        //                                                 </Button>\r\n        //                                             </td>\r\n        //                                             <td>\r\n        //                                             <Link to={`/productedit/${documentID}`}>\r\n        //                                                 <Button >\r\n        //                                                     Edit\r\n        //                                                 </Button>\r\n        //                                                 </Link>\r\n        //                                             </td>\r\n        //                                         </tr>\r\n        //                                         </div>\r\n        \r\n        //                                     )\r\n        //                                 })}\r\n        //                             </tbody>\r\n        //                             {!isLastPage && (\r\n        //                                 <LoadMore {...configLoadMore}/>\r\n        //                             )}\r\n        //                         </table>\r\n        //                     </td>\r\n        //                 </tr>\r\n        //             </tbody>\r\n                \r\n        //         </table>\r\n        //     </div>\r\n        // </div>\r\n        // </div>\r\n    );\r\n}\r\n\r\nexport default Admin;","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\User\\user.types.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\User\\user.reducer.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\User\\user.sagas.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Products\\products.reducer.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Products\\products.sagas.js",["320"],"import { takeLatest, put, all, call } from 'redux-saga/effects';\r\nimport { setProducts, fetchProductsStart, setProduct } from './products.actions'; \r\nimport productsTypes from './../Products/products.types';\r\nimport { handleSetImage, handleUploadImage, handleEditProduct, handleAddProduct, handleFetchProducts, handleDeleteProduct, handleFetchProduct } from './products.helpers';\r\nimport { auth } from './../../firebase/utils';\r\n\r\nexport function* addProduct( { payload } ) {\r\n\r\n    try{\r\n        const timeStamp = new Date();\r\n        yield handleAddProduct({\r\n            ...payload,\r\n            productAdminUserUID: auth.currentUser.uid,\r\n            createdDate: timeStamp\r\n        });\r\n        yield put(fetchProductsStart());\r\n    } catch(err){\r\n        //console.log(err);\r\n    }\r\n}\r\n\r\nexport function* onAddProductStart() {\r\n    yield takeLatest(productsTypes.ADD_NEW_PRODUCT_START, addProduct)\r\n}\r\n\r\nexport function* editProduct({ payload } ) {\r\n    try{\r\n        const timeStamp = new Date();\r\n        yield handleEditProduct({\r\n            ...payload,\r\n            productAdminUserUID: auth.currentUser.uid,\r\n            createdDate: timeStamp\r\n        });\r\n    } catch(err){\r\n        //console.log(err);\r\n    }\r\n}\r\n\r\nexport function* onEditProductStart() {\r\n    yield takeLatest(productsTypes.EDIT_PRODUCT_START, editProduct);\r\n}\r\n\r\nexport function* uploadImage({ payload }) {\r\n    try{\r\n        yield handleUploadImage({\r\n            ...payload,\r\n        });\r\n    } catch(err){\r\n        //console.log(err);\r\n    }\r\n}\r\n\r\nexport function* onUploadImageStart() {\r\n    yield takeLatest(productsTypes.UPLOAD_IMAGE_START, uploadImage)\r\n}\r\n\r\nexport function* fetchProducts({ payload }) {\r\n    try{\r\n        //yield makes sure we can await for the response from the helperfunction\r\n        const products = yield handleFetchProducts(payload);\r\n        //it takes the given data and uses the action setProducts to set the products\r\n        //into the store\r\n        yield put(\r\n            setProducts(products)\r\n        );\r\n    } catch(err) {\r\n        // console.log(err);\r\n    }\r\n}\r\n\r\nexport function* onFetchProductsStart(){\r\n    yield takeLatest(productsTypes.FETCH_PRODUCTS_START, fetchProducts)\r\n}\r\n\r\nexport function* deleteProduct({ payload }){\r\n    try{\r\n        yield handleDeleteProduct(payload);\r\n        yield put(\r\n            fetchProductsStart()\r\n        )\r\n    } \r\n    catch(err){\r\n        //console.log();\r\n    }\r\n}\r\n\r\nexport function* onDeleteProductStart(){\r\n    yield takeLatest(productsTypes.DELETE_PRODUCT_START, deleteProduct)\r\n}\r\n\r\nexport function* fetchProduct({payload}) {\r\n    try{\r\n        //returns the product we are looking for, note the payload is the productID\r\n        const product = yield handleFetchProduct(payload);\r\n        yield put(\r\n            setProduct(product)\r\n        );\r\n\r\n    } catch(err){\r\n        // console.log(err);\r\n    }\r\n}\r\n\r\nexport function* onFetchProductStart(){\r\n    yield takeLatest(productsTypes.FETCH_PRODUCT_START, fetchProduct)\r\n}\r\n\r\nexport default function* productsSagas() {\r\n    yield all([\r\n        call(onAddProductStart),\r\n        call(onFetchProductsStart),\r\n        call(onDeleteProductStart),\r\n        call(onFetchProductStart),\r\n        call(onEditProductStart),\r\n        call(onUploadImageStart),\r\n    ])\r\n}","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Cart\\cart.reducer.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Products\\products.actions.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\VerticalNav\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\customHooks\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\header\\index.js",["321"],"import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"./styles.scss\";\r\nimport { Link } from 'react-router-dom';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport { navBarDataSignedOut, navBarDataSignedIn, navBarDataAuth } from './NavbarData';\r\nimport { IconContext } from 'react-icons';\r\nimport {signOutUserStart} from './../../redux/User/user.actions'\r\nimport { selectCartItemsCount } from './../../redux/Cart/cart.selectors';\r\nimport { checkUserIsAdmin } from './../../Utils';\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport logo from \"./../../assets/logo.png\"\r\n\r\n\r\nconst mapState = (state) => ({\r\n    currentUser: state.user.currentUser,\r\n    totalNumCartItems: selectCartItemsCount(state)\r\n});\r\n\r\nconst Header = props => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { currentUser, totalNumCartItems } = useSelector(mapState);\r\n    const [sidebar, setSideBar] = useState(false);\r\n    const showSideBar = () => setSideBar(!sidebar);\r\n    const isAdmin = checkUserIsAdmin(currentUser);\r\nconst signOut = () => {\r\n    dispatch(signOutUserStart());\r\n}\r\n    \r\n    return (\r\n        <>\r\n        <div className=\"navBar\">\r\n            <table className=\"centerHead\">\r\n                <tbody>\r\n                    <tr>\r\n                        <td>\r\n                        <Link to=\"#\" className=\"menuBars\">\r\n                            <FaIcons.FaBars onClick={showSideBar}/>\r\n                        </Link>\r\n                        </td>\r\n                        <td>\r\n                        <Link className=\"aboutBen\"to=\"/\">\r\n                            About Ben\r\n                        </Link>\r\n                        </td>\r\n                        <td>\r\n                            <Link to=\"/\">\r\n                            <img className=\"logo\" src={logo} />\r\n                            </Link>\r\n                        </td>\r\n                        <td> \r\n                        <Link id=\"products\"to=\"/products\">\r\n                            Products\r\n                        </Link>\r\n                        </td>\r\n                        <td>\r\n                        <Link className=\"cart\" to=\"/cart\" >\r\n                            <FaIcons.FaShoppingCart/> ({totalNumCartItems})\r\n                        </Link>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>         \r\n        </div>\r\n        <IconContext.Provider value={{color: 'white'}}>\r\n        \r\n        <nav className={sidebar ? 'navMenu active':'navMenu'}>\r\n            \r\n            <ul className=\"navMenuItems\" onClick={showSideBar}>\r\n                <li className=\"navBarToggle\">\r\n                        <span className=\"menuBars\">\r\n                        <AiIcons.AiOutlineClose />\r\n                        </span>\r\n                </li>\r\n                {!currentUser && [\r\n                    <ul>\r\n                    \r\n                    <li>\r\n                        {navBarDataSignedOut.map((item, index) => {\r\n                            return (\r\n                                <li key={index} className={item.className}>\r\n                                <Link to={item.path}>\r\n                                    {item.icon}\r\n                                    <span>{item.title}</span>\r\n                                </Link>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </li>\r\n                </ul>]}\r\n                {currentUser && isAdmin && [\r\n                    <ul>\r\n                    <li>\r\n                        {navBarDataAuth.map((item, index) => {\r\n                            return (\r\n                                <li key={index} className={item.className}>\r\n                                <Link to={item.path}>\r\n                                    {item.icon}\r\n                                    <span>{item.title}</span>\r\n                                </Link>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </li>\r\n                    <li>\r\n                        <span className=\"navText\" onClick={() => signOut()}>\r\n                            SignOut\r\n                        </span>\r\n                    </li>\r\n                </ul>\r\n                ]}\r\n                {currentUser && !isAdmin && [\r\n                    <ul>\r\n                    <li>\r\n                        {navBarDataSignedIn.map((item, index) => {\r\n                            return (\r\n                                <li key={index} className={item.className}>\r\n                                <Link to={item.path}>\r\n                                    {item.icon}\r\n                                    <span>{item.title}</span>\r\n                                </Link>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </li>\r\n                    <li>\r\n                        <span className=\"navText\" onClick={() => signOut()}>\r\n                            SignOut\r\n                        </span>\r\n                    </li>\r\n                </ul>]}\r\n\r\n            </ul>\r\n        </nav>\r\n        </IconContext.Provider>\r\n        </>\r\n    )\r\n}\r\n\r\n//the connect func was imported, and it calls the function we wrote above and thats how it functionally\r\n//goes through the code\r\nexport default Header;\r\n\r\n","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\User\\user.helpers.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Cart\\cart.types.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Products\\products.types.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Cart\\cart.utils.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Products\\products.helpers.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\firebase\\utils.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\Utils\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\Loadmore\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\customHooks\\useAuth.js",["322"],"//all custom hooks should be prefixed with use\r\nimport { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n//this custom hook will be used to\r\n\r\n\r\n//deconstructed the currentUser\r\nconst mapState = ({ user }) => ({\r\n    currentUser: user.currentUser\r\n});\r\n\r\n\r\n//we want to use the UseEffect react hook, and if the current user is\r\n// null, that means the user is not logged in, so if they are not logged in, they\r\n// need to be redirected, which is what this hook does\r\nconst useAuth = props => {\r\n    const { currentUser } = useSelector(mapState);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        //if current user is null, then redirect user to log in page\r\n        if(!currentUser) {\r\n            //this redirects the user to the login page if they are trying to access a page without they shouldnt\r\n            history.push('/login');\r\n        }\r\n    }, [currentUser]);\r\n    \r\n    return currentUser;\r\n};\r\n\r\nexport default useAuth;\r\n\r\n","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\customHooks\\useAdminAuth.js",["323"],"import { useEffect, } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { checkUserIsAdmin } from './../Utils/index';\r\nconst mapState = ( { user }) => ({\r\n    currentUser: user.currentUser\r\n});\r\n\r\n//useAdminAuth returns true if the user is admin, and if the\r\n//user is not admin, it will redirect the user to ./login\r\nconst useAdminAuth = props => {\r\n    const { currentUser } = useSelector(mapState);\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        if(!checkUserIsAdmin(currentUser)) {\r\n            history.push('./login');\r\n        }\r\n\r\n    }, [currentUser]);\r\n    return currentUser\r\n}\r\n\r\nexport default useAdminAuth;","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\forms\\Button\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\forms\\FormInput\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\forms\\FormSelect\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Cart\\cart.selectors.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\firebase\\config.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\UserProfile\\index.js",["324"],"\r\nimport React from 'react';\r\nimport './styles.scss';\r\nimport userIMG from './../../assets/user.png';\r\n\r\nconst UserProfile = props => {\r\n  const { currentUser } = props;\r\n  const { displayName } = currentUser;\r\n\r\n  return (\r\n    <div className=\"userProfile\">\r\n      <ul>\r\n        <li>\r\n          <div className=\"img\">\r\n            <img src={userIMG} alt=\"Profile Picture\"/>\r\n          </div>\r\n        </li>\r\n        <li>\r\n          <span className=\"displayName\">\r\n            {displayName && displayName}\r\n          </span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserProfile;","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Cart\\cart.actions.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\AuthWrapper\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Payment\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\stripe\\config.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\Modal\\AddProductModal\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\Modal\\EditProductModal\\index.js",[],["325","326"],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\EditProductPage\\index.js",["327","328","329","330","331","332","333"],"import React, { useState, useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchProductsStart,uploadImageStart, fetchProductStart, editProductStart } from './../../redux/Products/products.actions';\r\nimport Button from './../../components/forms/Button';\r\nimport CKEditor from 'ckeditor4-react';\r\nimport FormInput from './../../components/forms/FormInput';\r\nimport FormSelect from './../../components/forms/FormSelect';\r\nimport './styles.scss';\r\n\r\nconst mapState = state => ({\r\n    product: state.productsData.product\r\n});\r\n\r\nconst EditProduct = ({}) => {\r\n    const { product } = useSelector(mapState);\r\n    const { editType } = useParams();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [editCategory, setEditCategory] = useState('');\r\n    const [editName, setEditName] = useState('');\r\n    const [editThumbnail, setEditThumbnail] = useState('');\r\n    const [editPrice, setEditPrice] = useState('');\r\n    const [editDescription, setEditDescription] = useState('');\r\n    const [image, setImage] = useState(null)\r\n\r\n    const { \r\n        productName,\r\n        productThumbnail,\r\n        productPrice,\r\n        productDescription,\r\n        productCategory\r\n    } = product;\r\n    \r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(\r\n            fetchProductStart(editType)\r\n        )\r\n\r\n        setEditCategory(productCategory)\r\n        setEditThumbnail(productThumbnail)\r\n        setEditPrice(productPrice)\r\n        setEditDescription(productDescription)\r\n\r\n    }, [productName]);\r\n    \r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch(editProductStart({\r\n            newProductCategory: editCategory,\r\n            newProductPrice: editPrice,\r\n            newProductDesc: editDescription,\r\n            id: productName\r\n        }))\r\n\r\n        if(image) {\r\n        dispatch(uploadImageStart({\r\n            thisImage: image,\r\n            name: image.name,\r\n            id: productName\r\n        }))\r\n        }\r\n        setTimeout(() => { history.goBack('/admin')}, 500);\r\n        \r\n    }\r\n\r\n        \r\n    return (\r\n        <div className=\"editProductForm\">\r\n            <form onSubmit={handleSubmit}>\r\n                <h2>\r\n                    Edit {productName}\r\n                </h2>\r\n                <Button className=\"goBackBtn\"onClick={() => history.goBack('/admin')}>\r\n                    Go Back\r\n                </Button>\r\n                \r\n                <FormSelect \r\n                    label=\"Category\"\r\n                    required\r\n                    options = {[\r\n                    {   value: '',\r\n                        name: \"Select Category\"\r\n                    }, {\r\n                        value: \"Wallet\",\r\n                        name: \"Wallet\"\r\n                    }, {\r\n                        value: \"Guitar-Straps\",\r\n                        name: \"Guitar Straps\"\r\n                    }, {\r\n                        value: \"Tote-Bags\",\r\n                        name: \"Tote Bags\"\r\n                    }, {\r\n                        value: \"Belts\",\r\n                        name: \"Belts\"\r\n                    }, {\r\n                        value: \"Other\",\r\n                        name: \"Other\"\r\n                    }]}\r\n                    handleChange={e => setEditCategory(e.target.value)}\r\n                />\r\n                <img className=\"image\"src={productThumbnail}/>\r\n                <input type=\"file\" onChange={e => setImage(e.target.files[0])} />\r\n                \r\n                <FormInput\r\n                        label=\"Price\"\r\n                        type=\"number\"\r\n                        min=\"0.00\"\r\n                        max=\"10000.00\"\r\n                        step=\"1\"\r\n                        value={editPrice}\r\n                        handleChange={e => setEditPrice(e.target.value)}\r\n                />\r\n                <CKEditor\r\n                    input=\"sdf\"\r\n                    data = {`${editDescription}`}\r\n                    onChange={evt => setEditDescription(evt.editor.getData())}\r\n                />\r\n                <Button type=\"submit\">\r\n                    Complete Edit\r\n                </Button>  \r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditProduct;","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\header\\NavbarData\\index.js",["334","335","336"],"import React, { useState } from 'react';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport * as IoIcons from 'react-icons/ai';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n// const signOut = () => {\r\n//     dispatch(signOutUserStart());\r\n// }\r\nexport const navBarDataSignedOut = [\r\n    {\r\n        title: 'Home',\r\n        path: '/',\r\n        icon: <AiIcons.AiFillHome />,\r\n        className: 'navText'\r\n    },\r\n    {\r\n        title: 'Products',\r\n        path: '/products',\r\n        icon: <AiIcons.AiFillShopping />,\r\n        className: 'navText'\r\n    },\r\n    {\r\n        title: 'Login',\r\n        path: '/login',\r\n        icon: <AiIcons.AiFillHome />,\r\n        className: 'navText'\r\n    },\r\n\r\n]\r\n\r\nexport const navBarDataSignedIn = [\r\n    {\r\n        title: 'Home',\r\n        path: '/',\r\n        icon: <AiIcons.AiFillHome />,\r\n        className: 'navText'\r\n    },\r\n    {\r\n        title: 'Products',\r\n        path: '/products',\r\n        icon: <AiIcons.AiFillShopping />,\r\n        className: 'navText'\r\n    },\r\n    {\r\n        title: 'Order History',\r\n        path: '/dashboard',\r\n        icon: <FaIcons.FaUserAlt />,\r\n        className: 'navText'\r\n    },\r\n]\r\n\r\nexport const navBarDataAuth = [\r\n    {\r\n        title: 'Home',\r\n        path: '/',\r\n        icon: <AiIcons.AiFillHome />,\r\n        className: 'navText'\r\n    },\r\n    {\r\n        title: 'Products',\r\n        path: '/products',\r\n        icon: <AiIcons.AiFillShopping />,\r\n        className: 'navText'\r\n    },\r\n    {\r\n        title: 'Manage Store',\r\n        path: '/admin',\r\n        icon: <FaIcons.FaUserEdit />,\r\n        className: 'navText'\r\n    },\r\n    \r\n\r\n]","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Cart\\Item\\index.js",["337","338","339"],"import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as HiIcons from 'react-icons/hi';\r\nimport * as TiIcons from 'react-icons/ti';\r\nimport { handleRemoveCartItem } from '../../../redux/Cart/cart.utils';\r\nimport { IconContext } from 'react-icons';\r\nimport { removeCartItem, addProduct,reduceCartItem } from './../../../redux/Cart/cart.actions';\r\n\r\nconst Item = (product) => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const {\r\n        productName,\r\n        productThumbnail,\r\n        productPrice,\r\n        quantity,\r\n        documentID\r\n    } = product;\r\n    \r\n    const handleRemoveItem = (documentID) => {\r\n        dispatch(\r\n            removeCartItem({\r\n                documentID\r\n            })\r\n        );\r\n    }\r\n\r\n    const handleAddProduct = (product) => {\r\n        dispatch(\r\n            addProduct(product)\r\n        )\r\n    }\r\n\r\n    const handleRemoveProduct = (product) => {\r\n        dispatch(\r\n            reduceCartItem(product)\r\n        )\r\n    }\r\n    \r\n    return(\r\n        <table className=\"cartItem\" border=\"0\" cellSpacing=\"0\" cellPadding=\"0\">\r\n            <tbody>\r\n                <tr>\r\n                    <td>\r\n                        <img src={productThumbnail} alt={productName} />\r\n                    </td>\r\n                    <td>\r\n                        {productName}\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"arrow\"  onClick={() => handleRemoveProduct(product)}>\r\n                            <HiIcons.HiOutlineChevronLeft/>\r\n                        </span>\r\n                        <span className=\"quantity\">\r\n                            {quantity}\r\n                        </span>\r\n                        <span  className=\"arrow\" onClick={() => handleAddProduct(product)}>\r\n                        <HiIcons.HiOutlineChevronRight/>\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        ${productPrice}\r\n                    </td>\r\n                    <td align=\"center\">\r\n                        <span className=\"cartBtn\" onClick={() => handleRemoveItem(documentID)}>\r\n                            <TiIcons.TiDeleteOutline />\r\n                        </span>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default Item;","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Payment\\PaymentDetails\\index.js",["340"],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Products\\index.js",["341","342","343"],"import React, { useEffect }from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams, Link } from 'react-router-dom';\r\nimport { fetchProductsStart } from \"../../redux/Products/products.actions\";\r\nimport { addProduct } from './../../redux/Cart/cart.actions';\r\nimport Button from './../../components/forms/Button';\r\nimport LoadMore from './../../components/Loadmore';\r\nimport Product from './Product';\r\nimport FormSelect from './../../components/forms/FormSelect';\r\nimport './styles.scss';\r\n\r\nconst mapState = ({ productsData }) => ({\r\n    products: productsData.products\r\n});\r\n\r\nconst Products = ({ }) => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    //useParams lets you deconstruct variables to use elsewhere\r\n    const { filterType } = useParams();\r\n    const { products } = useSelector(mapState);\r\n    \r\n    //products is a objectm so you have to destucture it from the objext to use it\r\n    const { data, queryDoc, isLastPage } = products;\r\n\r\n    useEffect(() => {\r\n        console.log(filterType);\r\n        dispatch(fetchProductsStart({ filterType })\r\n        )\r\n    }, [filterType]);\r\n\r\n    const handleFilter = (e) => {\r\n        const nextFilter = e.target.value;\r\n        history.push(`/products/${nextFilter}`);\r\n    };\r\n\r\n    const handleAddToCart = (product) => {\r\n        if(!product) return;\r\n        dispatch(addProduct(product))\r\n        history.push('/cart')\r\n    };\r\n\r\n    if(!Array.isArray(data)) return null;\r\n\r\n    const configFilters = {\r\n        defaultValue: filterType,\r\n          options: [{\r\n            name: 'Show All',\r\n            value: ''\r\n          }, {\r\n            name: 'Wallet',\r\n            value: 'Wallet'\r\n          }, {\r\n          name: 'Tote Bags',\r\n          value: 'Tote-Bags'\r\n          }, {\r\n          name: 'Guitar Straps',\r\n          value: 'Guitar-Straps'\r\n          }, {\r\n          name: 'Belts',\r\n          value: 'Belts'\r\n      }, {\r\n          name: 'Other',\r\n          value: 'Other'\r\n      }], handleChange: handleFilter\r\n      };\r\n\r\n      const handleLoadMore = () => {\r\n        dispatch(\r\n            fetchProductsStart({ \r\n                filterType,\r\n                startAfterDoc: queryDoc,\r\n                presistProducts: data\r\n            })\r\n        )\r\n      };\r\n\r\n    const configLoadMore = {\r\n        onLoadMoreEvt: handleLoadMore\r\n    }\r\n\r\n    if(data.length < 1){\r\n        return (\r\n            <div className=\"noResults\">\r\n                <h1>\r\n                    Browse Products\r\n                </h1>\r\n                <FormSelect {...configFilters} />\r\n                <p>\r\n                    No Search Results\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n    return(\r\n        <div>\r\n            <div className=\"search\">\r\n            <FormSelect {...configFilters} />\r\n            </div>\r\n            <div className=\"productWrapper\">\r\n                \r\n            {data.map((products, index) => {\r\n                const { documentID, productThumbnail, productName, productPrice } = products;\r\n                //this check makes sure we have all three important components\r\n                if(!productThumbnail || !productName || typeof productPrice === 'undefined') return null;\r\n\r\n                return(\r\n                    <div className=\"cell\">\r\n                        <Link to={`/product/${documentID}`}>\r\n                <img src={productThumbnail} alt={productName} />\r\n                </Link>\r\n                        <div>\r\n                            <table>\r\n                                <tbody>\r\n                                    <tr className=\"productName\">\r\n                                        <td>\r\n                                        <Link to={`/product/${documentID}`}>\r\n                                        <h1>\r\n                                        {productName}\r\n                                        </h1>\r\n                                        </Link>\r\n                                        </td>\r\n                                        <td className=\"price\">\r\n                                            <h1>\r\n                                            ${productPrice}\r\n                                            </h1>\r\n                                        </td>\r\n                                    </tr>\r\n                                \r\n                                </tbody>\r\n                            </table>\r\n                            <Button onClick={() => handleAddToCart(products)}>\r\n                                Add To Cart\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })}         \r\n\r\n        </div>\r\n        <div id=\"loadBtn\">\r\n        {!isLastPage && (\r\n                <LoadMore {...configLoadMore}/>\r\n            )} \r\n            </div>\r\n        </div>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default Products;","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Products\\Product\\index.js",["344","345","346"],"import React from 'react';\r\nimport Button from './../../../components/forms/Button';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addProduct } from './../../../redux/Cart/cart.actions';\r\n\r\nconst Product = (product) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const {\r\n        documentID,\r\n        productThumbnail,\r\n        productName,\r\n        productPrice\r\n    } = product;\r\n\r\n    if(!documentID || !productThumbnail || !productName || typeof productPrice === 'undefined') return null;\r\n\r\n\r\n    const configAddToCartBtn = {\r\n        type: 'button'\r\n    }\r\n\r\n    const handleAddToCart = (product) => {\r\n        if(!product) return;\r\n        dispatch(addProduct(product))\r\n        history.push('/cart')\r\n    };\r\n\r\n    return (\r\n        <div className=\"product\">\r\n            <div className=\"thumb\">\r\n                <Link to={`/product/${documentID}`}>\r\n                <img src={productThumbnail} alt={productName} />\r\n                </Link>\r\n            </div>\r\n            <div className=\"details\">\r\n                <ul>\r\n                    <li>\r\n                        <span className=\"name\">\r\n                        <Link to={`/product/${documentID}`}>\r\n                            {productName}\r\n                        </Link>\r\n                        </span>\r\n                    </li>\r\n                    <li>\r\n                        <span className=\"price\">\r\n                        ${productPrice}\r\n                        </span>\r\n                        \r\n                    </li>\r\n                    {/* <li>\r\n                        <div className=\"addToCart\">\r\n                            <Button {...configAddToCartBtn} onClick={() => handleAddToCart(product)} >\r\n                                Add To Cart\r\n                            </Button>\r\n                        </div>\r\n                    </li> */}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Product;","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\Footer\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Contact\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Orders\\orders.sagas.js",["347"],"import ordersTypes from './orders.types';\r\nimport { takeLatest, put, call, all, cancelled} from 'redux-saga/effects';\r\nimport { handleGetCompleteOrderHistory, handleSaveorder, handleGetUserOrderHistory, handleGetOrder } from './orders.helpers';\r\nimport { auth } from './../../firebase/utils';\r\nimport { setCompleteOrderHistory, setUserOrderHistory, setOrderDetails } from './orders.actions';\r\n\r\n\r\nexport function* getUserOrderHistory ({ payload }) {\r\n    try{\r\n        const history = yield handleGetUserOrderHistory(payload);\r\n        yield put(\r\n            setUserOrderHistory(history)\r\n        );\r\n    }\r\n    catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nexport function* onGetOrderHistoryStart() {\r\n    yield takeLatest(ordersTypes.GET_USER_ORDER_HISTORY_START, getUserOrderHistory)\r\n}\r\n\r\nexport function* getCompleteOrderHistory({ payload }) {\r\n    try{\r\n        const orders = yield handleGetCompleteOrderHistory();\r\n\r\n        yield put(\r\n            setCompleteOrderHistory(orders)\r\n        );\r\n    } catch(err){\r\n        //console.log(err)\r\n    }\r\n}\r\n\r\nexport function* onGetCompleteOrderHistoryStart() {\r\n    yield takeLatest(ordersTypes.GET_COMPLETE_ORDER_HISTORY, getCompleteOrderHistory)\r\n}\r\n\r\n\r\nexport function* saveOrder({ payload }) {\r\n    try {\r\n        const timestamp = new Date();\r\n        yield handleSaveorder({\r\n            ...payload,\r\n            orderUserID: auth.currentUser.uid,\r\n            orderCreatedDate: timestamp\r\n        });\r\n\r\n    } catch(err) {\r\n        //console.log(err);\r\n    }\r\n};\r\n\r\nexport function* onSaveOrderHistoryStart() {\r\n    yield takeLatest(ordersTypes.SAVE_ORDER_HISTORY_START, saveOrder)\r\n};\r\n\r\nexport function* getOrderDetails({ payload }) {\r\n    try {\r\n        const order = yield handleGetOrder(payload);\r\n        yield put(\r\n            setOrderDetails(order)\r\n        )\r\n    } catch(err){\r\n        //console.log(err)\r\n    }\r\n}\r\n\r\nexport function* onGetOrderDetailsStart() {\r\n    yield takeLatest(ordersTypes.GET_ORDER_DETAILS_START, getOrderDetails)\r\n}\r\n\r\nexport default function* ordersSagas() {\r\n    yield all([\r\n        call(onSaveOrderHistoryStart),\r\n        call(onGetOrderHistoryStart),\r\n        call(onGetOrderDetailsStart),\r\n        call(onGetCompleteOrderHistoryStart)\r\n    ])\r\n}","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Orders\\orders.types.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Orders\\orders.helpers.js",["348"],"import { FaRProject } from \"react-icons/fa\";\r\nimport { firestore } from './../../firebase/utils';\r\n\r\nexport const handleSaveorder = order => {\r\n    return new Promise((resolve, reject) => {\r\n        firestore\r\n            .collection('orders')\r\n            .doc()\r\n            .set(order)\r\n            .then(() => {\r\n                resolve();\r\n            })\r\n            .catch(err => {\r\n                reject(err)\r\n            });\r\n    });\r\n};\r\n\r\n\r\nexport const handleGetUserOrderHistory = uid => {\r\n    return new Promise((resolve, reject) => {\r\n        let ref = firestore.collection('orders').orderBy('orderCreatedDate');\r\n        ref = ref.where('orderUserID', '==', uid);\r\n\r\n        ref\r\n            .get()\r\n            .then(snapshot => {\r\n                const data = [\r\n                    ...snapshot.docs.map(doc => {\r\n                        return {\r\n                            ...doc.data(),\r\n                            documentID: doc.id\r\n                        }\r\n                    })\r\n                ];\r\n\r\n                resolve({ data });\r\n            })\r\n            .catch(err => {\r\n                reject(err);\r\n            });\r\n\r\n    });\r\n}\r\n\r\nexport const handleGetCompleteOrderHistory = props => {\r\n    return new Promise((resolve, reject) => {\r\n        firestore\r\n            .collection('orders')\r\n            .get()\r\n            .then(snapshot => {\r\n                const data = [\r\n                ...snapshot.docs.map(doc => {\r\n                    return {\r\n                        ...doc.data(),\r\n                        documentID: doc.id\r\n                    }\r\n                })\r\n            ];\r\n\r\n            resolve({data});\r\n            })\r\n            .catch(err => {\r\n                reject(err);\r\n        })\r\n    })\r\n}\r\n\r\nexport const handleGetOrder = orderID => {\r\n    return new Promise((resolve, reject) => {\r\n        firestore\r\n        .collection('orders')\r\n        .doc(orderID)\r\n        .get()\r\n        .then(snapshot => {\r\n            if(snapshot.exists) {\r\n                resolve({\r\n                    ...snapshot.data(),\r\n                    documentID: orderID\r\n                })\r\n            }\r\n        })\r\n        .catch(err => {\r\n            reject(err);\r\n        })\r\n    })\r\n}","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Orders\\orders.actions.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Dashboard\\index.js",["349"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getUserOrderHistory } from './../../redux/Orders/orders.actions';\r\nimport OrderHistory from './../../components/OrderHistory'\r\nimport './styles.scss';\r\n\r\nconst mapState = ({ user, ordersData }) => ({\r\n    currentUser: user.currentUser,\r\n    orderHistory: ordersData.orderHistory.data\r\n})\r\n\r\nconst Dashboard = props => {\r\n    const dispatch = useDispatch();\r\n    const { currentUser, orderHistory } = useSelector(mapState);\r\n\r\n    useEffect(() => {\r\n        dispatch(getUserOrderHistory(currentUser.id)\r\n    );\r\n\r\n    } , []);\r\n\r\n    if((Array.isArray(orderHistory) && orderHistory.length < 1)) {\r\n        return(\r\n            <div>\r\n                No Orders To Look At\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <div className=\"wrap\">\r\n            <h1>\r\n                Order History\r\n            </h1>\r\n            <OrderHistory orders={orderHistory}/>\r\n        </div>\r\n    );\r\n    }\r\n\r\n\r\nexport default Dashboard;","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Orders\\orders.reducers.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\OrderHistory\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Order\\index.js",["350"],"  \r\nimport React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getOrderDetailsStart } from './../../redux/Orders/orders.actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport OrderDetails from './../../components/OrderDetails';\r\n\r\nconst mapState = ({ ordersData }) => ({\r\n  orderDetails: ordersData.orderDetails\r\n});\r\n\r\nconst Order = () => {\r\n  const { orderID } = useParams();\r\n  const dispatch = useDispatch();\r\n  const { orderDetails } = useSelector(mapState);\r\n  const { orderTotal } = orderDetails;\r\n\r\n  useEffect(() => {\r\n\r\n    dispatch(\r\n      getOrderDetailsStart(orderID)\r\n    );\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n\r\n      <h1>\r\n        Order ID: #{orderID}\r\n      </h1>\r\n\r\n      <OrderDetails order={orderDetails} />\r\n\r\n      <h3>\r\n        Total: {orderTotal}\r\n      </h3>\r\n\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Order;","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\OrderDetails\\index.js",["351","352"],"import React, { useEffect } from 'react';\r\nimport {\r\n  TableContainer, Table, TableHead,\r\n  TableBody, TableRow, TableCell\r\n} from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setOrderDetails } from './../../redux/Orders/orders.actions';\r\nimport './styles.scss'\r\n\r\nconst columns = [\r\n  {\r\n    id: 'productThumbnail',\r\n    label: ''\r\n  },\r\n  {\r\n    id: 'productName',\r\n    label: 'Name'\r\n  },\r\n  {\r\n    id: 'productPrice',\r\n    label: 'Price'\r\n  },\r\n  {\r\n    id: 'quantity',\r\n    label: 'Quantity'\r\n  }\r\n]\r\n\r\nconst styles = {\r\n  fontSize: '16px',\r\n  width: '10%'\r\n};\r\n\r\nconst formatText = (columnName, columnValue) => {\r\n  switch(columnName) {\r\n    case 'productPrice':\r\n      return `$${columnValue}`;\r\n    case 'productThumbnail':\r\n      return <img src={columnValue} border=\"10px solid black\"/>;\r\n    default:\r\n      return columnValue;\r\n  }\r\n}\r\n\r\nconst OrderDetails = ({ order }) => {\r\n  const dispatch = useDispatch();\r\n  const orderItems = order && order.orderItems;\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(\r\n        setOrderDetails({})\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table>\r\n\r\n        <TableHead>\r\n          <TableRow>\r\n\r\n            {columns.map((col, pos) => {\r\n              return (\r\n                <TableCell\r\n                  key={pos}\r\n                  style={styles}\r\n                >\r\n                  {col.label}\r\n                </TableCell>\r\n              )\r\n            })}\r\n\r\n          </TableRow>\r\n        </TableHead>\r\n\r\n        <TableBody>\r\n\r\n          {(Array.isArray(orderItems) && orderItems.length > 0) && orderItems.map((row, pos) => {\r\n            return (\r\n              <TableRow key={pos}>\r\n\r\n                {columns.map((col, pos) => {\r\n                  const columnName = col.id;\r\n                  const columnValue = row[columnName];\r\n\r\n                  return (\r\n                    <TableCell\r\n                      key={pos}\r\n                      style={styles}\r\n                    >\r\n                      {formatText(columnName, columnValue)}\r\n                    </TableCell>\r\n                  )\r\n                })}\r\n\r\n              </TableRow>\r\n            )\r\n          })}\r\n\r\n        </TableBody>\r\n\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}\r\n\r\nexport default OrderDetails;","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\AllOrders\\index.js",["353"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCompleteOrderHistory } from './../../redux/Orders/orders.actions';\r\nimport OrderHistory from './../../components/OrderHistory'\r\nimport './styles.scss';\r\n\r\nconst mapState = ({ ordersData }) => ({\r\n    completeOrderHistory: ordersData.completeOrderHistory.data\r\n})\r\n\r\nconst AllOrders = props => {\r\n    const dispatch = useDispatch();\r\n    const { completeOrderHistory } = useSelector(mapState);\r\n\r\n    useEffect(() => {\r\n        dispatch(getCompleteOrderHistory()\r\n    );\r\n\r\n    } , []);\r\n\r\n    return (\r\n        <div className=\"allOrdersWrap\">\r\n            <h1>\r\n                All Orders\r\n            </h1>\r\n            <OrderHistory orders={completeOrderHistory}/>\r\n        </div>\r\n    );\r\n    }\r\n\r\n\r\nexport default AllOrders;",{"ruleId":"354","replacedBy":"355"},{"ruleId":"356","replacedBy":"357"},{"ruleId":"358","severity":1,"message":"359","line":6,"column":10,"nodeType":"360","messageId":"361","endLine":6,"endColumn":18},{"ruleId":"358","severity":1,"message":"362","line":16,"column":8,"nodeType":"360","messageId":"361","endLine":16,"endColumn":19},{"ruleId":"363","severity":1,"message":"364","line":43,"column":6,"nodeType":"365","endLine":43,"endColumn":8,"suggestions":"366"},{"ruleId":"367","severity":1,"message":"368","line":18,"column":1,"nodeType":"369","endLine":21,"endColumn":3},{"ruleId":"370","severity":1,"message":"371","line":16,"column":15,"nodeType":"372","messageId":"373","endLine":16,"endColumn":17},{"ruleId":"358","severity":1,"message":"374","line":1,"column":17,"nodeType":"360","messageId":"361","endLine":1,"endColumn":26},{"ruleId":"358","severity":1,"message":"375","line":2,"column":8,"nodeType":"360","messageId":"361","endLine":2,"endColumn":16},{"ruleId":"376","severity":1,"message":"377","line":30,"column":29,"nodeType":"378","endLine":30,"endColumn":70},{"ruleId":"376","severity":1,"message":"377","line":45,"column":29,"nodeType":"378","endLine":45,"endColumn":78},{"ruleId":"363","severity":1,"message":"379","line":34,"column":8,"nodeType":"365","endLine":34,"endColumn":21,"suggestions":"380"},{"ruleId":"363","severity":1,"message":"381","line":32,"column":5,"nodeType":"365","endLine":32,"endColumn":27,"suggestions":"382"},{"ruleId":"363","severity":1,"message":"379","line":30,"column":8,"nodeType":"365","endLine":30,"endColumn":21,"suggestions":"383"},{"ruleId":"370","severity":1,"message":"371","line":18,"column":25,"nodeType":"372","messageId":"373","endLine":18,"endColumn":27},{"ruleId":"363","severity":1,"message":"384","line":47,"column":8,"nodeType":"365","endLine":47,"endColumn":10,"suggestions":"385"},{"ruleId":"358","severity":1,"message":"386","line":21,"column":23,"nodeType":"360","messageId":"361","endLine":21,"endColumn":33},{"ruleId":"358","severity":1,"message":"387","line":30,"column":30,"nodeType":"360","messageId":"361","endLine":30,"endColumn":49},{"ruleId":"363","severity":1,"message":"364","line":42,"column":8,"nodeType":"365","endLine":42,"endColumn":20,"suggestions":"388"},{"ruleId":"363","severity":1,"message":"364","line":51,"column":8,"nodeType":"365","endLine":51,"endColumn":20,"suggestions":"389"},{"ruleId":"358","severity":1,"message":"390","line":4,"column":10,"nodeType":"360","messageId":"361","endLine":4,"endColumn":24},{"ruleId":"376","severity":1,"message":"377","line":49,"column":29,"nodeType":"378","endLine":49,"endColumn":64},{"ruleId":"363","severity":1,"message":"379","line":28,"column":8,"nodeType":"365","endLine":28,"endColumn":21,"suggestions":"391"},{"ruleId":"363","severity":1,"message":"379","line":19,"column":8,"nodeType":"365","endLine":19,"endColumn":21,"suggestions":"392"},{"ruleId":"393","severity":1,"message":"394","line":15,"column":13,"nodeType":"378","endLine":15,"endColumn":55},{"ruleId":"354","replacedBy":"395"},{"ruleId":"356","replacedBy":"396"},{"ruleId":"358","severity":1,"message":"397","line":4,"column":10,"nodeType":"360","messageId":"361","endLine":4,"endColumn":28},{"ruleId":"370","severity":1,"message":"371","line":15,"column":22,"nodeType":"372","messageId":"373","endLine":15,"endColumn":24},{"ruleId":"358","severity":1,"message":"398","line":21,"column":12,"nodeType":"360","messageId":"361","endLine":21,"endColumn":20},{"ruleId":"358","severity":1,"message":"399","line":21,"column":22,"nodeType":"360","messageId":"361","endLine":21,"endColumn":33},{"ruleId":"358","severity":1,"message":"400","line":22,"column":12,"nodeType":"360","messageId":"361","endLine":22,"endColumn":25},{"ruleId":"363","severity":1,"message":"401","line":47,"column":8,"nodeType":"365","endLine":47,"endColumn":21,"suggestions":"402"},{"ruleId":"376","severity":1,"message":"377","line":104,"column":17,"nodeType":"378","endLine":104,"endColumn":63},{"ruleId":"358","severity":1,"message":"403","line":1,"column":17,"nodeType":"360","messageId":"361","endLine":1,"endColumn":25},{"ruleId":"358","severity":1,"message":"404","line":4,"column":13,"nodeType":"360","messageId":"361","endLine":4,"endColumn":20},{"ruleId":"358","severity":1,"message":"405","line":5,"column":10,"nodeType":"360","messageId":"361","endLine":5,"endColumn":14},{"ruleId":"358","severity":1,"message":"406","line":1,"column":17,"nodeType":"360","messageId":"361","endLine":1,"endColumn":26},{"ruleId":"358","severity":1,"message":"407","line":5,"column":10,"nodeType":"360","messageId":"361","endLine":5,"endColumn":30},{"ruleId":"358","severity":1,"message":"408","line":6,"column":10,"nodeType":"360","messageId":"361","endLine":6,"endColumn":21},{"ruleId":"363","severity":1,"message":"379","line":48,"column":8,"nodeType":"365","endLine":48,"endColumn":19,"suggestions":"409"},{"ruleId":"358","severity":1,"message":"410","line":8,"column":8,"nodeType":"360","messageId":"361","endLine":8,"endColumn":15},{"ruleId":"370","severity":1,"message":"371","line":16,"column":19,"nodeType":"372","messageId":"373","endLine":16,"endColumn":22},{"ruleId":"363","severity":1,"message":"364","line":30,"column":8,"nodeType":"365","endLine":30,"endColumn":20,"suggestions":"411"},{"ruleId":"358","severity":1,"message":"412","line":2,"column":8,"nodeType":"360","messageId":"361","endLine":2,"endColumn":14},{"ruleId":"358","severity":1,"message":"413","line":21,"column":11,"nodeType":"360","messageId":"361","endLine":21,"endColumn":29},{"ruleId":"358","severity":1,"message":"414","line":25,"column":11,"nodeType":"360","messageId":"361","endLine":25,"endColumn":26},{"ruleId":"358","severity":1,"message":"415","line":2,"column":38,"nodeType":"360","messageId":"361","endLine":2,"endColumn":47},{"ruleId":"358","severity":1,"message":"416","line":1,"column":10,"nodeType":"360","messageId":"361","endLine":1,"endColumn":20},{"ruleId":"363","severity":1,"message":"417","line":20,"column":9,"nodeType":"365","endLine":20,"endColumn":11,"suggestions":"418"},{"ruleId":"363","severity":1,"message":"419","line":24,"column":6,"nodeType":"365","endLine":24,"endColumn":8,"suggestions":"420"},{"ruleId":"376","severity":1,"message":"377","line":39,"column":14,"nodeType":"378","endLine":39,"endColumn":64},{"ruleId":"363","severity":1,"message":"364","line":55,"column":6,"nodeType":"365","endLine":55,"endColumn":8,"suggestions":"421"},{"ruleId":"363","severity":1,"message":"364","line":19,"column":9,"nodeType":"365","endLine":19,"endColumn":11,"suggestions":"422"},"no-native-reassign",["423"],"no-negated-in-lhs",["424"],"no-unused-vars","'Elements' is defined but never used.","Identifier","unusedVar","'AdminLayout' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["425"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'Component' is defined but never used.","'ReactDOM' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["426"],"React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["427"],["428"],"React Hook useEffect has missing dependencies: 'dispatch' and 'productID'. Either include them or remove the dependency array.",["429"],"'documentID' is assigned a value but never used.","'setProductThumbnail' is assigned a value but never used.",["430"],["431"],"'handleSetImage' is defined but never used.",["432"],["433"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",["423"],["424"],"'fetchProductsStart' is defined but never used.","'editName' is assigned a value but never used.","'setEditName' is assigned a value but never used.","'editThumbnail' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'editType', 'productCategory', 'productDescription', 'productPrice', and 'productThumbnail'. Either include them or remove the dependency array.",["434"],"'useState' is defined but never used.","'IoIcons' is defined but never used.","'Link' is defined but never used.","'useEffect' is defined but never used.","'handleRemoveCartItem' is defined but never used.","'IconContext' is defined but never used.",["435"],"'Product' is defined but never used.",["436"],"'Button' is defined but never used.","'configAddToCartBtn' is assigned a value but never used.","'handleAddToCart' is assigned a value but never used.","'cancelled' is defined but never used.","'FaRProject' is defined but never used.","React Hook useEffect has missing dependencies: 'currentUser.id' and 'dispatch'. Either include them or remove the dependency array.",["437"],"React Hook useEffect has missing dependencies: 'dispatch' and 'orderID'. Either include them or remove the dependency array.",["438"],["439"],["440"],"no-global-assign","no-unsafe-negation",{"desc":"441","fix":"442"},{"desc":"443","fix":"444"},{"desc":"445","fix":"446"},{"desc":"443","fix":"447"},{"desc":"448","fix":"449"},{"desc":"450","fix":"451"},{"desc":"450","fix":"452"},{"desc":"443","fix":"453"},{"desc":"443","fix":"454"},{"desc":"455","fix":"456"},{"desc":"457","fix":"458"},{"desc":"450","fix":"459"},{"desc":"460","fix":"461"},{"desc":"462","fix":"463"},{"desc":"441","fix":"464"},{"desc":"441","fix":"465"},"Update the dependencies array to be: [dispatch]",{"range":"466","text":"467"},"Update the dependencies array to be: [currentUser, history]",{"range":"468","text":"469"},"Update the dependencies array to be: [dispatch, history, resetPasswordSuccess]",{"range":"470","text":"471"},{"range":"472","text":"469"},"Update the dependencies array to be: [dispatch, productID]",{"range":"473","text":"474"},"Update the dependencies array to be: [dispatch, filterType]",{"range":"475","text":"476"},{"range":"477","text":"476"},{"range":"478","text":"469"},{"range":"479","text":"469"},"Update the dependencies array to be: [dispatch, editType, productCategory, productDescription, productName, productPrice, productThumbnail]",{"range":"480","text":"481"},"Update the dependencies array to be: [history, itemCount]",{"range":"482","text":"483"},{"range":"484","text":"476"},"Update the dependencies array to be: [currentUser.id, dispatch]",{"range":"485","text":"486"},"Update the dependencies array to be: [dispatch, orderID]",{"range":"487","text":"488"},{"range":"489","text":"467"},{"range":"490","text":"467"},[1464,1466],"[dispatch]",[1240,1253],"[currentUser, history]",[1134,1156],"[dispatch, history, resetPasswordSuccess]",[1099,1112],[1198,1200],"[dispatch, productID]",[1770,1782],"[dispatch, filterType]",[1990,2002],[948,961],[629,642],[1605,1618],"[dispatch, editType, productCategory, productDescription, productName, productPrice, productThumbnail]",[1855,1866],"[history, itemCount]",[1153,1165],[630,632],"[currentUser.id, dispatch]",[657,659],"[dispatch, orderID]",[1114,1116],[593,595]]