[{"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\index.js":"1","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\App.js":"2","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\createStore.js":"3","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\User\\user.actions.js":"4","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\hoc\\withAdminAuth.js":"5","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\layouts\\MainLayout.js":"6","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\hoc\\withAuth.js":"7","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\layouts\\AdminLayout.js":"8","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\layouts\\HomepageLayout.js":"9","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\rootReducer.js":"10","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\rootSaga.js":"11","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Search\\index.js":"12","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\AboutMe\\index.js":"13","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Cart\\index.js":"14","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Homepage\\index.js":"15","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Login\\index.js":"16","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Recovery\\index.js":"17","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Gallery\\index.js":"18","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\ContactMe\\index.js":"19","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Register\\index.js":"20","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Dashboard\\index.js":"21","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\ProductDetails\\index.js":"22","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Admin\\index.js":"23","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\User\\user.types.js":"24","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\User\\user.reducer.js":"25","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\User\\user.sagas.js":"26","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Products\\products.reducer.js":"27","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Products\\products.sagas.js":"28","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Cart\\cart.reducer.js":"29","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Products\\products.actions.js":"30","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\VerticalNav\\index.js":"31","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\customHooks\\index.js":"32","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\header\\index.js":"33","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\User\\user.helpers.js":"34","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Cart\\cart.types.js":"35","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Products\\products.types.js":"36","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Cart\\cart.utils.js":"37","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Products\\products.helpers.js":"38","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\firebase\\utils.js":"39","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\Utils\\index.js":"40","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\ProductResults\\index.js":"41","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\Checkout\\index.js":"42","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\EmailPassword\\index.js":"43","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\SignIn\\index.js":"44","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\SignUp\\index.js":"45","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\Loadmore\\index.js":"46","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\ProductCard\\index.js":"47","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\customHooks\\useAuth.js":"48","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\customHooks\\useAdminAuth.js":"49","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\forms\\Button\\index.js":"50","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\forms\\FormInput\\index.js":"51","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\forms\\FormSelect\\index.js":"52","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Cart\\cart.selectors.js":"53","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\firebase\\config.js":"54","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\UserProfile\\index.js":"55","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Cart\\cart.actions.js":"56","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\ProductResults\\Product\\index.js":"57","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\AuthWrapper\\index.js":"58","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\Checkout\\Item\\index.js":"59","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Payment\\index.js":"60","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\PaymentDetails\\index.js":"61","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\stripe\\config.js":"62","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\Modal\\AddProductModal\\index.js":"63","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\Modal\\EditProductModal\\index.js":"64","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\EditProductPage\\index.js":"65","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\EditProduct\\index.js":"66","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\header\\NavbarData\\index.js":"67"},{"size":841,"mtime":1609489805252,"results":"68","hashOfConfig":"69"},{"size":4916,"mtime":1610092179733,"results":"70","hashOfConfig":"69"},{"size":623,"mtime":1609489805281,"results":"71","hashOfConfig":"69"},{"size":1486,"mtime":1609489805278,"results":"72","hashOfConfig":"69"},{"size":253,"mtime":1609489805251,"results":"73","hashOfConfig":"69"},{"size":518,"mtime":1609489805256,"results":"74","hashOfConfig":"69"},{"size":326,"mtime":1609489805251,"results":"75","hashOfConfig":"69"},{"size":1139,"mtime":1609489805253,"results":"76","hashOfConfig":"69"},{"size":329,"mtime":1609489805254,"results":"77","hashOfConfig":"69"},{"size":752,"mtime":1609489805282,"results":"78","hashOfConfig":"69"},{"size":396,"mtime":1609489805282,"results":"79","hashOfConfig":"69"},{"size":256,"mtime":1609489805271,"results":"80","hashOfConfig":"69"},{"size":268,"mtime":1609489805258,"results":"81","hashOfConfig":"69"},{"size":211,"mtime":1609489805261,"results":"82","hashOfConfig":"69"},{"size":269,"mtime":1609489805266,"results":"83","hashOfConfig":"69"},{"size":226,"mtime":1609489805267,"results":"84","hashOfConfig":"69"},{"size":185,"mtime":1609489805270,"results":"85","hashOfConfig":"69"},{"size":270,"mtime":1609489805265,"results":"86","hashOfConfig":"69"},{"size":276,"mtime":1609489805262,"results":"87","hashOfConfig":"69"},{"size":205,"mtime":1609489805271,"results":"88","hashOfConfig":"69"},{"size":171,"mtime":1609489805264,"results":"89","hashOfConfig":"69"},{"size":242,"mtime":1609489805268,"results":"90","hashOfConfig":"69"},{"size":11154,"mtime":1610082798304,"results":"91","hashOfConfig":"69"},{"size":568,"mtime":1609489805281,"results":"92","hashOfConfig":"69"},{"size":1140,"mtime":1609489805279,"results":"93","hashOfConfig":"69"},{"size":4313,"mtime":1609489805280,"results":"94","hashOfConfig":"69"},{"size":732,"mtime":1610082413596,"results":"95","hashOfConfig":"69"},{"size":2919,"mtime":1610082414431,"results":"96","hashOfConfig":"69"},{"size":1323,"mtime":1609489805273,"results":"97","hashOfConfig":"69"},{"size":978,"mtime":1610082412391,"results":"98","hashOfConfig":"69"},{"size":576,"mtime":1609489805241,"results":"99","hashOfConfig":"69"},{"size":224,"mtime":1609489805247,"results":"100","hashOfConfig":"69"},{"size":5450,"mtime":1610092049368,"results":"101","hashOfConfig":"69"},{"size":803,"mtime":1609489805279,"results":"102","hashOfConfig":"69"},{"size":199,"mtime":1609489805274,"results":"103","hashOfConfig":"69"},{"size":380,"mtime":1610082415399,"results":"104","hashOfConfig":"69"},{"size":2062,"mtime":1609489805275,"results":"105","hashOfConfig":"69"},{"size":4081,"mtime":1610082411290,"results":"106","hashOfConfig":"69"},{"size":2322,"mtime":1609489805250,"results":"107","hashOfConfig":"69"},{"size":635,"mtime":1609489805220,"results":"108","hashOfConfig":"69"},{"size":3379,"mtime":1609489805236,"results":"109","hashOfConfig":"69"},{"size":5068,"mtime":1609489805227,"results":"110","hashOfConfig":"69"},{"size":2685,"mtime":1609489805228,"results":"111","hashOfConfig":"69"},{"size":3881,"mtime":1609489805237,"results":"112","hashOfConfig":"69"},{"size":4212,"mtime":1609489805238,"results":"113","hashOfConfig":"69"},{"size":283,"mtime":1609489805230,"results":"114","hashOfConfig":"69"},{"size":3130,"mtime":1609490942513,"results":"115","hashOfConfig":"69"},{"size":1029,"mtime":1609489805248,"results":"116","hashOfConfig":"69"},{"size":703,"mtime":1609489805248,"results":"117","hashOfConfig":"69"},{"size":246,"mtime":1609489805243,"results":"118","hashOfConfig":"69"},{"size":425,"mtime":1609489805244,"results":"119","hashOfConfig":"69"},{"size":717,"mtime":1609489805245,"results":"120","hashOfConfig":"69"},{"size":826,"mtime":1609489805273,"results":"121","hashOfConfig":"69"},{"size":396,"mtime":1609489805249,"results":"122","hashOfConfig":"69"},{"size":603,"mtime":1609489805239,"results":"123","hashOfConfig":"69"},{"size":451,"mtime":1609489805272,"results":"124","hashOfConfig":"69"},{"size":2014,"mtime":1609490163082,"results":"125","hashOfConfig":"69"},{"size":436,"mtime":1609489805225,"results":"126","hashOfConfig":"69"},{"size":2149,"mtime":1609489805227,"results":"127","hashOfConfig":"69"},{"size":478,"mtime":1609489805268,"results":"128","hashOfConfig":"69"},{"size":9733,"mtime":1609489805233,"results":"129","hashOfConfig":"69"},{"size":140,"mtime":1609489805283,"results":"130","hashOfConfig":"69"},{"size":422,"mtime":1609489805231,"results":"131","hashOfConfig":"69"},{"size":436,"mtime":1609489805232,"results":"132","hashOfConfig":"69"},{"size":266,"mtime":1609494261245,"results":"133","hashOfConfig":"69"},{"size":4404,"mtime":1610084107556,"results":"134","hashOfConfig":"69"},{"size":3038,"mtime":1610091497360,"results":"135","hashOfConfig":"69"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},"76gd0q",{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"138"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"138"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"138"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"138"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"138"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"138"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"138"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"138"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"138"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"138"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"138"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"138"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"138"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"138"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"138"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"138"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"138"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"286","messages":"287","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\index.js",[],["288","289"],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\App.js",["290"],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\createStore.js",["291"],"import { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { persistStore } from 'redux-persist';\r\n\r\nimport rootReducer from './rootReducer';\r\nimport rootSaga from './rootSaga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nexport const middlewares = [thunk, sagaMiddleware, logger];\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport default {\r\n    store,\r\n    persistor\r\n};","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\User\\user.actions.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\hoc\\withAdminAuth.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\layouts\\MainLayout.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\hoc\\withAuth.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\layouts\\AdminLayout.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\layouts\\HomepageLayout.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\rootReducer.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\rootSaga.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Search\\index.js",["292"],"import React from 'react';\r\nimport ProductResults from './../../components/ProductResults';\r\n\r\nconst Search = ({ }) => {\r\n    return(\r\n        <div className=\"searchPage\">\r\n            <ProductResults />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Search","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\AboutMe\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Cart\\index.js",["293"],"import React from 'react';\r\nimport Checkout from './../../components/Checkout';\r\n\r\nconst Cart = ({}) => {\r\n    return (\r\n        <div>\r\n            <Checkout />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cart;","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Homepage\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Login\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Recovery\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Gallery\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\ContactMe\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Register\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Dashboard\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\ProductDetails\\index.js",["294"],"import React from 'react';\r\nimport ProductCard from './../../components/ProductCard';\r\nconst ProductDetails = ({}) => {\r\n    return(\r\n        <div>\r\n            <ProductCard />\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default ProductDetails;","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Admin\\index.js",["295","296","297","298"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addProductStart, fetchProductsStart, deleteProductStart, setProducts } from './../../redux/Products/products.actions.js'\r\nimport AddProductModal from './../../components/Modal/AddProductModal';\r\nimport EditProductModal from './../../components/Modal/EditProductModal';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport FormInput from './../../components/forms/FormInput';\r\nimport FormSelect from './../../components/forms/FormSelect';\r\nimport Button from './../../components/forms/Button';\r\nimport LoadMore from './../../components/Loadmore';\r\nimport CKEditor from 'ckeditor4-react';\r\nimport './styles.scss';\r\n\r\nconst mapState = ({ productsData }) => ({\r\n    products: productsData.products\r\n});\r\n\r\nconst Admin = props => {\r\n    const { products } = useSelector(mapState);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [hideProductModal, setHideProductModal] = useState(true);\r\n    const { filterType } = useParams();\r\n    const [hideEditProductModal, setHideEditProductModal] = useState(true);\r\n    const [productCategory, setProductCategory] = useState('');\r\n    const [productName, setProductName] = useState('');\r\n    const [productThumbnail, setProductThumbnail] = useState('');\r\n    const [productPrice, setProductPrice] = useState(0);\r\n    const [productDescription, setProductDescription] = useState('');\r\n\r\n    const { data, queryDoc, isLastPage } = products;\r\n    \r\n    useEffect(() => {\r\n        console.log(filterType);\r\n        dispatch(fetchProductsStart({ filterType })\r\n        )\r\n        return () => {\r\n            dispatch(setProducts([]))\r\n        }\r\n    }, [filterType]);\r\n    \r\n    const toggleProductModal = ( ) => {\r\n        setHideProductModal(!hideProductModal);\r\n    }\r\n    const configProductModal = {\r\n        hideProductModal,\r\n        toggleProductModal\r\n    };\r\n\r\n    const toggleEditProductModal = () => {\r\n        setHideEditProductModal(!hideEditProductModal)\r\n    }\r\n\r\n    const configEditProductModal = {\r\n        hideEditProductModal,\r\n        toggleEditProductModal\r\n    }\r\n    const resetForm = () => {\r\n        setHideProductModal(true);\r\n        setProductCategory('');\r\n        setProductName('');\r\n        setProductThumbnail('');\r\n        setProductPrice(0);\r\n        setProductDescription('');\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        dispatch(\r\n            addProductStart({\r\n            productCategory,\r\n            productName,\r\n            productThumbnail,\r\n            productPrice,\r\n            productDescription\r\n        })\r\n        );\r\n        //to close to modal and reset page to see the new product\r\n        resetForm();\r\n    }\r\n    const handleEditSubmit = e => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    const handleFilter = (e) => {\r\n        const nextFilter = e.target.value;\r\n        history.push(`/admin/${nextFilter}`);\r\n    };\r\n\r\n    const configFilters = {\r\n        defaultValue: filterType,\r\n          options: [{\r\n            name: 'Show All',\r\n            value: ''\r\n          }, {\r\n            name: 'Wallet',\r\n            value: 'wallet'\r\n          }, {\r\n          name: 'Tote Bags',\r\n          value: 'tote-bags'\r\n          }, {\r\n          name: 'Guitar Straps',\r\n          value: 'guitar-straps'\r\n          }, {\r\n          name: 'Belts',\r\n          value: 'belts'\r\n      }, {\r\n          name: 'Other',\r\n          value: 'other'\r\n      }], handleChange: handleFilter\r\n      };\r\n\r\n    const handleLoadMore = () => {\r\n        dispatch(\r\n            fetchProductsStart({\r\n                filterType,\r\n                startAfterDoc: queryDoc, \r\n                presistProducts: data\r\n            })\r\n        );\r\n    };\r\n\r\n    const configLoadMore = {\r\n        onLoadMoreEvt: handleLoadMore\r\n    };\r\n\r\n    return(\r\n        <div className=\"admin\">\r\n            <div className=\"callToActions\">\r\n                <ul>\r\n                    <li>\r\n                        <h1>\r\n                            Manage Products\r\n                        </h1>\r\n                    </li>\r\n                    <li>\r\n                        <h2>\r\n                            Search Your Product Type\r\n                        </h2>\r\n                    <FormSelect {...configFilters} />\r\n                    </li>\r\n                    <li>\r\n                        <Button onClick={() => toggleProductModal()}>\r\n                            Add new product\r\n                        </Button>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <AddProductModal {...configProductModal}>\r\n                <div className=\"addNewProductForm\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <h2>\r\n                            Add new product\r\n                        </h2>\r\n                        <FormSelect\r\n                            required\r\n                            label=\"Category\"\r\n                            options = {[\r\n                            {   value: '',\r\n                                name: \"Select Category\"\r\n                            }, {\r\n                                value: \"Wallet\",\r\n                                name: \"Wallet\"\r\n                            }, {\r\n                                value: \"Guitar-Straps\",\r\n                                name: \"Guitar Straps\"\r\n                            }, {\r\n                                value: \"Tote-Bags\",\r\n                                name: \"Tote Bags\"\r\n                            }, {\r\n                                value: \"Belts\",\r\n                                name: \"Belts\"\r\n                            }, {\r\n                                value: \"Other\",\r\n                                name: \"Other\"\r\n                            }]}\r\n                            handleChange={e => setProductCategory(e.target.value)}\r\n                            />\r\n                            \r\n                            <FormInput\r\n                            required\r\n                            label=\"Name\"\r\n                            type=\"text\"\r\n                            value={productName}\r\n                            handleChange={e => setProductName(e.target.value)}\r\n                            />\r\n\r\n                            <FormInput \r\n                            required\r\n                                label=\"Main image URL\"\r\n                                type=\"url\"\r\n                                value={productThumbnail}\r\n                                handleChange={e => setProductThumbnail(e.target.value)}\r\n                            />\r\n\r\n                           <FormInput \r\n                           required\r\n                                label=\"Price\"\r\n                                type=\"number\"\r\n                                min=\"0.00\"\r\n                                max=\"10000.00\"\r\n                                step=\"1\"\r\n                                value={productPrice}\r\n                                handleChange={e => setProductPrice(e.target.value)}\r\n                            />\r\n                            <CKEditor\r\n                            required\r\n                            //on a change, use the setter we made, and the evt.editor.getData() is from the dependicy itself\r\n                            onChange={evt => setProductDescription(evt.editor.getData())}\r\n                            />\r\n                            <Button type=\"submit\">\r\n                                Add product\r\n                            </Button>  \r\n                    </form>\r\n                </div>\r\n            </AddProductModal>\r\n\r\n            <div className=\"manageProducts\">\r\n                <table border=\"0\" cellPadding=\"0\" cellSpacing=\"0\">\r\n                    <tbody> \r\n                        <tr>\r\n                            <td>\r\n                                <table className=\"results\" border=\"0\" cellPadding=\"10\" cellSpacing=\"10\">\r\n                                    <tbody>\r\n                                        {(Array.isArray(data) && data.length >0) && data.map((product, index) => {\r\n                                            const { \r\n                                                productName,\r\n                                                productThumbnail,\r\n                                                productPrice,\r\n                                                productCategory,\r\n                                                documentID\r\n                                            } = product;\r\n                                            return (\r\n                                                <div className=\"singleRow\">\r\n                                                <tr key={index}>\r\n                                                    <td>\r\n                                                        <img src={productThumbnail} alt=\"Thumbnail\"/>\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {productName}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        ${productPrice}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {productCategory}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <Button onClick={() => dispatch(deleteProductStart(documentID))}>\r\n                                                            Delete\r\n                                                        </Button>\r\n                                                    </td>\r\n                                                    <td>\r\n                                                    <Link to={`/productedit/${documentID}`}>\r\n                                                        <Button >\r\n                                                            Edit\r\n                                                        </Button>\r\n                                                        </Link>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                </div>\r\n        \r\n                                            )\r\n                                        })}\r\n                                    </tbody>\r\n                                    {!isLastPage && (\r\n                                        <LoadMore {...configLoadMore}/>\r\n                                    )}\r\n                                </table>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                \r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Admin;","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\User\\user.types.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\User\\user.reducer.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\User\\user.sagas.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Products\\products.reducer.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Products\\products.sagas.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Cart\\cart.reducer.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Products\\products.actions.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\VerticalNav\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\customHooks\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\header\\index.js",["299"],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\User\\user.helpers.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Cart\\cart.types.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Products\\products.types.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Cart\\cart.utils.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Products\\products.helpers.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\firebase\\utils.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\Utils\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\ProductResults\\index.js",["300","301"],"import React, { useEffect }from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { fetchProductsStart } from \"../../redux/Products/products.actions\";\r\nimport LoadMore from './../Loadmore';\r\nimport Product from './Product';\r\nimport FormSelect from './../forms/FormSelect';\r\nimport './styles.scss';\r\n\r\nconst mapState = ({ productsData }) => ({\r\n    products: productsData.products\r\n});\r\n\r\nconst ProductResults = ({ }) => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    //useParams lets you deconstruct variables to use elsewhere\r\n    const { filterType } = useParams();\r\n    const { products } = useSelector(mapState);\r\n    \r\n    //products is a objectm so you have to destucture it from the objext to use it\r\n    const { data, queryDoc, isLastPage } = products;\r\n\r\n    useEffect(() => {\r\n        console.log(filterType);\r\n        dispatch(fetchProductsStart({ filterType })\r\n        )\r\n    }, [filterType]);\r\n\r\n    const handleFilter = (e) => {\r\n        const nextFilter = e.target.value;\r\n        history.push(`/products/${nextFilter}`);\r\n    };\r\n\r\n\r\n\r\n    if(!Array.isArray(data)) return null;\r\n\r\n    const configFilters = {\r\n        defaultValue: filterType,\r\n          options: [{\r\n            name: 'Show All',\r\n            value: ''\r\n          }, {\r\n            name: 'Wallet',\r\n            value: 'wallet'\r\n          }, {\r\n          name: 'Tote Bags',\r\n          value: 'tote-bags'\r\n          }, {\r\n          name: 'Guitar Straps',\r\n          value: 'guitar-straps'\r\n          }, {\r\n          name: 'Belts',\r\n          value: 'belts'\r\n      }, {\r\n          name: 'Other',\r\n          value: 'other'\r\n      }], handleChange: handleFilter\r\n      };\r\n\r\n      const handleLoadMore = () => {\r\n        dispatch(\r\n            fetchProductsStart({ \r\n                filterType,\r\n                startAfterDoc: queryDoc,\r\n                presistProducts: data\r\n            })\r\n        )\r\n      };\r\n\r\n    const configLoadMore = {\r\n        onLoadMoreEvt: handleLoadMore\r\n    }\r\n\r\n    if(data.length < 1){\r\n        return (\r\n            <div className=\"noResults\">\r\n                <h1>\r\n                    Browse Products\r\n                </h1>\r\n                <FormSelect {...configFilters} />\r\n                <p>\r\n                    No Search Results\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n    return(\r\n        <div className=\"products\">\r\n            <h1>\r\n                Browse Products\r\n            </h1>\r\n\r\n            <FormSelect {...configFilters} />\r\n\r\n            <div className=\"productResults\">\r\n            {data.map((products, index) => {\r\n                const { productThumbnail, productName, productPrice } = products;\r\n                //this check makes sure we have all three important components\r\n                if(!productThumbnail || !productName || typeof productPrice === 'undefined') return null;\r\n                \r\n                const configProduct = {\r\n                    ...products\r\n                };\r\n\r\n                return(\r\n                    <Product {...configProduct} />\r\n                );\r\n            })}\r\n            </div>\r\n            {!isLastPage && (\r\n                <LoadMore {...configLoadMore}/>\r\n            )}\r\n             \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductResults;","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\Checkout\\index.js",["302"],"import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectCartItems, selectCartTotal } from './../../redux/Cart/cart.selectors';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from './../forms/Button';\r\nimport Item from './Item';\r\nimport './styles.scss';\r\n\r\nconst mapState = createStructuredSelector({\r\n    cartItems: selectCartItems,\r\n    total: selectCartTotal\r\n});\r\n\r\nconst Checkout = ({}) => {\r\n    const history = useHistory();\r\n    const { cartItems, total } = useSelector(mapState);\r\n    return(\r\n        <div className=\"checkout\">\r\n            <h1>\r\n                Checkout\r\n            </h1>\r\n            <div className=\"cart\">\r\n                {cartItems.length > 0 ? (\r\n                <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n                    <tbody>\r\n                        <tr>\r\n                        <table className=\"checkoutHeader\"  border=\"0\" cellpadding=\"10\" cellspacing=\"0\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <th>\r\n                                        Product\r\n                                    </th>\r\n                                    <th>\r\n                                        Description\r\n                                    </th>\r\n                                    <th>\r\n                                        Quantity\r\n                                    </th>\r\n                                    <th>\r\n                                        Price\r\n                                    </th>\r\n                                    <th>\r\n                                        Remove\r\n                                    </th>\r\n                                </tr>\r\n                            </tbody>\r\n                            </table>\r\n                        </tr>\r\n                        <tr>\r\n                            <table border=\"0\" cellPadding=\"10\" cellSpacing=\"0\">\r\n                                <tbody>\r\n                                    {cartItems.map((item, index) => {\r\n                                        return (\r\n                                            <tr key={index}>\r\n                                                <td className=\"itemWrapper\">\r\n                                                    <Item {...item} />\r\n                                                </td>\r\n                                            </tr>\r\n                                        );\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                            <table border=\"0\" cellPadding=\"0\" cellSpacing=\"0\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>\r\n                                        <table border=\"0\" cellPadding=\"10\" cellSpacing=\"0\">\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                <td>\r\n                                                <h3 id=\"total\">\r\n                                                    Total: ${total}\r\n                                                </h3>\r\n                                                </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                            </table>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <Button onClick={() => history.goBack('/product')}>\r\n                                                Continue Shopping\r\n                                            </Button>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Button onClick={() => history.push('/payment')}>\r\n                                                Checkout\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                ) : (\r\n                    <div className=\"noItem\">\r\n                    <p>\r\n                        You have no items in your cart.\r\n                    </p>\r\n                    <Button id=\"noItemButton\"onClick={() => history.goBack()}>\r\n                        ContinueShopping\r\n                    </Button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Checkout;","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\EmailPassword\\index.js",["303"],"import React, { useState, useEffect } from 'react';\r\nimport \"./styles.scss\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { resetPasswordStart, resetUserState } from './../../redux/User/user.actions';\r\n\r\nimport AutherWrapper from \"./../AuthWrapper\";\r\nimport FormInput from \"./../forms/FormInput\";\r\nimport Button from \"./../forms/Button\";\r\n\r\n\r\nconst mapState = ({ user }) => ({\r\n    resetPasswordSuccess: user.resetPasswordSuccess,\r\n    userErr: user.userErr\r\n})\r\n\r\nconst EmailPassword = props => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { resetPasswordSuccess, userErr } = useSelector(mapState);\r\n    const [email, setEmail] = useState('');\r\n    const [errors, setErrors] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if(resetPasswordSuccess){\r\n            //we need to reset the userState so that they can access the forget \r\n            //password page again if they need to\r\n            dispatch(resetUserState());\r\n            history.push('/login');\r\n        }\r\n    },\r\n    [resetPasswordSuccess]);\r\n\r\n    useEffect(() => {\r\n        if(Array.isArray(userErr) && userErr.length > 0){\r\n            setErrors(userErr);\r\n        }\r\n    },\r\n    [userErr]);\r\n  \r\n    const handleSubmit = e => {\r\n        //prevents from reloading the page\r\n        e.preventDefault();\r\n        dispatch(resetPasswordStart({ email }))\r\n    \r\n    }\r\n    \r\n    const configAuthWrapper = {\r\n        headline: \"Password Recovery\"\r\n    };\r\n\r\n    return(\r\n        <AutherWrapper {...configAuthWrapper}>\r\n            <div className=\"formWrap\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <FormInput \r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    placeholder=\"Enter Email\"\r\n                    handleChange={e => setEmail(e.target.value)}\r\n                    />\r\n                    {errors.length > 0 && (\r\n                    <ul id=\"errorMessage\" >\r\n                        {errors.map((e,index) => {\r\n                            return (\r\n                                <li key={index}>\r\n                                {e}\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                )}\r\n\r\n                    <Button type=\"submit\">\r\n                        Email Password\r\n                    </Button>\r\n                </form>\r\n                \r\n            </div>\r\n        </AutherWrapper>\r\n    );\r\n}\r\n\r\n//withRouter gives us access to the history stored in reactRouter\r\nexport default EmailPassword;","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\SignIn\\index.js",["304"],"import React, { useState, useEffect } from 'react';\r\n//useState lets us use a passed in state in our componenent\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { emailSignInStart, googleSignInStart} from './../../redux/User/user.actions';\r\n\r\nimport './styles.scss';\r\nimport Button from \"./../forms/Button\";\r\nimport FormInput from \"./../forms/FormInput\"\r\nimport AuthWrapper from './../AuthWrapper';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nconst mapState = ({ user }) => ({\r\n    currentUser: user.currentUser,\r\n    signInWithGoogle: user.signInWithGoogle\r\n})\r\n\r\nconst SignIn = props => {\r\n    //definting dispatch to use useDispatch as a function\r\n    const history = useHistory();\r\n    const { currentUser } = useSelector(mapState);\r\n    const dispatch = useDispatch();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [errors, setErrors] = useState([]);\r\n\r\n    //if that thing called in the [] changes, then use effect code is run with the payload\r\n    // of whats in the []\r\n    useEffect(() => {\r\n        if(currentUser) {\r\n            resetForm();\r\n            history.push('/');\r\n        }\r\n    }, [currentUser]);\r\n\r\n    const resetForm = () => {\r\n        setEmail('');\r\n        setPassword('');\r\n        setErrors([]);\r\n    }\r\n\r\n    //handleSubmit makes it so the page wont reload on \r\n    //button click, called in form onSubmit\r\n    const handleSubmit = e => {\r\n        //prevents page reload after hitting the submit button\r\n        e.preventDefault();\r\n        dispatch(emailSignInStart({ email, password}));\r\n    }\r\n    \r\n    const handleGoogleSignIn = () => {\r\n        dispatch(googleSignInStart())\r\n    }\r\n\r\n        const configAuthWrapper = {\r\n            headline: 'Login'\r\n        };\r\n\r\n        return(\r\n        <AuthWrapper {...configAuthWrapper}>\r\n            <div className =\"formWrap\">\r\n                <form onSubmit={handleSubmit}>\r\n                <FormInput \r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value= {email}\r\n                        placeholder=\"Enter Email\"\r\n                        handleChange={e => setEmail(e.target.value)}\r\n                    />\r\n                    <FormInput \r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value= { password }\r\n                        placeholder=\"Enter Password\"\r\n                        handleChange={e => setPassword(e.target.value)}\r\n                    />\r\n                    {errors.length > 0 && (\r\n                        <ul  >\r\n                            {errors.map((err,index) => {\r\n                                return (\r\n                                    <li id=\"errorMessage\" key={e => setErrors(e.target.value)}>\r\n                                        {err}\r\n                                    </li>\r\n                                    );    \r\n                                })}\r\n                            </ul>\r\n                        )}\r\n                    <Link id=\"forgotPassword\" to=\"/recovery\">\r\n                        Forgot Password?\r\n                    </Link>\r\n                    <Button type=\"submit\">\r\n                        LogIn\r\n                    </Button>\r\n                    \r\n                    <Button onClick={handleGoogleSignIn}>\r\n                        Sign In With Goole\r\n                    </Button>\r\n                    <h1>Or</h1>\r\n                    <div className=\"socialSignIn\">\r\n                    <Link id=\"register\" to=\"/register\">\r\n                        Sign up\r\n                    </Link>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </AuthWrapper>\r\n    );\r\n}\r\n\r\n//tutorial has this wrapping in withRouter, but that errors out on me so idk, still works\r\nexport default SignIn;","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\SignUp\\index.js",["305"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport './styles.scss';\r\nimport Button from \"./../forms/Button\";\r\nimport FormInput from \"./../forms/FormInput\";\r\nimport AuthWrapper from './../AuthWrapper';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { signUpUserStart, googleSignInStart } from '../../redux/User/user.actions';\r\n\r\nconst mapState = ({ user }) => ({\r\n    currentUser: user.currentUser,\r\n    userErr: user.userErr\r\n});\r\n\r\nconst SignUp = props => {\r\n    const { currentUser, userErr } = useSelector(mapState);\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [displayName, setDisplayName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [errors, setErrors] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if(currentUser) {\r\n            reset();\r\n            history.push('/');\r\n        }\r\n    }, [currentUser]);\r\n\r\n    useEffect(() => {\r\n        if(Array.isArray(userErr) && userErr.length > 0) {\r\n            setErrors(userErr);\r\n        }\r\n    }, [userErr]);\r\n    //Handle change takes in name and value, and on each change, value gets updated, and dispalyed on the screen\r\n    const reset = () => {\r\n        setDisplayName('');\r\n        setEmail('');\r\n        setPassword('');\r\n        setConfirmPassword('');\r\n        setErrors([]);\r\n    }\r\n\r\n    const handleGoogleSignIn = () => {\r\n        dispatch(googleSignInStart())\r\n    }\r\n\r\n     const handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        dispatch(signUpUserStart({\r\n            displayName,\r\n            email,\r\n            password,\r\n            confirmPassword\r\n        }));\r\n    }\r\n        \r\n    const configAuthWrapper = {\r\n        headline: 'No account? sign up here'\r\n    };\r\n\r\n\r\n    return(\r\n        <AuthWrapper {...configAuthWrapper}>\r\n            <div className =\"formWrap\">\r\n                <form onSubmit={handleFormSubmit}>\r\n                        <FormInput \r\n                        type=\"text\"\r\n                        name=\"displayName\"\r\n                        value={displayName}\r\n                        placeholder= \"Enter Name\"\r\n                        handleChange={e => setDisplayName(e.target.value)} />\r\n\r\n                        <FormInput \r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        placeholder= \"Enter email\"\r\n                        handleChange={e => setEmail(e.target.value)} />\r\n\r\n                        <FormInput \r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        placeholder= \"Enter Password\"\r\n                        handleChange={e => setPassword(e.target.value)} />\r\n\r\n                        <FormInput \r\n                        type=\"password\"\r\n                        name=\"confirmPassword\"\r\n                        value={confirmPassword}\r\n                        placeholder= \"Confirm Password\"\r\n                        handleChange={e => setConfirmPassword(e.target.value)} />\r\n\r\n                        <Button type=\"Submit\">\r\n                            Sign Up\r\n                        </Button>\r\n                        {errors.length > 0 && (\r\n                        <ul>\r\n                            {errors.map((err,index) => {\r\n                                return (\r\n                                    <li key={index}>\r\n                                        {err}\r\n                                    </li>\r\n                                    );    \r\n                                })}\r\n                            </ul>\r\n                        )}\r\n                        <h1>or</h1>\r\n\r\n                        <Button onClick={handleGoogleSignIn}>\r\n                            Sign Up With Google\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </AuthWrapper>\r\n    );\r\n}\r\n\r\n//wrapping it withRouter gives us access to props.history\r\nexport default SignUp;","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\Loadmore\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\ProductCard\\index.js",["306","307"],"import React, { useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchProductStart, setProduct } from './../../redux/Products/products.actions';\r\nimport Button from './../forms/Button';\r\nimport { addProduct } from './../../redux/Cart/cart.actions';\r\nimport './styles.scss';\r\n\r\nconst mapState = state => ({\r\n    product: state.productsData.product\r\n});\r\n\r\nconst configAddToCardBtn = {\r\n    type: 'button'\r\n}\r\n\r\n\r\nconst ProductCard = ({}) => {\r\n\r\n    const { product } = useSelector(mapState);\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { productID } = useParams();\r\n    \r\n    const { \r\n        productName,\r\n        productThumbnail,\r\n        productPrice,\r\n        productDescription,\r\n    } = product;\r\n\r\n    const handleAddToCart = (product) => {\r\n        if(!product) return;\r\n        dispatch(addProduct(product))\r\n        history.push('/cart')\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            fetchProductStart(productID)\r\n        )\r\n\r\n        return () => {\r\n            dispatch(setProduct({}))\r\n        }\r\n\r\n    }, []);\r\n\r\n    return(\r\n        <div className=\"productCard\">\r\n            <div className=\"hero\">\r\n                <img src={productThumbnail} alt=\"thumbnail\"/>\r\n            </div>\r\n            <div className=\"productDetails\">\r\n                <ul>\r\n                    <li>\r\n                        <h1>\r\n                            {productName}\r\n                        </h1>\r\n                    </li>\r\n                    <li>\r\n                        <span>\r\n                            ${productPrice}\r\n                        </span>      \r\n                    </li>\r\n                    <li>\r\n                    \r\n                    </li>\r\n                    <li>\r\n                        <table className=\"bottomText\" border=\"0\" cellSpacing=\"0\" cellPadding=\"0\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <Button id=\"button\" {...configAddToCardBtn} onClick={() => handleAddToCart(product)}>\r\n                                            Add To Cart\r\n                                        </Button>\r\n                                    </td>\r\n                                    <td>\r\n                                        Or\r\n                                    </td>\r\n                                    <td>\r\n                                    <h3 className=\"backArrow\" onClick={() => history.goBack()}>\r\n                                        Return\r\n                                    </h3>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </li>\r\n                    <li>\r\n                        <span dangerouslySetInnerHTML={{__html: productDescription}} />\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductCard;","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\customHooks\\useAuth.js",["308"],"//all custom hooks should be prefixed with use\r\nimport { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n//this custom hook will be used to\r\n\r\n\r\n//deconstructed the currentUser\r\nconst mapState = ({ user }) => ({\r\n    currentUser: user.currentUser\r\n});\r\n\r\n\r\n//we want to use the UseEffect react hook, and if the current user is\r\n// null, that means the user is not logged in, so if they are not logged in, they\r\n// need to be redirected, which is what this hook does\r\nconst useAuth = props => {\r\n    const { currentUser } = useSelector(mapState);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        //if current user is null, then redirect user to log in page\r\n        if(!currentUser) {\r\n            //this redirects the user to the login page if they are trying to access a page without they shouldnt\r\n            history.push('/login');\r\n        }\r\n    }, [currentUser]);\r\n    \r\n    return currentUser;\r\n};\r\n\r\nexport default useAuth;\r\n\r\n","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\customHooks\\useAdminAuth.js",["309"],"import { useEffect, } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { checkUserIsAdmin } from './../Utils/index';\r\nconst mapState = ( { user }) => ({\r\n    currentUser: user.currentUser\r\n});\r\n\r\n//useAdminAuth returns true if the user is admin, and if the\r\n//user is not admin, it will redirect the user to ./login\r\nconst useAdminAuth = props => {\r\n    const { currentUser } = useSelector(mapState);\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        if(!checkUserIsAdmin(currentUser)) {\r\n            history.push('./login');\r\n        }\r\n\r\n    }, [currentUser]);\r\n    return currentUser\r\n}\r\n\r\nexport default useAdminAuth;","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\forms\\Button\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\forms\\FormInput\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\forms\\FormSelect\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Cart\\cart.selectors.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\firebase\\config.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\UserProfile\\index.js",["310"],"\r\nimport React from 'react';\r\nimport './styles.scss';\r\nimport userIMG from './../../assets/user.png';\r\n\r\nconst UserProfile = props => {\r\n  const { currentUser } = props;\r\n  const { displayName } = currentUser;\r\n\r\n  return (\r\n    <div className=\"userProfile\">\r\n      <ul>\r\n        <li>\r\n          <div className=\"img\">\r\n            <img src={userIMG} alt=\"Profile Picture\"/>\r\n          </div>\r\n        </li>\r\n        <li>\r\n          <span className=\"displayName\">\r\n            {displayName && displayName}\r\n          </span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserProfile;","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\redux\\Cart\\cart.actions.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\ProductResults\\Product\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\AuthWrapper\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\Checkout\\Item\\index.js",["311","312"],"import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { handleRemoveCartItem } from '../../../redux/Cart/cart.utils';\r\nimport { removeCartItem, addProduct,reduceCartItem } from './../../../redux/Cart/cart.actions';\r\n\r\nconst Item = (product) => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const {\r\n        productName,\r\n        productThumbnail,\r\n        productPrice,\r\n        quantity,\r\n        documentID\r\n    } = product;\r\n    \r\n    const handleRemoveItem = (documentID) => {\r\n        dispatch(\r\n            removeCartItem({\r\n                documentID\r\n            })\r\n        );\r\n    }\r\n\r\n    const handleAddProduct = (product) => {\r\n        dispatch(\r\n            addProduct(product)\r\n        )\r\n    }\r\n\r\n    const handleRemoveProduct = (product) => {\r\n        dispatch(\r\n            reduceCartItem(product)\r\n        )\r\n    }\r\n    \r\n    return(\r\n        <table className=\"cartItem\" border=\"0\" cellSpacing=\"0\" cellPadding=\"0\">\r\n            <tbody>\r\n                <tr>\r\n                    <td>\r\n                        <img src={productThumbnail} alt={productName} />\r\n                    </td>\r\n                    <td>\r\n                        {productName}\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"arrow\"  onClick={() => handleRemoveProduct(product)}>\r\n                            {`<  `}\r\n                        </span>\r\n                        <span>\r\n                            {quantity}\r\n                        </span>\r\n                        <span  className=\"arrow\" onClick={() => handleAddProduct(product)}>\r\n                            {`  >`}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        ${productPrice}\r\n                    </td>\r\n                    <td align=\"center\">\r\n                        <span className=\"cartBtn\" onClick={() => handleRemoveItem(documentID)}>\r\n                            X\r\n                        </span>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default Item;","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\Payment\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\PaymentDetails\\index.js",["313"],"import React, { useState, useEffect } from 'react';\r\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport './styles.scss';\r\nimport FormInput from './../forms/FormInput';\r\nimport Button from './../forms/Button';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { CountryDropdown } from 'react-country-region-selector';\r\nimport { apiInstance } from './../../Utils';\r\nimport { selectCartTotal,selectCartItemsCount } from './../../redux/Cart/cart.selectors';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { clearCart } from './../../redux/Cart/cart.actions';\r\n\r\n\r\n// you need this initial state so it doesnt error out\r\nconst initialAddressState = {\r\n    line1: '',\r\n    line2: '',\r\n    city: '',\r\n    state: '',\r\n    country: 'asdf',\r\n    postal_code: ''\r\n};\r\n\r\nconst mapState = createStructuredSelector ({\r\n    total: selectCartTotal,\r\n    itemCount: selectCartItemsCount\r\n});\r\n\r\nconst PaymentDetails = () => {\r\n    const { total , itemCount } = useSelector(mapState);\r\n    const elements = useElements();\r\n    const stripe = useStripe();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [billingAddress, setBillingAddress] = useState({...initialAddressState});\r\n    const [shippingAddress, setShippingAddress] = useState({...initialAddressState});\r\n    const [recipientName, setRecipientName] = useState('');\r\n    const [nameOnCard, setNameOnCard] = useState('');\r\n\r\n    useEffect(() => {\r\n        if(itemCount < 1) {\r\n            //make this into a confirmation page\r\n            history.push('/');\r\n        }\r\n    }, [itemCount])\r\n\r\n    const handleShipping = evt => {\r\n        const { name, value } = evt.target;\r\n        setShippingAddress({\r\n            ...shippingAddress,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    const handleBilling = evt => {\r\n        const { name, value } = evt.target;\r\n        setBillingAddress({\r\n            ...billingAddress,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    const handleFormSubmit = async evt => {\r\n        evt.preventDefault();\r\n        //this gets the card info from the form we also imported\r\n        const cardElement = elements.getElement('card');\r\n\r\n\r\n            //posting to the firebase function and sending the data stored on front end\r\n            apiInstance.post('/payments/create', {\r\n                //expects it in cents\r\n                amount: total * 100,\r\n                shipping: {\r\n                    name: recipientName,\r\n                    address: {\r\n                        ...shippingAddress\r\n                    }\r\n                }\r\n                //we get back the clientSecret after the API did its thing\r\n            }).then(({ data: clientSecret }) => {\r\n                stripe.createPaymentMethod({\r\n                    type: 'card',\r\n                    card: cardElement,\r\n                    billing_details: {\r\n                        name: nameOnCard,\r\n                        address: {\r\n                            ...billingAddress\r\n                        }\r\n                    }\r\n                }).then(({ paymentMethod }) => {\r\n\r\n                    stripe.confirmCardPayment(clientSecret, {\r\n                        payment_method: paymentMethod.id\r\n                    })\r\n                    //paymentIntent is the details of the transaction if it is successful\r\n                    .then(({ paymentIntent }) => {\r\n                       dispatch(clearCart())\r\n                    })\r\n                })\r\n            });\r\n        };\r\n\r\n    const configCardElemet = {\r\n        iconStyle: 'solid',\r\n        style: {\r\n            base: {\r\n                fontSize: '16px'\r\n            }\r\n        },\r\n        hidePostalCode: true\r\n    };\r\n\r\n    return (\r\n        <div className=\"paymentDetails\">\r\n            <form onSubmit={handleFormSubmit}>\r\n                <div className=\"group\">\r\n                    <h2>\r\n                        Shipping Address\r\n                    </h2>\r\n                    <FormInput \r\n                        required\r\n                        placeholder=\"Recipient  Name\"\r\n                        name=\"recipientName\"\r\n                        handleChange={evt => setRecipientName(evt.target.value)}\r\n                        value={recipientName}\r\n                        type=\"text\"\r\n                    />\r\n\r\n                        <FormInput \r\n                        placeholder=\"Line 1\"\r\n                        name=\"line1\"\r\n                        value={shippingAddress.line1}\r\n                        handleChange={evt => handleShipping(evt)}\r\n                        type=\"text\"\r\n                    />\r\n\r\n                        <FormInput \r\n                        placeholder=\"Line 2\"\r\n                        name=\"line2\"\r\n                        value={shippingAddress.line2}\r\n                        handleChange={evt => handleShipping(evt)}\r\n                        type=\"text\"\r\n                    />\r\n\r\n                        <FormInput \r\n                        required\r\n                        placeholder=\"City\"\r\n                        name = \"city\"\r\n                        value={shippingAddress.city}\r\n                        handleChange={evt => handleShipping(evt)}\r\n                        type=\"text\"\r\n                    />\r\n\r\n                        <FormInput \r\n                        required\r\n                        placeholder=\"State\"\r\n                        name=\"state\"\r\n                        value={shippingAddress.state}\r\n                        handleChange={evt => handleShipping(evt)}\r\n                        type=\"text\"\r\n                    />\r\n\r\n                        <FormInput \r\n                        required\r\n                        placeholder=\"Postal Code\"\r\n                        name=\"postal_code\"\r\n                        value={shippingAddress.postal_code}\r\n                        handleChange={evt => handleShipping(evt)}\r\n                        type=\"text\"\r\n                    />  \r\n                    <div className=\"formRow checkoutInput\"  >\r\n                    <CountryDropdown\r\n                        required\r\n                        onChange={(val) => handleShipping({\r\n                            target: { \r\n                            name: 'country',\r\n                            value: val\r\n                        }\r\n                        })}\r\n                        value={shippingAddress.country}\r\n                        valueType=\"short\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"group\">\r\n                    <h2>\r\n                        Billing Address\r\n                    </h2>\r\n                    <FormInput \r\n                    required\r\n                    placeholder=\"Name On Card\"\r\n                    name=\"nameOnCard\"\r\n                    handleChange={evt => setNameOnCard(evt.target.value)}\r\n                    value={nameOnCard}\r\n                    type=\"text\"\r\n                    />\r\n                    <FormInput \r\n                    required\r\n                    placeholder=\"Line 1\"\r\n                    name=\"line1\"\r\n                    value={billingAddress.line1}\r\n                    handleChange={evt => handleBilling(evt)}\r\n                    type=\"text\"\r\n                    />\r\n                    <FormInput \r\n                    placeholder=\"Line 2\"\r\n                    name=\"line2\"\r\n                    value={billingAddress.line2}\r\n                    handleChange={evt => handleBilling(evt)}\r\n                    type=\"text\"\r\n                    />\r\n                    <FormInput \r\n                    required\r\n                    placeholder=\"City\"\r\n                    name=\"city\"\r\n                    value={billingAddress.city}\r\n                    handleChange={evt => handleBilling(evt)}\r\n                    type=\"text\"\r\n                    />\r\n                    <FormInput \r\n                    required\r\n                    placeholder=\"State\"\r\n                    name=\"state\"\r\n                    value={billingAddress.state}\r\n                    handleChange={evt => handleBilling(evt)}\r\n                    type=\"text\"\r\n                    />\r\n                    <FormInput\r\n                    required \r\n                    placeholder=\"Postal Code\"\r\n                    name=\"postal_code\"\r\n                    value={billingAddress.postal_code}\r\n                    handleChange={evt => handleBilling(evt)}\r\n                    type=\"text\"\r\n                    />\r\n                    <div className=\"formRow checkoutInput\"  >\r\n                        <CountryDropdown \r\n                        required\r\n                        onChange={val => handleBilling({\r\n                            target: { \r\n                            name: 'country',\r\n                            value: val\r\n                        }\r\n                        })}\r\n                        value={billingAddress.country}\r\n                        valueType=\"short\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"group\">\r\n                    <h2>\r\n                        Card Details\r\n                    </h2>\r\n                    <CardElement\r\n                        required\r\n                        \r\n                        options={configCardElemet}\r\n                    />\r\n                </div>\r\n                <div className=\"submitButton\">\r\n                    <Button type=\"submit\">\r\n                        Pay Now\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PaymentDetails;","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\stripe\\config.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\Modal\\AddProductModal\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\Modal\\EditProductModal\\index.js",[],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\pages\\EditProductPage\\index.js",["314"],"import React from 'react';\r\nimport EditProduct from './../../components/EditProduct';\r\n\r\nconst EditProductPage = ({ }) => {\r\n    return(\r\n        <div className=\"searchPage\">\r\n            <EditProduct />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditProductPage;","C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\EditProduct\\index.js",["315","316"],"C:\\Users\\Luke\\Desktop\\MercilLeather\\src\\components\\header\\NavbarData\\index.js",["317","318","319","320"],{"ruleId":"321","replacedBy":"322"},{"ruleId":"323","replacedBy":"324"},{"ruleId":"325","severity":1,"message":"326","line":43,"column":6,"nodeType":"327","endLine":43,"endColumn":8,"suggestions":"328"},{"ruleId":"329","severity":1,"message":"330","line":18,"column":1,"nodeType":"331","endLine":21,"endColumn":3},{"ruleId":"332","severity":1,"message":"333","line":4,"column":17,"nodeType":"334","messageId":"335","endLine":4,"endColumn":20},{"ruleId":"332","severity":1,"message":"333","line":4,"column":15,"nodeType":"334","messageId":"335","endLine":4,"endColumn":17},{"ruleId":"332","severity":1,"message":"333","line":3,"column":25,"nodeType":"334","messageId":"335","endLine":3,"endColumn":27},{"ruleId":"336","severity":1,"message":"337","line":5,"column":8,"nodeType":"338","messageId":"339","endLine":5,"endColumn":24},{"ruleId":"325","severity":1,"message":"326","line":40,"column":8,"nodeType":"327","endLine":40,"endColumn":20,"suggestions":"340"},{"ruleId":"336","severity":1,"message":"341","line":54,"column":11,"nodeType":"338","messageId":"339","endLine":54,"endColumn":33},{"ruleId":"336","severity":1,"message":"342","line":82,"column":11,"nodeType":"338","messageId":"339","endLine":82,"endColumn":27},{"ruleId":"343","severity":1,"message":"344","line":49,"column":29,"nodeType":"345","endLine":49,"endColumn":64},{"ruleId":"332","severity":1,"message":"333","line":14,"column":25,"nodeType":"334","messageId":"335","endLine":14,"endColumn":28},{"ruleId":"325","severity":1,"message":"326","line":28,"column":8,"nodeType":"327","endLine":28,"endColumn":20,"suggestions":"346"},{"ruleId":"332","severity":1,"message":"333","line":15,"column":19,"nodeType":"334","messageId":"335","endLine":15,"endColumn":21},{"ruleId":"325","severity":1,"message":"347","line":32,"column":5,"nodeType":"327","endLine":32,"endColumn":27,"suggestions":"348"},{"ruleId":"325","severity":1,"message":"349","line":34,"column":8,"nodeType":"327","endLine":34,"endColumn":21,"suggestions":"350"},{"ruleId":"325","severity":1,"message":"349","line":30,"column":8,"nodeType":"327","endLine":30,"endColumn":21,"suggestions":"351"},{"ruleId":"332","severity":1,"message":"333","line":18,"column":22,"nodeType":"334","messageId":"335","endLine":18,"endColumn":24},{"ruleId":"325","severity":1,"message":"352","line":47,"column":8,"nodeType":"327","endLine":47,"endColumn":10,"suggestions":"353"},{"ruleId":"325","severity":1,"message":"349","line":28,"column":8,"nodeType":"327","endLine":28,"endColumn":21,"suggestions":"354"},{"ruleId":"325","severity":1,"message":"349","line":19,"column":8,"nodeType":"327","endLine":19,"endColumn":21,"suggestions":"355"},{"ruleId":"356","severity":1,"message":"357","line":15,"column":13,"nodeType":"345","endLine":15,"endColumn":55},{"ruleId":"336","severity":1,"message":"358","line":1,"column":17,"nodeType":"338","messageId":"339","endLine":1,"endColumn":26},{"ruleId":"336","severity":1,"message":"359","line":3,"column":10,"nodeType":"338","messageId":"339","endLine":3,"endColumn":30},{"ruleId":"325","severity":1,"message":"349","line":46,"column":8,"nodeType":"327","endLine":46,"endColumn":19,"suggestions":"360"},{"ruleId":"332","severity":1,"message":"333","line":4,"column":26,"nodeType":"334","messageId":"335","endLine":4,"endColumn":29},{"ruleId":"332","severity":1,"message":"333","line":15,"column":22,"nodeType":"334","messageId":"335","endLine":15,"endColumn":24},{"ruleId":"325","severity":1,"message":"361","line":46,"column":8,"nodeType":"327","endLine":46,"endColumn":21,"suggestions":"362"},{"ruleId":"336","severity":1,"message":"363","line":1,"column":17,"nodeType":"338","messageId":"339","endLine":1,"endColumn":25},{"ruleId":"336","severity":1,"message":"364","line":2,"column":13,"nodeType":"338","messageId":"339","endLine":2,"endColumn":20},{"ruleId":"336","severity":1,"message":"365","line":4,"column":13,"nodeType":"338","messageId":"339","endLine":4,"endColumn":20},{"ruleId":"336","severity":1,"message":"366","line":5,"column":10,"nodeType":"338","messageId":"339","endLine":5,"endColumn":14},"no-native-reassign",["367"],"no-negated-in-lhs",["368"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["369"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-unused-vars","'EditProductModal' is defined but never used.","Identifier","unusedVar",["370"],"'configEditProductModal' is assigned a value but never used.","'handleEditSubmit' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["371"],"React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["372"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["373"],["374"],"React Hook useEffect has missing dependencies: 'dispatch' and 'productID'. Either include them or remove the dependency array.",["375"],["376"],["377"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'useEffect' is defined but never used.","'handleRemoveCartItem' is defined but never used.",["378"],"React Hook useEffect has missing dependencies: 'dispatch', 'editType', 'productCategory', 'productDescription', 'productPrice', and 'productThumbnail'. Either include them or remove the dependency array.",["379"],"'useState' is defined but never used.","'FaIcons' is defined but never used.","'IoIcons' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"380","fix":"381"},{"desc":"382","fix":"383"},{"desc":"382","fix":"384"},{"desc":"385","fix":"386"},{"desc":"387","fix":"388"},{"desc":"387","fix":"389"},{"desc":"390","fix":"391"},{"desc":"387","fix":"392"},{"desc":"387","fix":"393"},{"desc":"394","fix":"395"},{"desc":"396","fix":"397"},"Update the dependencies array to be: [dispatch]",{"range":"398","text":"399"},"Update the dependencies array to be: [dispatch, filterType]",{"range":"400","text":"401"},{"range":"402","text":"401"},"Update the dependencies array to be: [dispatch, history, resetPasswordSuccess]",{"range":"403","text":"404"},"Update the dependencies array to be: [currentUser, history]",{"range":"405","text":"406"},{"range":"407","text":"406"},"Update the dependencies array to be: [dispatch, productID]",{"range":"408","text":"409"},{"range":"410","text":"406"},{"range":"411","text":"406"},"Update the dependencies array to be: [history, itemCount]",{"range":"412","text":"413"},"Update the dependencies array to be: [dispatch, editType, productCategory, productDescription, productName, productPrice, productThumbnail]",{"range":"414","text":"415"},[1418,1420],"[dispatch]",[1757,1769],"[dispatch, filterType]",[1007,1019],[1095,1117],"[dispatch, history, resetPasswordSuccess]",[1197,1210],"[currentUser, history]",[1057,1070],[1181,1183],"[dispatch, productID]",[948,961],[629,642],[1665,1676],"[history, itemCount]",[1540,1553],"[dispatch, editType, productCategory, productDescription, productName, productPrice, productThumbnail]"]