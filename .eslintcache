[{"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\index.js":"1","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\App.js":"2","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\redux\\createStore.js":"3","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\redux\\rootReducer.js":"4","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\redux\\rootSaga.js":"5","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\redux\\User\\user.actions.js":"6","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\hoc\\withAuth.js":"7","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\layouts\\MainLayout.js":"8","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\layouts\\AdminLayout.js":"9","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\hoc\\withAdminAuth.js":"10","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\layouts\\HomepageLayout.js":"11","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\layouts\\DashboardLayout.js":"12","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\components\\AdminToolbar\\index.js":"13","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\pages\\Search\\index.js":"14","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\pages\\Gallery\\index.js":"15","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\pages\\Homepage\\index.js":"16","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\pages\\ContactMe\\index.js":"17","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\pages\\Login\\index.js":"18","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\pages\\Admin\\index.js":"19","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\pages\\AboutMe\\index.js":"20","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\pages\\Recovery\\index.js":"21","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\pages\\Products\\index.js":"22","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\pages\\Register\\index.js":"23","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\pages\\Dashboard\\index.js":"24","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\redux\\User\\user.reducer.js":"25","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\redux\\User\\user.sagas.js":"26","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\redux\\User\\user.types.js":"27","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\redux\\Products\\products.reducer.js":"28","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\redux\\Products\\products.sagas.js":"29","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\redux\\Products\\products.actions.js":"30","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\customHooks\\index.js":"31","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\components\\header\\index.js":"32","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\components\\VerticalNav\\index.js":"33","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\redux\\User\\user.helpers.js":"34","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\redux\\Products\\products.types.js":"35","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\firebase\\utils.js":"36","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\redux\\Products\\products.helpers.js":"37","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\components\\ProductResults\\index.js":"38","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\Utils\\index.js":"39","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\components\\Modal\\index.js":"40","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\components\\SignIn\\index.js":"41","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\components\\EmailPassword\\index.js":"42","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\components\\directory\\index.js":"43","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\components\\Loadmore\\index.js":"44","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\components\\SignUp\\index.js":"45","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\components\\forms\\Button\\index.js":"46","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\components\\forms\\FormInput\\index.js":"47","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\components\\forms\\FormSelect\\index.js":"48","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\customHooks\\useAuth.js":"49","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\customHooks\\useAdminAuth.js":"50","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\firebase\\config.js":"51","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\components\\UserProfile\\index.js":"52","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\components\\AuthWrapper\\index.js":"53","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\components\\ProductResults\\Product\\index.js":"54","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\pages\\ProductDetails\\index.js":"55","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\components\\ProductCard\\index.js":"56","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\redux\\Cart\\cart.reducer.js":"57","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\redux\\Cart\\cart.types.js":"58","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\redux\\Cart\\cart.actions.js":"59","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\redux\\Cart\\cart.utils.js":"60","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\redux\\Cart\\cart.selectors.js":"61","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\pages\\Cart\\index.js":"62","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\components\\Checkout\\index.js":"63","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\components\\Checkout\\Item\\index.js":"64"},{"size":724,"mtime":1609310715374,"results":"65","hashOfConfig":"66"},{"size":4553,"mtime":1609299965922,"results":"67","hashOfConfig":"66"},{"size":623,"mtime":1609310350704,"results":"68","hashOfConfig":"66"},{"size":656,"mtime":1609310585776,"results":"69","hashOfConfig":"66"},{"size":396,"mtime":1609286143430,"results":"70","hashOfConfig":"66"},{"size":1486,"mtime":1609286143426,"results":"71","hashOfConfig":"66"},{"size":326,"mtime":1609286143405,"results":"72","hashOfConfig":"66"},{"size":518,"mtime":1609286143407,"results":"73","hashOfConfig":"66"},{"size":1139,"mtime":1609286143406,"results":"74","hashOfConfig":"66"},{"size":253,"mtime":1609286143404,"results":"75","hashOfConfig":"66"},{"size":329,"mtime":1609286143407,"results":"76","hashOfConfig":"66"},{"size":1128,"mtime":1609286143406,"results":"77","hashOfConfig":"66"},{"size":830,"mtime":1609286143377,"results":"78","hashOfConfig":"66"},{"size":256,"mtime":1609286143422,"results":"79","hashOfConfig":"66"},{"size":270,"mtime":1609286143417,"results":"80","hashOfConfig":"66"},{"size":269,"mtime":1609286143418,"results":"81","hashOfConfig":"66"},{"size":276,"mtime":1609286143412,"results":"82","hashOfConfig":"66"},{"size":226,"mtime":1609286143419,"results":"83","hashOfConfig":"66"},{"size":9789,"mtime":1609296622851,"results":"84","hashOfConfig":"66"},{"size":268,"mtime":1609286143409,"results":"85","hashOfConfig":"66"},{"size":185,"mtime":1609286143421,"results":"86","hashOfConfig":"66"},{"size":240,"mtime":1609286143420,"results":"87","hashOfConfig":"66"},{"size":205,"mtime":1609286143422,"results":"88","hashOfConfig":"66"},{"size":171,"mtime":1609296569085,"results":"89","hashOfConfig":"66"},{"size":1140,"mtime":1609286143427,"results":"90","hashOfConfig":"66"},{"size":4313,"mtime":1609286143428,"results":"91","hashOfConfig":"66"},{"size":568,"mtime":1609286143428,"results":"92","hashOfConfig":"66"},{"size":581,"mtime":1609292130528,"results":"93","hashOfConfig":"66"},{"size":2425,"mtime":1609292129686,"results":"94","hashOfConfig":"66"},{"size":860,"mtime":1609292132842,"results":"95","hashOfConfig":"66"},{"size":224,"mtime":1609286143401,"results":"96","hashOfConfig":"66"},{"size":3385,"mtime":1609299434216,"results":"97","hashOfConfig":"66"},{"size":576,"mtime":1609286143392,"results":"98","hashOfConfig":"66"},{"size":803,"mtime":1609286143427,"results":"99","hashOfConfig":"66"},{"size":333,"mtime":1609292128676,"results":"100","hashOfConfig":"66"},{"size":2322,"mtime":1609286143404,"results":"101","hashOfConfig":"66"},{"size":2989,"mtime":1609292131540,"results":"102","hashOfConfig":"66"},{"size":3379,"mtime":1609288803373,"results":"103","hashOfConfig":"66"},{"size":432,"mtime":1609286143371,"results":"104","hashOfConfig":"66"},{"size":374,"mtime":1609296729937,"results":"105","hashOfConfig":"66"},{"size":3881,"mtime":1609286143386,"results":"106","hashOfConfig":"66"},{"size":2685,"mtime":1609286143380,"results":"107","hashOfConfig":"66"},{"size":1862,"mtime":1609286143394,"results":"108","hashOfConfig":"66"},{"size":283,"mtime":1609286143382,"results":"109","hashOfConfig":"66"},{"size":4212,"mtime":1609296686261,"results":"110","hashOfConfig":"66"},{"size":246,"mtime":1609286143395,"results":"111","hashOfConfig":"66"},{"size":425,"mtime":1609286143396,"results":"112","hashOfConfig":"66"},{"size":717,"mtime":1609286143398,"results":"113","hashOfConfig":"66"},{"size":1029,"mtime":1609286143402,"results":"114","hashOfConfig":"66"},{"size":703,"mtime":1609286143401,"results":"115","hashOfConfig":"66"},{"size":396,"mtime":1609286143403,"results":"116","hashOfConfig":"66"},{"size":603,"mtime":1609296672681,"results":"117","hashOfConfig":"66"},{"size":436,"mtime":1609286143378,"results":"118","hashOfConfig":"66"},{"size":2014,"mtime":1609308849880,"results":"119","hashOfConfig":"66"},{"size":242,"mtime":1609288681151,"results":"120","hashOfConfig":"66"},{"size":3130,"mtime":1609309730285,"results":"121","hashOfConfig":"66"},{"size":1189,"mtime":1609307527851,"results":"122","hashOfConfig":"66"},{"size":168,"mtime":1609307526049,"results":"123","hashOfConfig":"66"},{"size":378,"mtime":1609307528586,"results":"124","hashOfConfig":"66"},{"size":2062,"mtime":1609308120873,"results":"125","hashOfConfig":"66"},{"size":826,"mtime":1609308584285,"results":"126","hashOfConfig":"66"},{"size":211,"mtime":1609300180221,"results":"127","hashOfConfig":"66"},{"size":5027,"mtime":1609308975857,"results":"128","hashOfConfig":"66"},{"size":2149,"mtime":1609307530910,"results":"129","hashOfConfig":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ntg7an",{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"135"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"135"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"135"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"135"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"135"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"135"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"135"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"135"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"135"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"135"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"135"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"135"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"135"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"135"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"135"},"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\index.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\App.js",["276"],"import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { setCurrentUser, checkUserSession } from './redux/User/user.actions';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\n//components\r\nimport AdminToolBar from './components/AdminToolbar';\r\n\r\n//high order component\r\n//WithAuth can restrict access to pages based on being logged in or not\r\nimport WithAuth from './hoc/withAuth';\r\nimport WithAdminAuth from './hoc/withAdminAuth';\r\n\r\n//layouts\r\nimport MainLayout from './layouts/MainLayout';\r\nimport HomepageLayout from './layouts/HomepageLayout';\r\nimport AdminLayout from './layouts/AdminLayout';\r\n\r\n\r\n//pages\r\nimport './default.scss';\r\nimport Cart from \"./pages/Cart\";\r\nimport Search from \"./pages/Search\";\r\nimport Homepage from \"./pages/Homepage\";\r\nimport AboutMe from './pages/AboutMe';\r\nimport ContactMe from './pages/ContactMe';\r\nimport Gallery from './pages/Gallery';\r\nimport Login from './pages/Login';\r\nimport Recovery from './pages/Recovery';\r\nimport Register from './pages/Register';\r\nimport Dashboard from './pages/Dashboard';\r\nimport Admin from './pages/Admin';\r\nimport ProductDetails from './pages/ProductDetails';\r\n// import Products from './pages/Products';\r\n\r\nconst App = props =>  {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(checkUserSession());\r\n    \r\n  }, []);\r\n\r\n    //sets the currentUser to the user that is logged in\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <AdminToolBar />\r\n      <Switch>\r\n        <Route exact path=\"/\" render={() => (\r\n          <HomepageLayout>\r\n            <Homepage />\r\n            </HomepageLayout>\r\n        )} />\r\n        <Route path=\"/admin/:filterType\"\r\n          render = {() => (\r\n            //withAuth makes it so you get redirected to login if you are not logged in trying to access it\r\n            <WithAdminAuth>\r\n              <AdminLayout>\r\n                  <Admin/>\r\n              </AdminLayout>\r\n            </WithAdminAuth>\r\n          )}/>\r\n        <Route path=\"/admin\"\r\n          render = {() => (\r\n            //withAuth makes it so you get redirected to login if you are not logged in trying to access it\r\n            <WithAdminAuth>\r\n              <AdminLayout>\r\n                  <Admin/>\r\n              </AdminLayout>\r\n            </WithAdminAuth>\r\n          )}/>\r\n        <Route path=\"/products/:filterType\" render={() => (\r\n          <MainLayout>\r\n            <Search />\r\n          </MainLayout>\r\n        )} />\r\n        <Route exact path=\"/products\" render={() => (\r\n          <MainLayout>\r\n            <Search />\r\n          </MainLayout>\r\n        )} />\r\n        \r\n        <Route path=\"/product/:productID\" render={() => (\r\n          <MainLayout>\r\n            <ProductDetails />\r\n          </MainLayout>\r\n        )} />\r\n         <Route path=\"/cart\" render = {() => (\r\n            <MainLayout>\r\n            <Cart />\r\n          </MainLayout>\r\n        )}/>\r\n        <Route path=\"/aboutme\" render = {() => (\r\n            <MainLayout>\r\n            <AboutMe />\r\n          </MainLayout>\r\n        )}/>\r\n        <Route path=\"/gallery\" render = {() => (\r\n            <MainLayout>\r\n            <Gallery />\r\n          </MainLayout>\r\n        )}/>\r\n        <Route path=\"/contactme\" render = {() => (\r\n            <MainLayout>\r\n            <ContactMe />\r\n          </MainLayout>\r\n        )}/>\r\n        <Route path=\"/register\" \r\n          render =  {() => (\r\n              <MainLayout>\r\n              <Register/>\r\n            </MainLayout>\r\n        )}/>\r\n        <Route path=\"/recovery\" \r\n          render = {() => (\r\n              <MainLayout>\r\n              <Recovery />\r\n            </MainLayout>\r\n        )}/>\r\n        <Route path=\"/login\" \r\n        //if currentUser exisits, redirect to homepage, i guess ? means exist lol\r\n          render =  {() => (\r\n              <MainLayout>\r\n              <Login/>\r\n            </MainLayout>\r\n        )}/>\r\n        <Route path=\"/dashboard\" \r\n          render = {() => (\r\n            //withAuth makes it so you get redirected to login if you are not logged in trying to access it\r\n            <WithAuth>\r\n              <MainLayout>\r\n                <Dashboard />\r\n              </MainLayout>\r\n            </WithAuth>\r\n        )}/>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ user }) => ({\r\n  currentUser: user.currentUser\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setCurrentUser: user => dispatch(setCurrentUser(user))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n",["277","278"],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\redux\\createStore.js",["279"],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\redux\\rootReducer.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\redux\\rootSaga.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\redux\\User\\user.actions.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\hoc\\withAuth.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\layouts\\MainLayout.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\layouts\\AdminLayout.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\hoc\\withAdminAuth.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\layouts\\HomepageLayout.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\layouts\\DashboardLayout.js",[],["280","281"],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\components\\AdminToolbar\\index.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\pages\\Search\\index.js",["282"],"import React from 'react';\r\nimport ProductResults from './../../components/ProductResults';\r\n\r\nconst Search = ({ }) => {\r\n    return(\r\n        <div className=\"searchPage\">\r\n            <ProductResults />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Search","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\pages\\Gallery\\index.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\pages\\Homepage\\index.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\pages\\ContactMe\\index.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\pages\\Login\\index.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\pages\\Admin\\index.js",["283"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addProductStart, fetchProductsStart, deleteProductStart, setProducts } from './../../redux/Products/products.actions.js'\r\nimport Modal from './../../components/Modal';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport FormInput from './../../components/forms/FormInput';\r\nimport FormSelect from './../../components/forms/FormSelect';\r\nimport Button from './../../components/forms/Button';\r\nimport LoadMore from './../../components/Loadmore';\r\nimport CKEditor from 'ckeditor4-react';\r\nimport './styles.scss';\r\n\r\nconst mapState = ({ productsData }) => ({\r\n    products: productsData.products\r\n});\r\n\r\nconst Admin = props => {\r\n    const { products } = useSelector(mapState);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [hideModal, setHideModal] = useState(true);\r\n    const { filterType } = useParams();\r\n    const [productCategory, setProductCategory] = useState('');\r\n    const [productName, setProductName] = useState('');\r\n    const [productThumbnail, setProductThumbnail] = useState('');\r\n    const [productPrice, setProductPrice] = useState(0);\r\n    const [productDescription, setProductDescription] = useState('');\r\n\r\n    const { data, queryDoc, isLastPage } = products;\r\n    \r\n    useEffect(() => {\r\n        console.log(filterType);\r\n        dispatch(fetchProductsStart({ filterType })\r\n        )\r\n        return () => {\r\n            dispatch(setProducts([]))\r\n        }\r\n    }, [filterType]);\r\n    \r\n\r\n\r\n    const toggleModal = () => setHideModal(!hideModal);\r\n    \r\n    const congifModal = {\r\n        hideModal,\r\n        toggleModal\r\n    };\r\n\r\n    const resetForm = () => {\r\n        setHideModal(true);\r\n        setProductCategory('');\r\n        setProductName('');\r\n        setProductThumbnail('');\r\n        setProductPrice(0);\r\n        setProductDescription('');\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        dispatch(\r\n            addProductStart({\r\n            productCategory,\r\n            productName,\r\n            productThumbnail,\r\n            productPrice,\r\n            productDescription\r\n        })\r\n        );\r\n        //to close to modal and reset page to see the new product\r\n        resetForm();\r\n    }\r\n\r\n    const handleFilter = (e) => {\r\n        const nextFilter = e.target.value;\r\n        history.push(`/admin/${nextFilter}`);\r\n    };\r\n\r\n    const configFilters = {\r\n        defaultValue: filterType,\r\n          options: [{\r\n            name: 'Show All',\r\n            value: ''\r\n          }, {\r\n            name: 'Wallet',\r\n            value: 'wallet'\r\n          }, {\r\n          name: 'Tote Bags',\r\n          value: 'tote-bags'\r\n          }, {\r\n          name: 'Guitar Straps',\r\n          value: 'guitar-straps'\r\n          }, {\r\n          name: 'Belts',\r\n          value: 'belts'\r\n      }, {\r\n          name: 'Other',\r\n          value: 'other'\r\n      }], handleChange: handleFilter\r\n      };\r\n\r\n    const handleLoadMore = () => {\r\n        dispatch(\r\n            fetchProductsStart({\r\n                filterType,\r\n                startAfterDoc: queryDoc, \r\n                presistProducts: data\r\n            })\r\n        );\r\n    };\r\n\r\n    const configLoadMore = {\r\n        onLoadMoreEvt: handleLoadMore\r\n    };\r\n\r\n    return(\r\n        <div className=\"admin\">\r\n            <div className=\"callToActions\">\r\n                <ul>\r\n                    <li>\r\n                        <h1>\r\n                            Manage Products\r\n                        </h1>\r\n                    </li>\r\n                    <li>\r\n                        <h2>\r\n                            Search Your Product Type\r\n                        </h2>\r\n                    <FormSelect {...configFilters} />\r\n                    </li>\r\n                    <li>\r\n                        <Button onClick={() => toggleModal()}>\r\n                            Add new product\r\n                        </Button>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <Modal {...congifModal}>\r\n\r\n                <div className=\"addNewProductForm\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <h2>\r\n                            Add new product\r\n                        </h2>\r\n                        <FormSelect\r\n                            label=\"Category\"\r\n                            options = {[\r\n                            {   value: '',\r\n                                name: \"Select Category\"\r\n                            }, {\r\n                                value: \"wallet\",\r\n                                name: \"Wallet\"\r\n                            }, {\r\n                                value: \"guitar-straps\",\r\n                                name: \"Guitar Straps\"\r\n                            }, {\r\n                                value: \"tote-bags\",\r\n                                name: \"Tote Bags\"\r\n                            }, {\r\n                                value: \"belts\",\r\n                                name: \"Belts\"\r\n                            }, {\r\n                                value: \"other\",\r\n                                name: \"Other\"\r\n                            }]}\r\n                            handleChange={e => setProductCategory(e.target.value)}\r\n                            />\r\n                            \r\n                            <FormInput\r\n                            label=\"Name\"\r\n                            type=\"text\"\r\n                            value={productName}\r\n                            handleChange={e => setProductName(e.target.value)}\r\n                            />\r\n\r\n                            <FormInput \r\n                                label=\"Main image URL\"\r\n                                type=\"url\"\r\n                                value={productThumbnail}\r\n                                handleChange={e => setProductThumbnail(e.target.value)}\r\n                            />\r\n\r\n                           <FormInput \r\n                                label=\"Price\"\r\n                                type=\"number\"\r\n                                min=\"0.00\"\r\n                                max=\"10000.00\"\r\n                                step=\"1\"\r\n                                value={productPrice}\r\n                                handleChange={e => setProductPrice(e.target.value)}\r\n                            />\r\n                            <CKEditor\r\n                            //on a change, use the setter we made, and the evt.editor.getData() is from the dependicy itself\r\n                            onChange={evt => setProductDescription(evt.editor.getData())}\r\n                            />\r\n                            <Button type=\"submit\">\r\n                                Add product\r\n                            </Button>  \r\n                    </form>\r\n                </div>\r\n            </Modal>\r\n            \r\n            <div className=\"manageProducts\">\r\n                <table border=\"0\" cellPadding=\"0\" cellSpacing=\"0\">\r\n                    <tbody> \r\n                        <tr>\r\n                            <td>\r\n                                <table className=\"results\" border=\"0\" cellPadding=\"10\" cellSpacing=\"0\">\r\n                                    <tbody>\r\n                                        {(Array.isArray(data) && data.length >0) && data.map((product, index) => {\r\n                                            const { \r\n                                                productName,\r\n                                                productThumbnail,\r\n                                                productPrice,\r\n                                                productCategory,\r\n                                                documentID\r\n                                            } = product;\r\n                                            return (\r\n                                                <tr key={index}>\r\n                                                    <td>\r\n                                                        <img src={productThumbnail} alt=\"Thumbnail\"/>\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {productName}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        ${productPrice}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {productCategory}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <Button onClick={() => dispatch(deleteProductStart(documentID))}>\r\n                                                            Delete\r\n                                                        </Button>\r\n                                                    </td>\r\n                                                </tr>\r\n        \r\n                                            )\r\n                                        })}\r\n                                    </tbody>\r\n                                    {!isLastPage && (\r\n                                        <LoadMore {...configLoadMore}/>\r\n                                    )}\r\n                                </table>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                \r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Admin;","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\pages\\AboutMe\\index.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\pages\\Recovery\\index.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\pages\\Products\\index.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\pages\\Register\\index.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\pages\\Dashboard\\index.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\redux\\User\\user.reducer.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\redux\\User\\user.sagas.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\redux\\User\\user.types.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\redux\\Products\\products.reducer.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\redux\\Products\\products.sagas.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\redux\\Products\\products.actions.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\customHooks\\index.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\components\\header\\index.js",["284"],"import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"./styles.scss\";\r\nimport { Link } from 'react-router-dom';\r\nimport { signOutUserStart } from './../../redux/User/user.actions';\r\nimport { selectCartItemsCount } from './../../redux/Cart/cart.selectors'; \r\n\r\nconst mapState = (state) => ({\r\n    currentUser: state.user.currentUser,\r\n    totalNumCartItems: selectCartItemsCount(state)\r\n});\r\n\r\nconst Header = props => {\r\n    const dispatch = useDispatch();\r\n    const { currentUser, totalNumCartItems } = useSelector(mapState);\r\n\r\n    const signOut = () => {\r\n        dispatch(signOutUserStart());\r\n    }\r\n      \r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"wrap\">\r\n                <div className=\"logo\">\r\n                    <Link to=\"/\">\r\n                    <h1>Logo</h1>\r\n                    </Link>\r\n                </div>\r\n\r\n                <div className=\"rightSide-Wrapper\">    \r\n                        <ul>\r\n                           \r\n                            {currentUser && [ \r\n                            <li>\r\n                                <Link to=\"products\">Products</Link>\r\n                            </li>,\r\n                            <li>\r\n                                <Link exact to=\"gallery\">Gallery</Link>\r\n                            </li>,\r\n                            <li>\r\n                                <Link to=\"contactme\">Contact Me</Link>\r\n                            </li>,\r\n                            <li>\r\n                                <Link to=\"aboutme\">About Me</Link>\r\n                            </li>,\r\n                            <li>\r\n                                <Link to=\"dashboard\">My Account</Link>\r\n                            </li> ,\r\n                            <li>\r\n                                <span onClick={() => signOut()}>\r\n                                LogOut\r\n                                </span>\r\n                            </li>\r\n                            ]}\r\n                             \r\n                        {!currentUser && [\r\n                            <li>\r\n                                <Link to=\"products\">Products</Link>\r\n                            </li>,\r\n                            <li>\r\n                                    <Link to=\"gallery\">Gallery</Link>\r\n                            </li>,\r\n                            <li>\r\n                                <Link to=\"contactme\">Contact Me</Link>\r\n                            </li>,\r\n                            <li>\r\n                                <Link to=\"aboutme\">About Me</Link>\r\n                            </li>, \r\n                            <li>\r\n                                <Link to=\"login\"> Login</Link>\r\n                            </li>\r\n                            ]}\r\n                            <li>\r\n                                <Link to=\"/cart\">\r\n                                    Cart ({totalNumCartItems})\r\n                                </Link>\r\n                            </li>\r\n                            </ul>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nHeader.defaultProps = {\r\n    currentUser: null\r\n};\r\n\r\n\r\n//the connect func was imported, and it calls the function we wrote above and thats how it functionally\r\n//goes through the code\r\nexport default Header;\r\n\r\n","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\components\\VerticalNav\\index.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\redux\\User\\user.helpers.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\redux\\Products\\products.types.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\firebase\\utils.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\redux\\Products\\products.helpers.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\components\\ProductResults\\index.js",["285","286"],"import React, { useEffect }from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { fetchProductsStart } from \"../../redux/Products/products.actions\";\r\nimport LoadMore from './../Loadmore';\r\nimport Product from './Product';\r\nimport FormSelect from './../forms/FormSelect';\r\nimport './styles.scss';\r\n\r\nconst mapState = ({ productsData }) => ({\r\n    products: productsData.products\r\n});\r\n\r\nconst ProductResults = ({ }) => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    //useParams lets you deconstruct variables to use elsewhere\r\n    const { filterType } = useParams();\r\n    const { products } = useSelector(mapState);\r\n    \r\n    //products is a objectm so you have to destucture it from the objext to use it\r\n    const { data, queryDoc, isLastPage } = products;\r\n\r\n    useEffect(() => {\r\n        console.log(filterType);\r\n        dispatch(fetchProductsStart({ filterType })\r\n        )\r\n    }, [filterType]);\r\n\r\n    const handleFilter = (e) => {\r\n        const nextFilter = e.target.value;\r\n        history.push(`/products/${nextFilter}`);\r\n    };\r\n\r\n\r\n\r\n    if(!Array.isArray(data)) return null;\r\n\r\n    const configFilters = {\r\n        defaultValue: filterType,\r\n          options: [{\r\n            name: 'Show All',\r\n            value: ''\r\n          }, {\r\n            name: 'Wallet',\r\n            value: 'wallet'\r\n          }, {\r\n          name: 'Tote Bags',\r\n          value: 'tote-bags'\r\n          }, {\r\n          name: 'Guitar Straps',\r\n          value: 'guitar-straps'\r\n          }, {\r\n          name: 'Belts',\r\n          value: 'belts'\r\n      }, {\r\n          name: 'Other',\r\n          value: 'other'\r\n      }], handleChange: handleFilter\r\n      };\r\n\r\n      const handleLoadMore = () => {\r\n        dispatch(\r\n            fetchProductsStart({ \r\n                filterType,\r\n                startAfterDoc: queryDoc,\r\n                presistProducts: data\r\n            })\r\n        )\r\n      };\r\n\r\n    const configLoadMore = {\r\n        onLoadMoreEvt: handleLoadMore\r\n    }\r\n\r\n    if(data.length < 1){\r\n        return (\r\n            <div className=\"noResults\">\r\n                <h1>\r\n                    Browse Products\r\n                </h1>\r\n                <FormSelect {...configFilters} />\r\n                <p>\r\n                    No Search Results\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n    return(\r\n        <div className=\"products\">\r\n            <h1>\r\n                Browse Products\r\n            </h1>\r\n\r\n            <FormSelect {...configFilters} />\r\n\r\n            <div className=\"productResults\">\r\n            {data.map((products, index) => {\r\n                const { productThumbnail, productName, productPrice } = products;\r\n                //this check makes sure we have all three important components\r\n                if(!productThumbnail || !productName || typeof productPrice === 'undefined') return null;\r\n                \r\n                const configProduct = {\r\n                    ...products\r\n                };\r\n\r\n                return(\r\n                    <Product {...configProduct} />\r\n                );\r\n            })}\r\n            </div>\r\n            {!isLastPage && (\r\n                <LoadMore {...configLoadMore}/>\r\n            )}\r\n             \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductResults;","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\Utils\\index.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\components\\Modal\\index.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\components\\SignIn\\index.js",["287"],"import React, { useState, useEffect } from 'react';\r\n//useState lets us use a passed in state in our componenent\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { emailSignInStart, googleSignInStart} from './../../redux/User/user.actions';\r\n\r\nimport './styles.scss';\r\nimport Button from \"./../forms/Button\";\r\nimport FormInput from \"./../forms/FormInput\"\r\nimport AuthWrapper from './../AuthWrapper';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nconst mapState = ({ user }) => ({\r\n    currentUser: user.currentUser,\r\n    signInWithGoogle: user.signInWithGoogle\r\n})\r\n\r\nconst SignIn = props => {\r\n    //definting dispatch to use useDispatch as a function\r\n    const history = useHistory();\r\n    const { currentUser } = useSelector(mapState);\r\n    const dispatch = useDispatch();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [errors, setErrors] = useState([]);\r\n\r\n    //if that thing called in the [] changes, then use effect code is run with the payload\r\n    // of whats in the []\r\n    useEffect(() => {\r\n        if(currentUser) {\r\n            resetForm();\r\n            history.push('/');\r\n        }\r\n    }, [currentUser]);\r\n\r\n    const resetForm = () => {\r\n        setEmail('');\r\n        setPassword('');\r\n        setErrors([]);\r\n    }\r\n\r\n    //handleSubmit makes it so the page wont reload on \r\n    //button click, called in form onSubmit\r\n    const handleSubmit = e => {\r\n        //prevents page reload after hitting the submit button\r\n        e.preventDefault();\r\n        dispatch(emailSignInStart({ email, password}));\r\n    }\r\n    \r\n    const handleGoogleSignIn = () => {\r\n        dispatch(googleSignInStart())\r\n    }\r\n\r\n        const configAuthWrapper = {\r\n            headline: 'Login'\r\n        };\r\n\r\n        return(\r\n        <AuthWrapper {...configAuthWrapper}>\r\n            <div className =\"formWrap\">\r\n                <form onSubmit={handleSubmit}>\r\n                <FormInput \r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value= {email}\r\n                        placeholder=\"Enter Email\"\r\n                        handleChange={e => setEmail(e.target.value)}\r\n                    />\r\n                    <FormInput \r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value= { password }\r\n                        placeholder=\"Enter Password\"\r\n                        handleChange={e => setPassword(e.target.value)}\r\n                    />\r\n                    {errors.length > 0 && (\r\n                        <ul  >\r\n                            {errors.map((err,index) => {\r\n                                return (\r\n                                    <li id=\"errorMessage\" key={e => setErrors(e.target.value)}>\r\n                                        {err}\r\n                                    </li>\r\n                                    );    \r\n                                })}\r\n                            </ul>\r\n                        )}\r\n                    <Link id=\"forgotPassword\" to=\"/recovery\">\r\n                        Forgot Password?\r\n                    </Link>\r\n                    <Button type=\"submit\">\r\n                        LogIn\r\n                    </Button>\r\n                    \r\n                    <Button onClick={handleGoogleSignIn}>\r\n                        Sign In With Goole\r\n                    </Button>\r\n                    <h1>Or</h1>\r\n                    <div className=\"socialSignIn\">\r\n                    <Link id=\"register\" to=\"/register\">\r\n                        Sign up\r\n                    </Link>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </AuthWrapper>\r\n    );\r\n}\r\n\r\n//tutorial has this wrapping in withRouter, but that errors out on me so idk, still works\r\nexport default SignIn;","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\components\\EmailPassword\\index.js",["288"],"import React, { useState, useEffect } from 'react';\r\nimport \"./styles.scss\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { resetPasswordStart, resetUserState } from './../../redux/User/user.actions';\r\n\r\nimport AutherWrapper from \"./../AuthWrapper\";\r\nimport FormInput from \"./../forms/FormInput\";\r\nimport Button from \"./../forms/Button\";\r\n\r\n\r\nconst mapState = ({ user }) => ({\r\n    resetPasswordSuccess: user.resetPasswordSuccess,\r\n    userErr: user.userErr\r\n})\r\n\r\nconst EmailPassword = props => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { resetPasswordSuccess, userErr } = useSelector(mapState);\r\n    const [email, setEmail] = useState('');\r\n    const [errors, setErrors] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if(resetPasswordSuccess){\r\n            //we need to reset the userState so that they can access the forget \r\n            //password page again if they need to\r\n            dispatch(resetUserState());\r\n            history.push('/login');\r\n        }\r\n    },\r\n    [resetPasswordSuccess]);\r\n\r\n    useEffect(() => {\r\n        if(Array.isArray(userErr) && userErr.length > 0){\r\n            setErrors(userErr);\r\n        }\r\n    },\r\n    [userErr]);\r\n  \r\n    const handleSubmit = e => {\r\n        //prevents from reloading the page\r\n        e.preventDefault();\r\n        dispatch(resetPasswordStart({ email }))\r\n    \r\n    }\r\n    \r\n    const configAuthWrapper = {\r\n        headline: \"Password Recovery\"\r\n    };\r\n\r\n    return(\r\n        <AutherWrapper {...configAuthWrapper}>\r\n            <div className=\"formWrap\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <FormInput \r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    placeholder=\"Enter Email\"\r\n                    handleChange={e => setEmail(e.target.value)}\r\n                    />\r\n                    {errors.length > 0 && (\r\n                    <ul id=\"errorMessage\" >\r\n                        {errors.map((e,index) => {\r\n                            return (\r\n                                <li key={index}>\r\n                                {e}\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                )}\r\n\r\n                    <Button type=\"submit\">\r\n                        Email Password\r\n                    </Button>\r\n                </form>\r\n                \r\n            </div>\r\n        </AutherWrapper>\r\n    );\r\n}\r\n\r\n//withRouter gives us access to the history stored in reactRouter\r\nexport default EmailPassword;","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\components\\directory\\index.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\components\\Loadmore\\index.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\components\\SignUp\\index.js",["289"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport './styles.scss';\r\nimport Button from \"./../forms/Button\";\r\nimport FormInput from \"./../forms/FormInput\";\r\nimport AuthWrapper from './../AuthWrapper';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { signUpUserStart, googleSignInStart } from '../../redux/User/user.actions';\r\n\r\nconst mapState = ({ user }) => ({\r\n    currentUser: user.currentUser,\r\n    userErr: user.userErr\r\n});\r\n\r\nconst SignUp = props => {\r\n    const { currentUser, userErr } = useSelector(mapState);\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [displayName, setDisplayName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [errors, setErrors] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if(currentUser) {\r\n            reset();\r\n            history.push('/');\r\n        }\r\n    }, [currentUser]);\r\n\r\n    useEffect(() => {\r\n        if(Array.isArray(userErr) && userErr.length > 0) {\r\n            setErrors(userErr);\r\n        }\r\n    }, [userErr]);\r\n    //Handle change takes in name and value, and on each change, value gets updated, and dispalyed on the screen\r\n    const reset = () => {\r\n        setDisplayName('');\r\n        setEmail('');\r\n        setPassword('');\r\n        setConfirmPassword('');\r\n        setErrors([]);\r\n    }\r\n\r\n    const handleGoogleSignIn = () => {\r\n        dispatch(googleSignInStart())\r\n    }\r\n\r\n     const handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        dispatch(signUpUserStart({\r\n            displayName,\r\n            email,\r\n            password,\r\n            confirmPassword\r\n        }));\r\n    }\r\n        \r\n    const configAuthWrapper = {\r\n        headline: 'No account? sign up here'\r\n    };\r\n\r\n\r\n    return(\r\n        <AuthWrapper {...configAuthWrapper}>\r\n            <div className =\"formWrap\">\r\n                <form onSubmit={handleFormSubmit}>\r\n                        <FormInput \r\n                        type=\"text\"\r\n                        name=\"displayName\"\r\n                        value={displayName}\r\n                        placeholder= \"Enter Name\"\r\n                        handleChange={e => setDisplayName(e.target.value)} />\r\n\r\n                        <FormInput \r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        placeholder= \"Enter email\"\r\n                        handleChange={e => setEmail(e.target.value)} />\r\n\r\n                        <FormInput \r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        placeholder= \"Enter Password\"\r\n                        handleChange={e => setPassword(e.target.value)} />\r\n\r\n                        <FormInput \r\n                        type=\"password\"\r\n                        name=\"confirmPassword\"\r\n                        value={confirmPassword}\r\n                        placeholder= \"Confirm Password\"\r\n                        handleChange={e => setConfirmPassword(e.target.value)} />\r\n\r\n                        <Button type=\"Submit\">\r\n                            Sign Up\r\n                        </Button>\r\n                        {errors.length > 0 && (\r\n                        <ul>\r\n                            {errors.map((err,index) => {\r\n                                return (\r\n                                    <li key={index}>\r\n                                        {err}\r\n                                    </li>\r\n                                    );    \r\n                                })}\r\n                            </ul>\r\n                        )}\r\n                        <h1>or</h1>\r\n\r\n                        <Button onClick={handleGoogleSignIn}>\r\n                            Sign Up With Google\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </AuthWrapper>\r\n    );\r\n}\r\n\r\n//wrapping it withRouter gives us access to props.history\r\nexport default SignUp;","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\components\\forms\\Button\\index.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\components\\forms\\FormInput\\index.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\components\\forms\\FormSelect\\index.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\customHooks\\useAuth.js",["290"],"//all custom hooks should be prefixed with use\r\nimport { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n//this custom hook will be used to\r\n\r\n\r\n//deconstructed the currentUser\r\nconst mapState = ({ user }) => ({\r\n    currentUser: user.currentUser\r\n});\r\n\r\n\r\n//we want to use the UseEffect react hook, and if the current user is\r\n// null, that means the user is not logged in, so if they are not logged in, they\r\n// need to be redirected, which is what this hook does\r\nconst useAuth = props => {\r\n    const { currentUser } = useSelector(mapState);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        //if current user is null, then redirect user to log in page\r\n        if(!currentUser) {\r\n            //this redirects the user to the login page if they are trying to access a page without they shouldnt\r\n            history.push('/login');\r\n        }\r\n    }, [currentUser]);\r\n    \r\n    return currentUser;\r\n};\r\n\r\nexport default useAuth;\r\n\r\n","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\customHooks\\useAdminAuth.js",["291"],"import { useEffect, } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { checkUserIsAdmin } from './../Utils/index';\r\nconst mapState = ( { user }) => ({\r\n    currentUser: user.currentUser\r\n});\r\n\r\n//useAdminAuth returns true if the user is admin, and if the\r\n//user is not admin, it will redirect the user to ./login\r\nconst useAdminAuth = props => {\r\n    const { currentUser } = useSelector(mapState);\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        if(!checkUserIsAdmin(currentUser)) {\r\n            history.push('./login');\r\n        }\r\n\r\n    }, [currentUser]);\r\n    return currentUser\r\n}\r\n\r\nexport default useAdminAuth;","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\firebase\\config.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\components\\UserProfile\\index.js",["292"],"\r\nimport React from 'react';\r\nimport './styles.scss';\r\nimport userIMG from './../../assets/user.png';\r\n\r\nconst UserProfile = props => {\r\n  const { currentUser } = props;\r\n  const { displayName } = currentUser;\r\n\r\n  return (\r\n    <div className=\"userProfile\">\r\n      <ul>\r\n        <li>\r\n          <div className=\"img\">\r\n            <img src={userIMG} alt=\"Profile Picture\"/>\r\n          </div>\r\n        </li>\r\n        <li>\r\n          <span className=\"displayName\">\r\n            {displayName && displayName}\r\n          </span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserProfile;","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\components\\AuthWrapper\\index.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\components\\ProductResults\\Product\\index.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\pages\\ProductDetails\\index.js",["293"],"import React from 'react';\r\nimport ProductCard from './../../components/ProductCard';\r\nconst ProductDetails = ({}) => {\r\n    return(\r\n        <div>\r\n            <ProductCard />\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default ProductDetails;","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\components\\ProductCard\\index.js",["294","295"],"import React, { useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchProductStart, setProduct } from './../../redux/Products/products.actions';\r\nimport Button from './../forms/Button';\r\nimport { addProduct } from './../../redux/Cart/cart.actions';\r\nimport './styles.scss';\r\n\r\nconst mapState = state => ({\r\n    product: state.productsData.product\r\n});\r\n\r\nconst configAddToCardBtn = {\r\n    type: 'button'\r\n}\r\n\r\n\r\nconst ProductCard = ({}) => {\r\n\r\n    const { product } = useSelector(mapState);\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { productID } = useParams();\r\n    \r\n    const { \r\n        productName,\r\n        productThumbnail,\r\n        productPrice,\r\n        productDescription,\r\n    } = product;\r\n\r\n    const handleAddToCart = (product) => {\r\n        if(!product) return;\r\n        dispatch(addProduct(product))\r\n        history.push('/cart')\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            fetchProductStart(productID)\r\n        )\r\n\r\n        return () => {\r\n            dispatch(setProduct({}))\r\n        }\r\n\r\n    }, []);\r\n\r\n    return(\r\n        <div className=\"productCard\">\r\n            <div className=\"hero\">\r\n                <img src={productThumbnail} alt=\"thumbnail\"/>\r\n            </div>\r\n            <div className=\"productDetails\">\r\n                <ul>\r\n                    <li>\r\n                        <h1>\r\n                            {productName}\r\n                        </h1>\r\n                    </li>\r\n                    <li>\r\n                        <span>\r\n                            ${productPrice}\r\n                        </span>      \r\n                    </li>\r\n                    <li>\r\n                    \r\n                    </li>\r\n                    <li>\r\n                        <table className=\"bottomText\" border=\"0\" cellSpacing=\"0\" cellPadding=\"0\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <Button id=\"button\" {...configAddToCardBtn} onClick={() => handleAddToCart(product)}>\r\n                                            Add To Cart\r\n                                        </Button>\r\n                                    </td>\r\n                                    <td>\r\n                                        Or\r\n                                    </td>\r\n                                    <td>\r\n                                    <h3 className=\"backArrow\" onClick={() => history.goBack()}>\r\n                                        Return\r\n                                    </h3>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </li>\r\n                    <li>\r\n                        <span dangerouslySetInnerHTML={{__html: productDescription}} />\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductCard;","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\redux\\Cart\\cart.reducer.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\redux\\Cart\\cart.types.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\redux\\Cart\\cart.actions.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\redux\\Cart\\cart.utils.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\redux\\Cart\\cart.selectors.js",[],"C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\pages\\Cart\\index.js",["296"],"import React from 'react';\r\nimport Checkout from './../../components/Checkout';\r\n\r\nconst Cart = ({}) => {\r\n    return (\r\n        <div>\r\n            <Checkout />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cart;","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\components\\Checkout\\index.js",["297"],"import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectCartItems, selectCartTotal } from './../../redux/Cart/cart.selectors';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from './../forms/Button';\r\nimport Item from './Item';\r\nimport './styles.scss';\r\n\r\nconst mapState = createStructuredSelector({\r\n    cartItems: selectCartItems,\r\n    total: selectCartTotal\r\n});\r\n\r\nconst Checkout = ({}) => {\r\n    const history = useHistory();\r\n    const { cartItems, total } = useSelector(mapState);\r\n    return(\r\n        <div className=\"checkout\">\r\n            <h1>\r\n                Checkout\r\n            </h1>\r\n            <div className=\"cart\">\r\n                {cartItems.length > 0 ? (\r\n                <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n                    <tbody>\r\n                        <tr>\r\n                        <table className=\"checkoutHeader\"  border=\"0\" cellpadding=\"10\" cellspacing=\"0\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <th>\r\n                                        Product\r\n                                    </th>\r\n                                    <th>\r\n                                        Description\r\n                                    </th>\r\n                                    <th>\r\n                                        Quantity\r\n                                    </th>\r\n                                    <th>\r\n                                        Price\r\n                                    </th>\r\n                                    <th>\r\n                                        Remove\r\n                                    </th>\r\n                                </tr>\r\n                            </tbody>\r\n                            </table>\r\n                        </tr>\r\n                        <tr>\r\n                            <table border=\"0\" cellPadding=\"10\" cellSpacing=\"0\">\r\n                                <tbody>\r\n                                    {cartItems.map((item, index) => {\r\n                                        return (\r\n                                            <tr key={index}>\r\n                                                <td className=\"itemWrapper\">\r\n                                                    <Item {...item} />\r\n                                                </td>\r\n                                            </tr>\r\n                                        );\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                            <table border=\"0\" cellPadding=\"0\" cellSpacing=\"0\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>\r\n                                        <table border=\"0\" cellPadding=\"10\" cellSpacing=\"0\">\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                <td>\r\n                                                <h3 id=\"total\">\r\n                                                    Total: ${total}\r\n                                                </h3>\r\n                                                </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                            </table>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <Button onClick={() => history.goBack('/product')}>\r\n                                                Continue Shopping\r\n                                            </Button>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Button>\r\n                                                Checkout\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                ) : (\r\n                    <div className=\"noItem\">\r\n                    <p>\r\n                        You have no items in your cart.\r\n                    </p>\r\n                    <Button id=\"noItemButton\"onClick={() => history.goBack()}>\r\n                        ContinueShopping\r\n                    </Button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Checkout;","C:\\Users\\Luke\\Desktop\\Mercil-Leather\\src\\components\\Checkout\\Item\\index.js",["298","299"],"import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { handleRemoveCartItem } from '../../../redux/Cart/cart.utils';\r\nimport { removeCartItem, addProduct,reduceCartItem } from './../../../redux/Cart/cart.actions';\r\n\r\nconst Item = (product) => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const {\r\n        productName,\r\n        productThumbnail,\r\n        productPrice,\r\n        quantity,\r\n        documentID\r\n    } = product;\r\n    \r\n    const handleRemoveItem = (documentID) => {\r\n        dispatch(\r\n            removeCartItem({\r\n                documentID\r\n            })\r\n        );\r\n    }\r\n\r\n    const handleAddProduct = (product) => {\r\n        dispatch(\r\n            addProduct(product)\r\n        )\r\n    }\r\n\r\n    const handleRemoveProduct = (product) => {\r\n        dispatch(\r\n            reduceCartItem(product)\r\n        )\r\n    }\r\n    \r\n    return(\r\n        <table className=\"cartItem\" border=\"0\" cellSpacing=\"0\" cellPadding=\"0\">\r\n            <tbody>\r\n                <tr>\r\n                    <td>\r\n                        <img src={productThumbnail} alt={productName} />\r\n                    </td>\r\n                    <td>\r\n                        {productName}\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"arrow\"  onClick={() => handleRemoveProduct(product)}>\r\n                            {`<  `}\r\n                        </span>\r\n                        <span>\r\n                            {quantity}\r\n                        </span>\r\n                        <span  className=\"arrow\" onClick={() => handleAddProduct(product)}>\r\n                            {`  >`}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        ${productPrice}\r\n                    </td>\r\n                    <td align=\"center\">\r\n                        <span className=\"cartBtn\" onClick={() => handleRemoveItem(documentID)}>\r\n                            X\r\n                        </span>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default Item;",{"ruleId":"300","severity":1,"message":"301","line":44,"column":6,"nodeType":"302","endLine":44,"endColumn":8,"suggestions":"303"},{"ruleId":"304","replacedBy":"305"},{"ruleId":"306","replacedBy":"307"},{"ruleId":"308","severity":1,"message":"309","line":18,"column":1,"nodeType":"310","endLine":21,"endColumn":3},{"ruleId":"304","replacedBy":"311"},{"ruleId":"306","replacedBy":"312"},{"ruleId":"313","severity":1,"message":"314","line":4,"column":17,"nodeType":"315","messageId":"316","endLine":4,"endColumn":20},{"ruleId":"300","severity":1,"message":"301","line":38,"column":8,"nodeType":"302","endLine":38,"endColumn":20,"suggestions":"317"},{"ruleId":"318","severity":1,"message":"319","line":1,"column":17,"nodeType":"320","messageId":"321","endLine":1,"endColumn":25},{"ruleId":"313","severity":1,"message":"314","line":14,"column":25,"nodeType":"315","messageId":"316","endLine":14,"endColumn":28},{"ruleId":"300","severity":1,"message":"301","line":28,"column":8,"nodeType":"302","endLine":28,"endColumn":20,"suggestions":"322"},{"ruleId":"300","severity":1,"message":"323","line":34,"column":8,"nodeType":"302","endLine":34,"endColumn":21,"suggestions":"324"},{"ruleId":"300","severity":1,"message":"325","line":32,"column":5,"nodeType":"302","endLine":32,"endColumn":27,"suggestions":"326"},{"ruleId":"300","severity":1,"message":"323","line":30,"column":8,"nodeType":"302","endLine":30,"endColumn":21,"suggestions":"327"},{"ruleId":"300","severity":1,"message":"323","line":28,"column":8,"nodeType":"302","endLine":28,"endColumn":21,"suggestions":"328"},{"ruleId":"300","severity":1,"message":"323","line":19,"column":8,"nodeType":"302","endLine":19,"endColumn":21,"suggestions":"329"},{"ruleId":"330","severity":1,"message":"331","line":15,"column":13,"nodeType":"332","endLine":15,"endColumn":55},{"ruleId":"313","severity":1,"message":"314","line":3,"column":25,"nodeType":"315","messageId":"316","endLine":3,"endColumn":27},{"ruleId":"313","severity":1,"message":"314","line":18,"column":22,"nodeType":"315","messageId":"316","endLine":18,"endColumn":24},{"ruleId":"300","severity":1,"message":"333","line":47,"column":8,"nodeType":"302","endLine":47,"endColumn":10,"suggestions":"334"},{"ruleId":"313","severity":1,"message":"314","line":4,"column":15,"nodeType":"315","messageId":"316","endLine":4,"endColumn":17},{"ruleId":"313","severity":1,"message":"314","line":15,"column":19,"nodeType":"315","messageId":"316","endLine":15,"endColumn":21},{"ruleId":"318","severity":1,"message":"335","line":1,"column":17,"nodeType":"320","messageId":"321","endLine":1,"endColumn":26},{"ruleId":"318","severity":1,"message":"336","line":3,"column":10,"nodeType":"320","messageId":"321","endLine":3,"endColumn":30},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["337"],"no-native-reassign",["338"],"no-negated-in-lhs",["339"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["338"],["339"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected",["340"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["341"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["342"],"React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["343"],["344"],["345"],["346"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'dispatch' and 'productID'. Either include them or remove the dependency array.",["347"],"'useEffect' is defined but never used.","'handleRemoveCartItem' is defined but never used.",{"desc":"348","fix":"349"},"no-global-assign","no-unsafe-negation",{"desc":"350","fix":"351"},{"desc":"350","fix":"352"},{"desc":"353","fix":"354"},{"desc":"355","fix":"356"},{"desc":"353","fix":"357"},{"desc":"353","fix":"358"},{"desc":"353","fix":"359"},{"desc":"360","fix":"361"},"Update the dependencies array to be: [dispatch]",{"range":"362","text":"363"},"Update the dependencies array to be: [dispatch, filterType]",{"range":"364","text":"365"},{"range":"366","text":"365"},"Update the dependencies array to be: [currentUser, history]",{"range":"367","text":"368"},"Update the dependencies array to be: [dispatch, history, resetPasswordSuccess]",{"range":"369","text":"370"},{"range":"371","text":"368"},{"range":"372","text":"368"},{"range":"373","text":"368"},"Update the dependencies array to be: [dispatch, productID]",{"range":"374","text":"375"},[1393,1395],"[dispatch]",[1559,1571],"[dispatch, filterType]",[1007,1019],[1197,1210],"[currentUser, history]",[1095,1117],"[dispatch, history, resetPasswordSuccess]",[1057,1070],[948,961],[629,642],[1181,1183],"[dispatch, productID]"]